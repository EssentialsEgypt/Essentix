{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/ai-roi-forecast-engine.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { useState, useEffect } from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Progress } from \"@/components/ui/progress\"\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Label } from \"@/components/ui/label\"\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\r\nimport { Textarea } from \"@/components/ui/textarea\"\r\nimport {\r\n  TrendingUp, TrendingDown, DollarSign, Target, Calendar, Clock,\r\n  BarChart3, Users, Eye, Zap, Brain, AlertTriangle, CheckCircle,\r\n  Star, ArrowUpRight, ArrowDownRight, RefreshCw, Play, Pause,\r\n  Settings, Download, Share2, Bell, MessageSquare, Instagram,\r\n  Facebook, Mail, Smartphone, Package, Tag, Percent, Activity, History\r\n} from \"lucide-react\"\r\nimport {\r\n  LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid,\r\n  Tooltip, ResponsiveContainer, AreaChart, Area, PieChart, Pie, Cell\r\n} from \"recharts\"\r\n\r\n// Interfaces for data structures\r\ninterface ROIForecast {\r\n  id: string\r\n  productName: string\r\n  productType: 'physical' | 'digital' | 'bundle' | 'flash_sale'\r\n  campaignType: 'instagram' | 'facebook' | 'tiktok' | 'organic' | 'influencer' | 'email' | 'whatsapp'\r\n  budget: number\r\n  predictedRevenue: number\r\n  estimatedSpend: number\r\n  projectedROI: number\r\n  confidenceLevel: number\r\n  breakEvenPoint: number // hours\r\n  dropWindowImpact: number\r\n  creativeStrengthScore?: number\r\n  vipEngagementPotential: number\r\n  reasoning: string[]\r\n  recommendations: string[]\r\n  forecastRanges: {\r\n    bestCase: number\r\n    mostLikely: number\r\n    worstCase: number\r\n  }\r\n  timeframes: {\r\n    '24h': { roi: number; revenue: number; spend: number }\r\n    '3d': { roi: number; revenue: number; spend: number }\r\n    '7d': { roi: number; revenue: number; spend: number }\r\n    '14d': { roi: number; revenue: number; spend: number }\r\n  }\r\n  marketFactors: {\r\n    competitorActivity: string\r\n    cpcTrend: string\r\n    audienceEngagement: string\r\n    seasonalFactor: number\r\n  }\r\n  createdAt: string\r\n  status: 'pending' | 'active' | 'completed'\r\n  actualResults?: {\r\n    actualRevenue: number\r\n    actualSpend: number\r\n    actualROI: number\r\n    accuracy: number\r\n    completedAt: string\r\n  }\r\n}\r\n\r\ninterface ForecastComparison {\r\n  forecasted: ROIForecast\r\n  actual: ROIForecast['actualResults']\r\n  accuracy: number\r\n  variance: number\r\n}\r\n\r\nexport function AIROIForecastEngine() {\r\n  const [forecasts, setForecasts] = useState<ROIForecast[]>([])\r\n  const [comparisons, setComparisons] = useState<ForecastComparison[]>([])\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [activeTab, setActiveTab] = useState<'forecast' | 'history' | 'comparison'>('forecast')\r\n  const [newForecast, setNewForecast] = useState({\r\n    productName: '',\r\n    productType: 'physical' as const,\r\n    campaignType: 'instagram' as const,\r\n    budget: 0,\r\n    description: ''\r\n  })\r\n\r\n  // Load forecast data\r\n  const loadForecastData = async () => {\r\n    try {\r\n      const [forecastsRes, comparisonsRes] = await Promise.all([\r\n        fetch('/api/ai-roi-forecast/forecasts'),\r\n        fetch('/api/ai-roi-forecast/comparisons')\r\n      ])\r\n      \r\n      if (forecastsRes.ok) {\r\n        const forecastsData = await forecastsRes.json()\r\n        setForecasts(forecastsData)\r\n      }\r\n      \r\n      if (comparisonsRes.ok) {\r\n        const comparisonsData = await comparisonsRes.json()\r\n        setComparisons(comparisonsData)\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading forecast data:', error)\r\n    }\r\n  }\r\n\r\n  // Generate new forecast\r\n  const generateForecast = async () => {\r\n    if (!newForecast.productName || newForecast.budget <= 0) return\r\n    \r\n    setIsLoading(true)\r\n    try {\r\n      const response = await fetch('/api/ai-roi-forecast/generate', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(newForecast)\r\n      })\r\n      \r\n      if (response.ok) {\r\n        const forecast = await response.json()\r\n        setForecasts(prev => [forecast, ...prev])\r\n        setNewForecast({\r\n          productName: '',\r\n          productType: 'physical',\r\n          campaignType: 'instagram',\r\n          budget: 0,\r\n          description: ''\r\n        })\r\n      }\r\n    } catch (error) {\r\n      console.error('Error generating forecast:', error)\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  // Complete forecast with actual results\r\n  const completeForecast = async (forecastId: string) => {\r\n    try {\r\n      const response = await fetch(`/api/ai-roi-forecast/complete/${forecastId}`, {\r\n        method: 'POST'\r\n      })\r\n      \r\n      if (response.ok) {\r\n        const updatedForecast = await response.json()\r\n        setForecasts(prev => prev.map(f => f.id === forecastId ? updatedForecast : f))\r\n        await loadForecastData() // Reload comparisons\r\n      }\r\n    } catch (error) {\r\n      console.error('Error completing forecast:', error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadForecastData()\r\n  }, [])\r\n\r\n  const getConfidenceColor = (confidence: number) => {\r\n    if (confidence >= 80) return 'bg-green-100 text-green-800'\r\n    if (confidence >= 60) return 'bg-yellow-100 text-yellow-800'\r\n    return 'bg-red-100 text-red-800'\r\n  }\r\n\r\n  const getROIColor = (roi: number) => {\r\n    if (roi >= 3) return 'text-green-600'\r\n    if (roi >= 2) return 'text-yellow-600'\r\n    return 'text-red-600'\r\n  }\r\n\r\n  const formatCurrency = (amount: number) => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 0\r\n    }).format(amount)\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent\">\r\n            AI ROI Forecast Engine\r\n          </h1>\r\n          <p className=\"text-muted-foreground mt-2\">\r\n            Predict success before you spend a single dollar\r\n          </p>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <Button variant=\"outline\" onClick={loadForecastData}>\r\n            <RefreshCw className=\"w-4 h-4 mr-2\" />\r\n            Refresh\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tabs */}\r\n      <Tabs value={activeTab} onValueChange={(value) => setActiveTab(value as any)}>\r\n        <TabsList className=\"grid w-full grid-cols-3\">\r\n          <TabsTrigger value=\"forecast\">New Forecast</TabsTrigger>\r\n          <TabsTrigger value=\"history\">Forecast History</TabsTrigger>\r\n          <TabsTrigger value=\"comparison\">Accuracy Analysis</TabsTrigger>\r\n        </TabsList>\r\n\r\n        {/* New Forecast Tab */}\r\n        <TabsContent value=\"forecast\" className=\"space-y-6\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n            {/* Forecast Form */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center space-x-2\">\r\n                  <Brain className=\"h-5 w-5\" />\r\n                  <span>Create New Forecast</span>\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"productName\">Product Name</Label>\r\n                  <Input\r\n                    id=\"productName\"\r\n                    placeholder=\"Enter product name...\"\r\n                    value={newForecast.productName}\r\n                    onChange={(e) => setNewForecast(prev => ({ ...prev, productName: e.target.value }))}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"productType\">Product Type</Label>\r\n                    <Select\r\n                      value={newForecast.productType}\r\n                      onValueChange={(value) => setNewForecast(prev => ({ ...prev, productType: value as any }))}\r\n                    >\r\n                      <SelectTrigger>\r\n                        <SelectValue />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"physical\">Physical Product</SelectItem>\r\n                        <SelectItem value=\"digital\">Digital Product</SelectItem>\r\n                        <SelectItem value=\"bundle\">Bundle/Package</SelectItem>\r\n                        <SelectItem value=\"flash_sale\">Flash Sale</SelectItem>\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"campaignType\">Campaign Type</Label>\r\n                    <Select\r\n                      value={newForecast.campaignType}\r\n                      onValueChange={(value) => setNewForecast(prev => ({ ...prev, campaignType: value as any }))}\r\n                    >\r\n                      <SelectTrigger>\r\n                        <SelectValue />\r\n                      </SelectTrigger>\r\n                      <SelectContent>\r\n                        <SelectItem value=\"instagram\">Instagram Ads</SelectItem>\r\n                        <SelectItem value=\"facebook\">Facebook Ads</SelectItem>\r\n                        <SelectItem value=\"tiktok\">TikTok Ads</SelectItem>\r\n                        <SelectItem value=\"organic\">Organic Posts</SelectItem>\r\n                        <SelectItem value=\"influencer\">Influencer Promo</SelectItem>\r\n                        <SelectItem value=\"email\">Email Campaign</SelectItem>\r\n                        <SelectItem value=\"whatsapp\">WhatsApp Broadcast</SelectItem>\r\n                      </SelectContent>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"budget\">Budget (USD)</Label>\r\n                  <Input\r\n                    id=\"budget\"\r\n                    type=\"number\"\r\n                    placeholder=\"Enter budget...\"\r\n                    value={newForecast.budget}\r\n                    onChange={(e) => setNewForecast(prev => ({ ...prev, budget: parseFloat(e.target.value) || 0 }))}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"space-y-2\">\r\n                  <Label htmlFor=\"description\">Additional Details</Label>\r\n                  <Textarea\r\n                    id=\"description\"\r\n                    placeholder=\"Describe your product, target audience, or any special factors...\"\r\n                    value={newForecast.description}\r\n                    onChange={(e) => setNewForecast(prev => ({ ...prev, description: e.target.value }))}\r\n                  />\r\n                </div>\r\n\r\n                <Button \r\n                  onClick={generateForecast} \r\n                  disabled={isLoading || !newForecast.productName || newForecast.budget <= 0}\r\n                  className=\"w-full\"\r\n                >\r\n                  {isLoading ? (\r\n                    <>\r\n                      <RefreshCw className=\"w-4 h-4 mr-2 animate-spin\" />\r\n                      Generating Forecast...\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <Brain className=\"w-4 h-4 mr-2\" />\r\n                      Generate AI Forecast\r\n                    </>\r\n                  )}\r\n                </Button>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* Quick Stats */}\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center space-x-2\">\r\n                  <BarChart3 className=\"h-5 w-5\" />\r\n                  <span>Forecast Insights</span>\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent className=\"space-y-4\">\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <div className=\"text-center p-4 bg-gradient-to-br from-purple-50 to-pink-50 rounded-lg\">\r\n                    <div className=\"text-2xl font-bold text-purple-600\">\r\n                      {forecasts.filter(f => f.status === 'active').length}\r\n                    </div>\r\n                    <div className=\"text-sm text-muted-foreground\">Active Forecasts</div>\r\n                  </div>\r\n                  <div className=\"text-center p-4 bg-gradient-to-br from-green-50 to-blue-50 rounded-lg\">\r\n                    <div className=\"text-2xl font-bold text-green-600\">\r\n                      {comparisons.length}\r\n                    </div>\r\n                    <div className=\"text-sm text-muted-foreground\">Completed</div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex justify-between text-sm\">\r\n                    <span>Average Accuracy</span>\r\n                    <span className=\"font-medium\">\r\n                      {comparisons.length > 0 \r\n                        ? `${(comparisons.reduce((acc, c) => acc + c.accuracy, 0) / comparisons.length).toFixed(1)}%`\r\n                        : 'N/A'\r\n                      }\r\n                    </span>\r\n                  </div>\r\n                  <Progress \r\n                    value={comparisons.length > 0 \r\n                      ? comparisons.reduce((acc, c) => acc + c.accuracy, 0) / comparisons.length \r\n                      : 0\r\n                    } \r\n                    className=\"w-full\" \r\n                  />\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Recent Forecasts */}\r\n          {forecasts.length > 0 && (\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle className=\"flex items-center space-x-2\">\r\n                  <Clock className=\"h-5 w-5\" />\r\n                  <span>Recent Forecasts</span>\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  {forecasts.slice(0, 3).map((forecast) => (\r\n                    <div key={forecast.id} className=\"border rounded-lg p-4\">\r\n                      <div className=\"flex items-center justify-between mb-3\">\r\n                        <div>\r\n                          <h3 className=\"font-semibold\">{forecast.productName}</h3>\r\n                          <p className=\"text-sm text-muted-foreground\">\r\n                            {forecast.campaignType} • {forecast.productType}\r\n                          </p>\r\n                        </div>\r\n                        <Badge className={getConfidenceColor(forecast.confidenceLevel)}>\r\n                          {forecast.confidenceLevel}% Confidence\r\n                        </Badge>\r\n                      </div>\r\n                      \r\n                      <div className=\"grid grid-cols-2 lg:grid-cols-4 gap-4 mb-3\">\r\n                        <div>\r\n                          <div className=\"text-sm text-muted-foreground\">Projected ROI</div>\r\n                          <div className={`text-lg font-bold ${getROIColor(forecast.projectedROI)}`}>\r\n                            {forecast.projectedROI.toFixed(1)}x\r\n                          </div>\r\n                        </div>\r\n                        <div>\r\n                          <div className=\"text-sm text-muted-foreground\">Predicted Revenue</div>\r\n                          <div className=\"text-lg font-bold text-green-600\">\r\n                            {formatCurrency(forecast.predictedRevenue)}\r\n                          </div>\r\n                        </div>\r\n                        <div>\r\n                          <div className=\"text-sm text-muted-foreground\">Estimated Spend</div>\r\n                          <div className=\"text-lg font-bold text-red-600\">\r\n                            {formatCurrency(forecast.estimatedSpend)}\r\n                          </div>\r\n                        </div>\r\n                        <div>\r\n                          <div className=\"text-sm text-muted-foreground\">Break-even</div>\r\n                          <div className=\"text-lg font-bold text-blue-600\">\r\n                            {forecast.breakEvenPoint}h\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {forecast.status === 'active' && (\r\n                        <Button \r\n                          variant=\"outline\" \r\n                          size=\"sm\"\r\n                          onClick={() => completeForecast(forecast.id)}\r\n                        >\r\n                          <CheckCircle className=\"w-4 h-4 mr-2\" />\r\n                          Mark Complete\r\n                        </Button>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          )}\r\n        </TabsContent>\r\n\r\n        {/* Forecast History Tab */}\r\n        <TabsContent value=\"history\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center space-x-2\">\r\n                <History className=\"h-5 w-5\" />\r\n                <span>All Forecasts</span>\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-4\">\r\n                {forecasts.map((forecast) => (\r\n                  <div key={forecast.id} className=\"border rounded-lg p-6\">\r\n                    <div className=\"flex items-start justify-between mb-4\">\r\n                      <div>\r\n                        <h3 className=\"text-xl font-semibold\">{forecast.productName}</h3>\r\n                        <p className=\"text-muted-foreground\">\r\n                          {forecast.campaignType} • {forecast.productType} • {formatCurrency(forecast.budget)} budget\r\n                        </p>\r\n                        <p className=\"text-sm text-muted-foreground\">\r\n                          Created {new Date(forecast.createdAt).toLocaleDateString()}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"text-right\">\r\n                        <Badge className={getConfidenceColor(forecast.confidenceLevel)}>\r\n                          {forecast.confidenceLevel}% Confidence\r\n                        </Badge>\r\n                        <div className={`text-2xl font-bold mt-1 ${getROIColor(forecast.projectedROI)}`}>\r\n                          {forecast.projectedROI.toFixed(1)}x ROI\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* ROI Timeline Chart */}\r\n                    <div className=\"mb-4\">\r\n                      <ResponsiveContainer width=\"100%\" height={200}>\r\n                        <LineChart data={Object.entries(forecast.timeframes).map(([timeframe, data]) => ({\r\n                          timeframe,\r\n                          roi: data.roi,\r\n                          revenue: data.revenue,\r\n                          spend: data.spend\r\n                        }))}>\r\n                          <CartesianGrid strokeDasharray=\"3 3\" />\r\n                          <XAxis dataKey=\"timeframe\" />\r\n                          <YAxis />\r\n                          <Tooltip />\r\n                          <Line type=\"monotone\" dataKey=\"roi\" stroke=\"#3b82f6\" name=\"ROI\" />\r\n                        </LineChart>\r\n                      </ResponsiveContainer>\r\n                    </div>\r\n\r\n                    {/* Forecast Ranges */}\r\n                    <div className=\"grid grid-cols-3 gap-4 mb-4\">\r\n                      <div className=\"text-center p-3 bg-red-50 rounded-lg\">\r\n                        <div className=\"text-sm text-muted-foreground\">Worst Case</div>\r\n                        <div className=\"text-lg font-bold text-red-600\">\r\n                          {forecast.forecastRanges.worstCase.toFixed(1)}x\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"text-center p-3 bg-yellow-50 rounded-lg\">\r\n                        <div className=\"text-sm text-muted-foreground\">Most Likely</div>\r\n                        <div className=\"text-lg font-bold text-yellow-600\">\r\n                          {forecast.forecastRanges.mostLikely.toFixed(1)}x\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"text-center p-3 bg-green-50 rounded-lg\">\r\n                        <div className=\"text-sm text-muted-foreground\">Best Case</div>\r\n                        <div className=\"text-lg font-bold text-green-600\">\r\n                          {forecast.forecastRanges.bestCase.toFixed(1)}x\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* AI Reasoning */}\r\n                    <div className=\"mb-4\">\r\n                      <h4 className=\"font-semibold mb-2\">AI Reasoning</h4>\r\n                      <div className=\"space-y-1\">\r\n                        {forecast.reasoning.map((reason, index) => (\r\n                          <div key={index} className=\"flex items-start space-x-2\">\r\n                            <CheckCircle className=\"w-4 h-4 text-green-600 mt-0.5 flex-shrink-0\" />\r\n                            <span className=\"text-sm\">{reason}</span>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Recommendations */}\r\n                    <div className=\"mb-4\">\r\n                      <h4 className=\"font-semibold mb-2\">AI Recommendations</h4>\r\n                      <div className=\"space-y-1\">\r\n                        {forecast.recommendations.map((rec, index) => (\r\n                          <div key={index} className=\"flex items-start space-x-2\">\r\n                            <Zap className=\"w-4 h-4 text-purple-600 mt-0.5 flex-shrink-0\" />\r\n                            <span className=\"text-sm\">{rec}</span>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Market Factors */}\r\n                    <div className=\"grid grid-cols-2 gap-4 mb-4\">\r\n                      <div>\r\n                        <div className=\"text-sm font-medium\">Competitor Activity</div>\r\n                        <div className=\"text-sm text-muted-foreground\">{forecast.marketFactors.competitorActivity}</div>\r\n                      </div>\r\n                      <div>\r\n                        <div className=\"text-sm font-medium\">CPC Trend</div>\r\n                        <div className=\"text-sm text-muted-foreground\">{forecast.marketFactors.cpcTrend}</div>\r\n                      </div>\r\n                      <div>\r\n                        <div className=\"text-sm font-medium\">Audience Engagement</div>\r\n                        <div className=\"text-sm text-muted-foreground\">{forecast.marketFactors.audienceEngagement}</div>\r\n                      </div>\r\n                      <div>\r\n                        <div className=\"text-sm font-medium\">Seasonal Factor</div>\r\n                        <div className=\"text-sm text-muted-foreground\">{forecast.marketFactors.seasonalFactor}x</div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Action Buttons */}\r\n                    <div className=\"flex space-x-2\">\r\n                      {forecast.status === 'active' && (\r\n                        <Button \r\n                          variant=\"outline\" \r\n                          size=\"sm\"\r\n                          onClick={() => completeForecast(forecast.id)}\r\n                        >\r\n                          <CheckCircle className=\"w-4 h-4 mr-2\" />\r\n                          Mark Complete\r\n                        </Button>\r\n                      )}\r\n                      <Button variant=\"outline\" size=\"sm\">\r\n                        <Share2 className=\"w-4 h-4 mr-2\" />\r\n                        Share\r\n                      </Button>\r\n                      <Button variant=\"outline\" size=\"sm\">\r\n                        <Download className=\"w-4 h-4 mr-2\" />\r\n                        Export\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Accuracy Analysis Tab */}\r\n        <TabsContent value=\"comparison\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center space-x-2\">\r\n                <Target className=\"h-5 w-5\" />\r\n                <span>Forecast vs Actual Results</span>\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              {comparisons.length > 0 ? (\r\n                <div className=\"space-y-6\">\r\n                  {/* Accuracy Overview */}\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                    <div className=\"text-center p-4 bg-gradient-to-br from-green-50 to-blue-50 rounded-lg\">\r\n                      <div className=\"text-2xl font-bold text-green-600\">\r\n                        {(comparisons.reduce((acc, c) => acc + c.accuracy, 0) / comparisons.length).toFixed(1)}%\r\n                      </div>\r\n                      <div className=\"text-sm text-muted-foreground\">Average Accuracy</div>\r\n                    </div>\r\n                    <div className=\"text-center p-4 bg-gradient-to-br from-purple-50 to-pink-50 rounded-lg\">\r\n                      <div className=\"text-2xl font-bold text-purple-600\">\r\n                        {comparisons.length}\r\n                      </div>\r\n                      <div className=\"text-sm text-muted-foreground\">Forecasts Analyzed</div>\r\n                    </div>\r\n                    <div className=\"text-center p-4 bg-gradient-to-br from-yellow-50 to-orange-50 rounded-lg\">\r\n                      <div className=\"text-2xl font-bold text-yellow-600\">\r\n                        {comparisons.filter(c => c.accuracy >= 80).length}\r\n                      </div>\r\n                      <div className=\"text-sm text-muted-foreground\">High Accuracy (80%+)</div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Accuracy Chart */}\r\n                  <div>\r\n                    <h3 className=\"font-semibold mb-3\">Accuracy Trend</h3>\r\n                    <ResponsiveContainer width=\"100%\" height={200}>\r\n                      <LineChart data={comparisons.map((c, index) => ({\r\n                        forecast: c.forecasted.productName,\r\n                        accuracy: c.accuracy,\r\n                        variance: c.variance\r\n                      }))}>\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"forecast\" />\r\n                        <YAxis />\r\n                        <Tooltip />\r\n                        <Line type=\"monotone\" dataKey=\"accuracy\" stroke=\"#3b82f6\" name=\"Accuracy %\" />\r\n                      </LineChart>\r\n                    </ResponsiveContainer>\r\n                  </div>\r\n\r\n                  {/* Detailed Comparisons */}\r\n                  <div className=\"space-y-4\">\r\n                    {comparisons.map((comparison) => (\r\n                      <div key={comparison.forecasted.id} className=\"border rounded-lg p-4\">\r\n                        <div className=\"flex items-center justify-between mb-3\">\r\n                          <h4 className=\"font-semibold\">{comparison.forecasted.productName}</h4>\r\n                          <Badge className={comparison.accuracy >= 80 ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'}>\r\n                            {comparison.accuracy.toFixed(1)}% Accurate\r\n                          </Badge>\r\n                        </div>\r\n                        \r\n                        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n                          <div>\r\n                            <div className=\"text-sm text-muted-foreground\">Forecasted ROI</div>\r\n                            <div className=\"text-lg font-bold text-blue-600\">\r\n                              {comparison.forecasted.projectedROI.toFixed(1)}x\r\n                            </div>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"text-sm text-muted-foreground\">Actual ROI</div>\r\n                            <div className=\"text-lg font-bold text-green-600\">\r\n                              {comparison.actual?.actualROI.toFixed(1)}x\r\n                            </div>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"text-sm text-muted-foreground\">Variance</div>\r\n                            <div className={`text-lg font-bold ${comparison.variance > 0 ? 'text-green-600' : 'text-red-600'}`}>\r\n                              {comparison.variance > 0 ? '+' : ''}{comparison.variance.toFixed(1)}x\r\n                            </div>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"text-sm text-muted-foreground\">Revenue Accuracy</div>\r\n                            <div className=\"text-lg font-bold text-purple-600\">\r\n                              {Math.abs(comparison.forecasted.predictedRevenue - (comparison.actual?.actualRevenue || 0)) / comparison.forecasted.predictedRevenue * 100 < 20 ? '✓' : '⚠'}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-center py-8\">\r\n                  <Target className=\"w-12 h-12 text-muted-foreground mx-auto mb-4\" />\r\n                  <p className=\"text-muted-foreground\">No completed forecasts to analyze yet.</p>\r\n                  <p className=\"text-sm text-muted-foreground\">Complete some forecasts to see accuracy analysis.</p>\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  )\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}