{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/ai-powered-ad-idea-generator.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Textarea } from \"@/components/ui/textarea\"\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\r\nimport {\r\n    Lightbulb,\r\n    Target,\r\n    Users,\r\n    TrendingUp,\r\n    Eye,\r\n    ShoppingCart,\r\n    AlertTriangle,\r\n    Sparkles,\r\n    Zap,\r\n    Brain,\r\n    Palette,\r\n    TestTube,\r\n    Calendar,\r\n    MessageSquare,\r\n    Play,\r\n    Hash,\r\n    Tag,\r\n    TrendingDown,\r\n    BarChart3,\r\n    Star,\r\n    Heart,\r\n    Share2,\r\n    Bookmark,\r\n    Image\r\n} from \"lucide-react\"\r\nimport {\r\n    aiAdIdeaGeneratorService,\r\n    type ProductContext,\r\n    type AdBlueprint,\r\n    type AdVariant,\r\n    type PsychologicalAngle,\r\n    type VisualCue,\r\n    type CampaignReaction,\r\n    type ViralContentData,\r\n    type ViralAdIdea,\r\n    type ViralContentAnalysis\r\n} from \"@/services/ai-ad-idea-generator\"\r\n\r\n// Mock data for demonstration\r\nconst mockProductContext: ProductContext = {\r\n    id: \"essentials-hoodie-001\",\r\n    name: \"Essentials Fear of God Hoodie\",\r\n    views24h: 1700,\r\n    conversions24h: 7,\r\n    abandonedCheckouts: 45,\r\n    lowStock: true,\r\n    stockLevel: 9,\r\n    price: 299,\r\n    category: \"Streetwear\",\r\n    tags: [\"Limited\", \"Premium\", \"Trending\"],\r\n    audienceType: \"cold\",\r\n    platform: \"Instagram\"\r\n}\r\n\r\n// ViralContent-AdIdeaEnhancer: Mock viral content data\r\nconst mockViralContent: ViralContentData[] = [\r\n    {\r\n        id: \"viral-001\",\r\n        type: \"reel\",\r\n        caption: \"Real ones recognize real drops. This isn't for everyone. But it might be for you. #EssentialsEG #LimitedDrop #FearOfGod\",\r\n        hashtags: [\"#EssentialsEG\", \"#LimitedDrop\", \"#FearOfGod\", \"#Streetwear\"],\r\n        likes: 15420,\r\n        comments: 892,\r\n        shares: 2341,\r\n        saves: 1100,\r\n        views: 220000,\r\n        reach: 450000,\r\n        engagementRate: 8.7,\r\n        topComments: [\r\n            \"Real ones recognize real drops ðŸ”¥\",\r\n            \"This isn't for everyone. But it might be for you ðŸ’¯\",\r\n            \"Need this in my life\",\r\n            \"When's the restock?\"\r\n        ],\r\n        ctaClicks: 156,\r\n        postedAt: new Date('2024-01-15'),\r\n        visualStyle: \"Close-up product shots with fast transitions\",\r\n        emotionalTone: \"Exclusive, aspirational, confident\",\r\n        viralPhrases: [\"Real ones recognize real drops\", \"This isn't for everyone\", \"But it might be for you\"],\r\n        audienceReaction: \"High engagement from streetwear enthusiasts\"\r\n    },\r\n    {\r\n        id: \"viral-002\",\r\n        type: \"post\",\r\n        caption: \"Made for the real ones. 100% authentic. Fast delivery. Limited quantities. #EssentialsEG #FearOfGod #Streetwear\",\r\n        hashtags: [\"#EssentialsEG\", \"#FearOfGod\", \"#Streetwear\", \"#Authentic\"],\r\n        likes: 8920,\r\n        comments: 445,\r\n        shares: 1234,\r\n        saves: 567,\r\n        reach: 180000,\r\n        engagementRate: 6.2,\r\n        topComments: [\r\n            \"Made for the real ones ðŸ”¥\",\r\n            \"100% authentic ðŸ’¯\",\r\n            \"Need this drop\",\r\n            \"When's the next restock?\"\r\n        ],\r\n        ctaClicks: 89,\r\n        postedAt: new Date('2024-01-14'),\r\n        visualStyle: \"Lifestyle shots with clean background\",\r\n        emotionalTone: \"Authentic, premium, exclusive\",\r\n        viralPhrases: [\"Made for the real ones\", \"100% authentic\", \"Limited quantities\"],\r\n        audienceReaction: \"Strong interest in authenticity and exclusivity\"\r\n    }\r\n]\r\n\r\nconst mockViralAdIdea: ViralAdIdea = {\r\n    id: \"viral-ad-001\",\r\n    sourceContentId: \"viral-001\",\r\n    viralElement: \"Real ones recognize real drops\",\r\n    adHook: \"Real ones recognize real drops\",\r\n    adCopy: \"This isn't for everyone. But it might be for you. 100% authentic. Fast delivery.\",\r\n    cta: \"Shop now\",\r\n    psychologicalAngle: \"Reward/VIP\",\r\n    visualStyle: \"Close-up product shots with fast transitions\",\r\n    suggestedFormat: \"Instagram Reels\",\r\n    targeting: \"Streetwear enthusiasts, 18-30, Cairo, engaged with fashion content\",\r\n    confidence: 0.87,\r\n    performancePrediction: \"High CTR - Viral Formula\",\r\n    emotionalLanguage: \"Exclusive, aspirational, confident\",\r\n    remixStrategy: \"Replicate fast transitions and close-up shots for new product\"\r\n}\r\n\r\nconst mockAdBlueprint: AdBlueprint = {\r\n    id: \"ad-001\",\r\n    platform: \"Instagram Reels\",\r\n    audience: \"Male, 18-30, Cairo, visited in 7d\",\r\n    hook: \"1700 people saw it. Only 7 ordered. Why?\",\r\n    copy: \"Essentials just landed in Egypt â€” but it won't stay long. 100% authentic. Fast delivery.\",\r\n    cta: \"Shop Now\",\r\n    emotion: \"Scarcity / FOMO\",\r\n    visualSuggestion: \"Lifestyle shot, clean background, zoom into logo\",\r\n    hashtags: [\"#EssentialsEG\", \"#LimitedDrop\", \"#FearOfGod\"],\r\n    psychologicalAngle: \"Curiosity\",\r\n    segment: \"cold\",\r\n    predictedPerformance: \"High CTR - Curiosity\",\r\n    variants: [],\r\n    createdAt: new Date()\r\n}\r\n\r\nconst mockVariants: AdVariant[] = [\r\n    {\r\n        id: \"var-1\",\r\n        hook: \"Only 9 left in Egypt. Don't miss the drop again.\",\r\n        cta: \"Secure Yours\",\r\n        visualAngle: \"Close-up of logo with scarcity overlay\",\r\n        emotionalDriver: \"FOMO\",\r\n        prediction: \"High CTR - Scarcity\",\r\n        confidence: 0.85\r\n    },\r\n    {\r\n        id: \"var-2\",\r\n        hook: \"Why everyone in Egypt is obsessed with this drop...\",\r\n        cta: \"See Why\",\r\n        visualAngle: \"Full-body model walking toward camera\",\r\n        emotionalDriver: \"Curiosity\",\r\n        prediction: \"Soft engagement - Curiosity\",\r\n        confidence: 0.72\r\n    },\r\n    {\r\n        id: \"var-3\",\r\n        hook: \"Still thinking about it? Here's why 2500+ already ordered.\",\r\n        cta: \"Join Them\",\r\n        visualAngle: \"Social proof overlay with customer count\",\r\n        emotionalDriver: \"Social Proof\",\r\n        prediction: \"Strong Click Intent\",\r\n        confidence: 0.78\r\n    }\r\n]\r\n\r\nconst mockVisualCues: VisualCue = {\r\n    backgroundStyle: \"Earth-tone background with urban cityscape\",\r\n    productShotAngle: \"Full-body model walking toward camera with product name floating\",\r\n    modelExpression: \"Confident, aspirational look\",\r\n    layoutIdea: \"Text overlay: 'Made for this city'\",\r\n    textOverlayPlacement: \"Bottom right corner with fade effect\",\r\n    colorScheme: \"Neutral tones with accent orange\"\r\n}\r\n\r\nexport function AIPoweredAdIdeaGenerator() {\r\n    const [productContext, setProductContext] = useState<ProductContext>(mockProductContext)\r\n    const [generatedAds, setGeneratedAds] = useState<AdBlueprint[]>([])\r\n    const [selectedAd, setSelectedAd] = useState<AdBlueprint | null>(null)\r\n    const [variants, setVariants] = useState<AdVariant[]>([])\r\n    const [visualCues, setVisualCues] = useState<VisualCue | null>(null)\r\n    const [campaignReactions, setCampaignReactions] = useState<CampaignReaction[]>([])\r\n    const [viralContent, setViralContent] = useState<ViralContentData[]>(mockViralContent)\r\n    const [viralAdIdeas, setViralAdIdeas] = useState<ViralAdIdea[]>([])\r\n    const [viralAnalysis, setViralAnalysis] = useState<ViralContentAnalysis | null>(null)\r\n    const [loading, setLoading] = useState(false)\r\n    const [activeTab, setActiveTab] = useState(\"context\")\r\n\r\n    // Generate context-aware ad\r\n    const handleGenerateContextAd = async () => {\r\n        setLoading(true)\r\n        try {\r\n            const ad = await aiAdIdeaGeneratorService.generateContextAwareAd(productContext)\r\n            setGeneratedAds(prev => [ad, ...prev])\r\n            setSelectedAd(ad)\r\n        } catch (error) {\r\n            console.error(\"Error generating context ad:\", error)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    // Generate A/B test variants\r\n    const handleGenerateVariants = async (ad: AdBlueprint) => {\r\n        setLoading(true)\r\n        try {\r\n            const variants = await aiAdIdeaGeneratorService.generateABTestVariants(ad, 5)\r\n            setVariants(variants)\r\n        } catch (error) {\r\n            console.error(\"Error generating variants:\", error)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    // Generate visual cues\r\n    const handleGenerateVisualCues = async (ad: AdBlueprint) => {\r\n        setLoading(true)\r\n        try {\r\n            const cues = await aiAdIdeaGeneratorService.generateVisualCues(\r\n                productContext,\r\n                ad.platform,\r\n                ad.psychologicalAngle\r\n            )\r\n            setVisualCues(cues)\r\n        } catch (error) {\r\n            console.error(\"Error generating visual cues:\", error)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    // Generate drop campaign\r\n    const handleGenerateDropCampaign = async () => {\r\n        setLoading(true)\r\n        try {\r\n            const campaign = await aiAdIdeaGeneratorService.generateDropCampaign(productContext.id)\r\n            setCampaignReactions(prev => [campaign, ...prev])\r\n        } catch (error) {\r\n            console.error(\"Error generating drop campaign:\", error)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    // ViralContent-AdIdeaEnhancer: Viral content handlers\r\n    const handleAnalyzeViralContent = async () => {\r\n        setLoading(true)\r\n        try {\r\n            const analysis = await aiAdIdeaGeneratorService.getViralContentAnalysis('30d')\r\n            setViralAnalysis(analysis)\r\n        } catch (error) {\r\n            console.error(\"Error analyzing viral content:\", error)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const handleGenerateViralAdIdea = async (content: ViralContentData) => {\r\n        setLoading(true)\r\n        try {\r\n            const viralAd = await aiAdIdeaGeneratorService.generateViralBasedAdIdea(content, productContext)\r\n            setViralAdIdeas(prev => [viralAd, ...prev])\r\n        } catch (error) {\r\n            console.error(\"Error generating viral ad idea:\", error)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    const handleGenerateViralCampaign = async (campaignType: 'retargeting' | 'cold' | 'drop') => {\r\n        setLoading(true)\r\n        try {\r\n            const campaign = await aiAdIdeaGeneratorService.generateViralAdCampaign(\r\n                viralContent,\r\n                productContext,\r\n                campaignType\r\n            )\r\n            setViralAdIdeas(prev => [...campaign, ...prev])\r\n        } catch (error) {\r\n            console.error(\"Error generating viral campaign:\", error)\r\n        } finally {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    // Update product context\r\n    const updateProductContext = (field: keyof ProductContext, value: any) => {\r\n        setProductContext(prev => ({ ...prev, [field]: value }))\r\n    }\r\n\r\n    const getAngleColor = (angle: PsychologicalAngle) => {\r\n        const colors = {\r\n            FOMO: \"bg-red-100 text-red-800\",\r\n            Curiosity: \"bg-blue-100 text-blue-800\",\r\n            \"Social Proof\": \"bg-green-100 text-green-800\",\r\n            \"Problem/Solution\": \"bg-purple-100 text-purple-800\",\r\n            Aspirational: \"bg-yellow-100 text-yellow-800\",\r\n            \"Reward/VIP\": \"bg-pink-100 text-pink-800\",\r\n            Emotional: \"bg-indigo-100 text-indigo-800\"\r\n        }\r\n        return colors[angle] || \"bg-gray-100 text-gray-800\"\r\n    }\r\n\r\n    const getContentTypeIcon = (type: string) => {\r\n        switch (type) {\r\n            case 'reel': return <Play className=\"h-4 w-4\" />\r\n            case 'post': return <Image className=\"h-4 w-4\" />\r\n            case 'story': return <Bookmark className=\"h-4 w-4\" />\r\n            case 'carousel': return <BarChart3 className=\"h-4 w-4\" />\r\n            default: return <Hash className=\"h-4 w-4\" />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            <Card>\r\n                <CardHeader>\r\n                    <CardTitle className=\"flex items-center gap-2\">\r\n                        <Brain className=\"h-6 w-6 text-blue-600\" />\r\n                        AI-Powered Ad Idea Generator\r\n                    </CardTitle>\r\n                    <CardDescription>\r\n                        Generate dynamic, context-aware ad concepts with real-time data integration and viral content analysis\r\n                    </CardDescription>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <Tabs value={activeTab} onValueChange={setActiveTab}>\r\n                        <TabsList className=\"grid w-full grid-cols-5\">\r\n                            <TabsTrigger value=\"context\">Context Engine</TabsTrigger>\r\n                            <TabsTrigger value=\"blueprint\">Ad Blueprint</TabsTrigger>\r\n                            <TabsTrigger value=\"variants\">A/B Testing</TabsTrigger>\r\n                            <TabsTrigger value=\"campaigns\">Campaigns</TabsTrigger>\r\n                            <TabsTrigger value=\"viral\">Viral Content</TabsTrigger>\r\n                        </TabsList>\r\n\r\n                        {/* Context Engine Tab */}\r\n                        <TabsContent value=\"context\" className=\"space-y-4\">\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                                <Card>\r\n                                    <CardHeader>\r\n                                        <CardTitle className=\"text-lg\">Product Context</CardTitle>\r\n                                    </CardHeader>\r\n                                    <CardContent className=\"space-y-3\">\r\n                                        <div>\r\n                                            <label className=\"text-sm font-medium\">Product Name</label>\r\n                                            <Input\r\n                                                value={productContext.name}\r\n                                                onChange={(e) => updateProductContext('name', e.target.value)}\r\n                                                placeholder=\"Product name\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"grid grid-cols-2 gap-2\">\r\n                                            <div>\r\n                                                <label className=\"text-sm font-medium\">Views (24h)</label>\r\n                                                <Input\r\n                                                    type=\"number\"\r\n                                                    value={productContext.views24h}\r\n                                                    onChange={(e) => updateProductContext('views24h', parseInt(e.target.value))}\r\n                                                />\r\n                                            </div>\r\n                                            <div>\r\n                                                <label className=\"text-sm font-medium\">Conversions (24h)</label>\r\n                                                <Input\r\n                                                    type=\"number\"\r\n                                                    value={productContext.conversions24h}\r\n                                                    onChange={(e) => updateProductContext('conversions24h', parseInt(e.target.value))}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div>\r\n                                            <label className=\"text-sm font-medium\">Audience Type</label>\r\n                                            <Select\r\n                                                value={productContext.audienceType}\r\n                                                onValueChange={(value) => updateProductContext('audienceType', value)}\r\n                                            >\r\n                                                <SelectTrigger>\r\n                                                    <SelectValue />\r\n                                                </SelectTrigger>\r\n                                                <SelectContent>\r\n                                                    <SelectItem value=\"cold\">Cold Audience</SelectItem>\r\n                                                    <SelectItem value=\"warm\">Warm Audience</SelectItem>\r\n                                                    <SelectItem value=\"vip\">VIP Customers</SelectItem>\r\n                                                </SelectContent>\r\n                                            </Select>\r\n                                        </div>\r\n                                        <div className=\"flex items-center gap-2\">\r\n                                            <input\r\n                                                id=\"low-stock-checkbox\"\r\n                                                type=\"checkbox\"\r\n                                                checked={productContext.lowStock}\r\n                                                onChange={(e) => updateProductContext('lowStock', e.target.checked)}\r\n                                                aria-label=\"Low stock alert\"\r\n                                            />\r\n                                            <label htmlFor=\"low-stock-checkbox\" className=\"text-sm\">Low Stock Alert</label>\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n\r\n                                <Card>\r\n                                    <CardHeader>\r\n                                        <CardTitle className=\"text-lg\">Real-Time Signals</CardTitle>\r\n                                    </CardHeader>\r\n                                    <CardContent className=\"space-y-3\">\r\n                                        <div className=\"flex items-center justify-between\">\r\n                                            <span className=\"text-sm\">Views in 24h</span>\r\n                                            <Badge variant=\"secondary\">{productContext.views24h}</Badge>\r\n                                        </div>\r\n                                        <div className=\"flex items-center justify-between\">\r\n                                            <span className=\"text-sm\">Conversions</span>\r\n                                            <Badge variant=\"secondary\">{productContext.conversions24h}</Badge>\r\n                                        </div>\r\n                                        <div className=\"flex items-center justify-between\">\r\n                                            <span className=\"text-sm\">Abandoned Checkouts</span>\r\n                                            <Badge variant=\"destructive\">{productContext.abandonedCheckouts}</Badge>\r\n                                        </div>\r\n                                        <div className=\"flex items-center justify-between\">\r\n                                            <span className=\"text-sm\">Stock Level</span>\r\n                                            <Badge variant={productContext.lowStock ? \"destructive\" : \"secondary\"}>\r\n                                                {productContext.stockLevel}\r\n                                            </Badge>\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </div>\r\n\r\n                            <Button\r\n                                onClick={handleGenerateContextAd}\r\n                                disabled={loading}\r\n                                className=\"w-full\"\r\n                            >\r\n                                {loading ? \"Generating...\" : \"Generate Context-Aware Ad\"}\r\n                            </Button>\r\n                        </TabsContent>\r\n\r\n                        {/* Ad Blueprint Tab */}\r\n                        <TabsContent value=\"blueprint\" className=\"space-y-4\">\r\n                            {selectedAd && (\r\n                                <Card>\r\n                                    <CardHeader>\r\n                                        <CardTitle className=\"flex items-center gap-2\">\r\n                                            <Sparkles className=\"h-5 w-5 text-yellow-500\" />\r\n                                            Generated Ad Blueprint\r\n                                        </CardTitle>\r\n                                    </CardHeader>\r\n                                    <CardContent className=\"space-y-4\">\r\n                                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                                            <div className=\"space-y-3\">\r\n                                                <div>\r\n                                                    <label className=\"text-sm font-medium\">Platform</label>\r\n                                                    <p className=\"text-sm bg-gray-100 p-2 rounded\">{selectedAd.platform}</p>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <label className=\"text-sm font-medium\">Audience</label>\r\n                                                    <p className=\"text-sm bg-gray-100 p-2 rounded\">{selectedAd.audience}</p>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <label className=\"text-sm font-medium\">Hook</label>\r\n                                                    <p className=\"text-sm bg-blue-50 p-2 rounded border-l-4 border-blue-500\">\r\n                                                        {selectedAd.hook}\r\n                                                    </p>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <label className=\"text-sm font-medium\">Copy</label>\r\n                                                    <p className=\"text-sm bg-gray-100 p-2 rounded\">{selectedAd.copy}</p>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <label className=\"text-sm font-medium\">CTA</label>\r\n                                                    <p className=\"text-sm bg-green-50 p-2 rounded border-l-4 border-green-500\">\r\n                                                        {selectedAd.cta}\r\n                                                    </p>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"space-y-3\">\r\n                                                <div>\r\n                                                    <label className=\"text-sm font-medium\">Emotion</label>\r\n                                                    <p className=\"text-sm bg-gray-100 p-2 rounded\">{selectedAd.emotion}</p>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <label className=\"text-sm font-medium\">Psychological Angle</label>\r\n                                                    <Badge className={getAngleColor(selectedAd.psychologicalAngle)}>\r\n                                                        {selectedAd.psychologicalAngle}\r\n                                                    </Badge>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <label className=\"text-sm font-medium\">Visual Suggestion</label>\r\n                                                    <p className=\"text-sm bg-gray-100 p-2 rounded\">{selectedAd.visualSuggestion}</p>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <label className=\"text-sm font-medium\">Hashtags</label>\r\n                                                    <div className=\"flex flex-wrap gap-1\">\r\n                                                        {selectedAd.hashtags.map((tag, index) => (\r\n                                                            <Badge key={index} variant=\"outline\">\r\n                                                                {tag}\r\n                                                            </Badge>\r\n                                                        ))}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <label className=\"text-sm font-medium\">Predicted Performance</label>\r\n                                                    <p className=\"text-sm bg-yellow-50 p-2 rounded border-l-4 border-yellow-500\">\r\n                                                        {selectedAd.predictedPerformance}\r\n                                                    </p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"flex gap-2\">\r\n                                            <Button\r\n                                                onClick={() => handleGenerateVariants(selectedAd)}\r\n                                                variant=\"outline\"\r\n                                                size=\"sm\"\r\n                                            >\r\n                                                <TestTube className=\"h-4 w-4 mr-2\" />\r\n                                                Generate A/B Variants\r\n                                            </Button>\r\n                                            <Button\r\n                                                onClick={() => handleGenerateVisualCues(selectedAd)}\r\n                                                variant=\"outline\"\r\n                                                size=\"sm\"\r\n                                            >\r\n                                                <Palette className=\"h-4 w-4 mr-2\" />\r\n                                                Visual Cues\r\n                                            </Button>\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            )}\r\n\r\n                            {visualCues && (\r\n                                <Card>\r\n                                    <CardHeader>\r\n                                        <CardTitle className=\"flex items-center gap-2\">\r\n                                            <Palette className=\"h-5 w-5 text-purple-500\" />\r\n                                            Visual Cue Builder\r\n                                        </CardTitle>\r\n                                    </CardHeader>\r\n                                    <CardContent>\r\n                                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                                            <div className=\"space-y-3\">\r\n                                                <div>\r\n                                                    <label className=\"text-sm font-medium\">Background Style</label>\r\n                                                    <p className=\"text-sm bg-gray-100 p-2 rounded\">{visualCues.backgroundStyle}</p>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <label className=\"text-sm font-medium\">Product Shot Angle</label>\r\n                                                    <p className=\"text-sm bg-gray-100 p-2 rounded\">{visualCues.productShotAngle}</p>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <label className=\"text-sm font-medium\">Model Expression</label>\r\n                                                    <p className=\"text-sm bg-gray-100 p-2 rounded\">{visualCues.modelExpression}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"space-y-3\">\r\n                                                <div>\r\n                                                    <label className=\"text-sm font-medium\">Layout Idea</label>\r\n                                                    <p className=\"text-sm bg-gray-100 p-2 rounded\">{visualCues.layoutIdea}</p>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <label className=\"text-sm font-medium\">Text Overlay Placement</label>\r\n                                                    <p className=\"text-sm bg-gray-100 p-2 rounded\">{visualCues.textOverlayPlacement}</p>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <label className=\"text-sm font-medium\">Color Scheme</label>\r\n                                                    <p className=\"text-sm bg-gray-100 p-2 rounded\">{visualCues.colorScheme}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            )}\r\n                        </TabsContent>\r\n\r\n                        {/* A/B Testing Tab */}\r\n                        <TabsContent value=\"variants\" className=\"space-y-4\">\r\n                            {variants.length > 0 && (\r\n                                <div className=\"space-y-4\">\r\n                                    <h3 className=\"text-lg font-semibold\">A/B Test Variants</h3>\r\n                                    {variants.map((variant, index) => (\r\n                                        <Card key={variant.id}>\r\n                                            <CardContent className=\"pt-4\">\r\n                                                <div className=\"flex items-center justify-between mb-3\">\r\n                                                    <Badge variant=\"outline\">Variant {index + 1}</Badge>\r\n                                                    <Badge className={variant.confidence > 0.8 ? \"bg-green-100 text-green-800\" : \"bg-yellow-100 text-yellow-800\"}>\r\n                                                        {Math.round(variant.confidence * 100)}% Confidence\r\n                                                    </Badge>\r\n                                                </div>\r\n                                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                                                    <div className=\"space-y-2\">\r\n                                                        <div>\r\n                                                            <label className=\"text-sm font-medium\">Hook</label>\r\n                                                            <p className=\"text-sm bg-blue-50 p-2 rounded\">{variant.hook}</p>\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            <label className=\"text-sm font-medium\">CTA</label>\r\n                                                            <p className=\"text-sm bg-green-50 p-2 rounded\">{variant.cta}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"space-y-2\">\r\n                                                        <div>\r\n                                                            <label className=\"text-sm font-medium\">Visual Angle</label>\r\n                                                            <p className=\"text-sm bg-gray-100 p-2 rounded\">{variant.visualAngle}</p>\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            <label className=\"text-sm font-medium\">Prediction</label>\r\n                                                            <p className=\"text-sm bg-yellow-50 p-2 rounded border-l-4 border-yellow-500\">\r\n                                                                {variant.prediction}\r\n                                                            </p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        </TabsContent>\r\n\r\n                        {/* Campaigns Tab */}\r\n                        <TabsContent value=\"campaigns\" className=\"space-y-4\">\r\n                            <div className=\"flex justify-between items-center\">\r\n                                <h3 className=\"text-lg font-semibold\">Drop-Aware Campaigns</h3>\r\n                                <Button\r\n                                    onClick={handleGenerateDropCampaign}\r\n                                    disabled={loading}\r\n                                    size=\"sm\"\r\n                                >\r\n                                    <Zap className=\"h-4 w-4 mr-2\" />\r\n                                    Generate Drop Campaign\r\n                                </Button>\r\n                            </div>\r\n\r\n                            {campaignReactions.map((campaign) => (\r\n                                <Card key={campaign.id}>\r\n                                    <CardHeader>\r\n                                        <CardTitle className=\"flex items-center gap-2\">\r\n                                            <Calendar className=\"h-5 w-5 text-blue-500\" />\r\n                                            Drop Campaign: {campaign.productId}\r\n                                        </CardTitle>\r\n                                    </CardHeader>\r\n                                    <CardContent>\r\n                                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                                            <div className=\"space-y-3\">\r\n                                                <div>\r\n                                                    <label className=\"text-sm font-medium\">Best Angle</label>\r\n                                                    <Badge className={getAngleColor(campaign.bestAngle)}>\r\n                                                        {campaign.bestAngle}\r\n                                                    </Badge>\r\n                                                </div>\r\n                                                <div className=\"space-y-2\">\r\n                                                    <div className=\"flex items-center gap-2\">\r\n                                                        <input\r\n                                                            id={`vip-sync-${campaign.id}`}\r\n                                                            type=\"checkbox\"\r\n                                                            checked={campaign.vipListSync}\r\n                                                            readOnly\r\n                                                            aria-label=\"VIP list sync\"\r\n                                                        />\r\n                                                        <label htmlFor={`vip-sync-${campaign.id}`} className=\"text-sm\">VIP List Sync</label>\r\n                                                    </div>\r\n                                                    <div className=\"flex items-center gap-2\">\r\n                                                        <input\r\n                                                            id={`timing-optimized-${campaign.id}`}\r\n                                                            type=\"checkbox\"\r\n                                                            checked={campaign.timingOptimized}\r\n                                                            readOnly\r\n                                                            aria-label=\"Timing optimized\"\r\n                                                        />\r\n                                                        <label htmlFor={`timing-optimized-${campaign.id}`} className=\"text-sm\">Timing Optimized</label>\r\n                                                    </div>\r\n                                                    <div className=\"flex items-center gap-2\">\r\n                                                        <input\r\n                                                            id={`content-calendar-${campaign.id}`}\r\n                                                            type=\"checkbox\"\r\n                                                            checked={campaign.contentCalendarSync}\r\n                                                            readOnly\r\n                                                            aria-label=\"Content calendar sync\"\r\n                                                        />\r\n                                                        <label htmlFor={`content-calendar-${campaign.id}`} className=\"text-sm\">Content Calendar Sync</label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div>\r\n                                                <label className=\"text-sm font-medium\">AI Insights</label>\r\n                                                <p className=\"text-sm bg-blue-50 dark:bg-blue-900/20 text-blue-900 dark:text-blue-100 p-2 rounded border border-blue-200 dark:border-blue-700\">{campaign.aiInsights}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            ))}\r\n                        </TabsContent>\r\n\r\n                        {/* ViralContent-AdIdeaEnhancer: Viral Content Tab */}\r\n                        <TabsContent value=\"viral\" className=\"space-y-4\">\r\n                            <div className=\"flex justify-between items-center\">\r\n                                <h3 className=\"text-lg font-semibold\">Viral Content Analysis</h3>\r\n                                <Button\r\n                                    onClick={handleAnalyzeViralContent}\r\n                                    disabled={loading}\r\n                                    size=\"sm\"\r\n                                >\r\n                                    <TrendingUp className=\"h-4 w-4 mr-2\" />\r\n                                    Analyze Viral Content\r\n                                </Button>\r\n                            </div>\r\n\r\n                            {/* Viral Content List */}\r\n                            <div className=\"space-y-4\">\r\n                                <h4 className=\"text-md font-medium\">Top Performing Content</h4>\r\n                                {viralContent.map((content) => (\r\n                                    <Card key={content.id}>\r\n                                        <CardHeader>\r\n                                            <CardTitle className=\"flex items-center gap-2 text-sm\">\r\n                                                {getContentTypeIcon(content.type)}\r\n                                                {content.type.toUpperCase()} - {content.engagementRate}% Engagement\r\n                                            </CardTitle>\r\n                                        </CardHeader>\r\n                                        <CardContent>\r\n                                            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                                                <div className=\"space-y-2\">\r\n                                                    <div>\r\n                                                        <label className=\"text-sm font-medium\">Caption</label>\r\n                                                        <p className=\"text-sm bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-gray-100 p-2 rounded border border-gray-200 dark:border-gray-700\">{content.caption}</p>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <label className=\"text-sm font-medium\">Viral Phrases</label>\r\n                                                        <div className=\"flex flex-wrap gap-1\">\r\n                                                            {content.viralPhrases.map((phrase, index) => (\r\n                                                                <Badge key={index} variant=\"outline\" className=\"text-xs\">\r\n                                                                    {phrase}\r\n                                                                </Badge>\r\n                                                            ))}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <label className=\"text-sm font-medium\">Visual Style</label>\r\n                                                        <p className=\"text-sm bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-gray-100 p-2 rounded border border-gray-200 dark:border-gray-700\">{content.visualStyle}</p>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"space-y-2\">\r\n                                                    <div className=\"grid grid-cols-2 gap-2\">\r\n                                                        <div className=\"text-center\">\r\n                                                            <div className=\"text-lg font-semibold\">{content.likes.toLocaleString()}</div>\r\n                                                            <div className=\"text-xs text-muted-foreground\">Likes</div>\r\n                                                        </div>\r\n                                                        <div className=\"text-center\">\r\n                                                            <div className=\"text-lg font-semibold\">{content.comments.toLocaleString()}</div>\r\n                                                            <div className=\"text-xs text-muted-foreground\">Comments</div>\r\n                                                        </div>\r\n                                                        <div className=\"text-center\">\r\n                                                            <div className=\"text-lg font-semibold\">{content.shares.toLocaleString()}</div>\r\n                                                            <div className=\"text-xs text-muted-foreground\">Shares</div>\r\n                                                        </div>\r\n                                                        <div className=\"text-center\">\r\n                                                            <div className=\"text-lg font-semibold\">{content.saves.toLocaleString()}</div>\r\n                                                            <div className=\"text-xs text-muted-foreground\">Saves</div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <label className=\"text-sm font-medium\">Emotional Tone</label>\r\n                                                        <Badge variant=\"outline\">{content.emotionalTone}</Badge>\r\n                                                    </div>\r\n                                                    <Button\r\n                                                        onClick={() => handleGenerateViralAdIdea(content)}\r\n                                                        variant=\"outline\"\r\n                                                        size=\"sm\"\r\n                                                        className=\"w-full\"\r\n                                                    >\r\n                                                        <Lightbulb className=\"h-4 w-4 mr-2\" />\r\n                                                        Generate Ad from This\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </CardContent>\r\n                                    </Card>\r\n                                ))}\r\n                            </div>\r\n\r\n                            {/* Viral Ad Ideas */}\r\n                            {viralAdIdeas.length > 0 && (\r\n                                <div className=\"space-y-4\">\r\n                                    <h4 className=\"text-md font-medium\">Generated Viral Ad Ideas</h4>\r\n                                    {viralAdIdeas.map((viralAd) => (\r\n                                        <Card key={viralAd.id}>\r\n                                            <CardHeader>\r\n                                                <CardTitle className=\"flex items-center gap-2 text-sm\">\r\n                                                    <Star className=\"h-4 w-4 text-yellow-500\" />\r\n                                                    Viral Ad Idea - {Math.round(viralAd.confidence * 100)}% Confidence\r\n                                                </CardTitle>\r\n                                            </CardHeader>\r\n                                            <CardContent>\r\n                                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                                                    <div className=\"space-y-2\">\r\n                                                        <div>\r\n                                                            <label className=\"text-sm font-medium\">Viral Element</label>\r\n                                                            <p className=\"text-sm bg-blue-50 dark:bg-blue-900/20 text-blue-900 dark:text-blue-100 p-2 rounded border-l-4 border-blue-500 dark:border-blue-400\">\r\n                                                                {viralAd.viralElement}\r\n                                                            </p>\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            <label className=\"text-sm font-medium\">Ad Hook</label>\r\n                                                            <p className=\"text-sm bg-green-50 dark:bg-green-900/20 text-green-900 dark:text-green-100 p-2 rounded border-l-4 border-green-500 dark:border-green-400\">\r\n                                                                {viralAd.adHook}\r\n                                                            </p>\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            <label className=\"text-sm font-medium\">Ad Copy</label>\r\n                                                            <p className=\"text-sm bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-gray-100 p-2 rounded border border-gray-200 dark:border-gray-700\">{viralAd.adCopy}</p>\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            <label className=\"text-sm font-medium\">CTA</label>\r\n                                                            <p className=\"text-sm bg-yellow-50 dark:bg-yellow-900/20 text-yellow-900 dark:text-yellow-100 p-2 rounded border-l-4 border-yellow-500 dark:border-yellow-400\">\r\n                                                                {viralAd.cta}\r\n                                                            </p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"space-y-2\">\r\n                                                        <div>\r\n                                                            <label className=\"text-sm font-medium\">Psychological Angle</label>\r\n                                                            <Badge className={getAngleColor(viralAd.psychologicalAngle)}>\r\n                                                                {viralAd.psychologicalAngle}\r\n                                                            </Badge>\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            <label className=\"text-sm font-medium\">Suggested Format</label>\r\n                                                            <p className=\"text-sm bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-gray-100 p-2 rounded border border-gray-200 dark:border-gray-700\">{viralAd.suggestedFormat}</p>\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            <label className=\"text-sm font-medium\">Targeting</label>\r\n                                                            <p className=\"text-sm bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-gray-100 p-2 rounded border border-gray-200 dark:border-gray-700\">{viralAd.targeting}</p>\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            <label className=\"text-sm font-medium\">Performance Prediction</label>\r\n                                                            <p className=\"text-sm bg-purple-50 dark:bg-purple-900/20 text-purple-900 dark:text-purple-100 p-2 rounded border-l-4 border-purple-500 dark:border-purple-400\">\r\n                                                                {viralAd.performancePrediction}\r\n                                                            </p>\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            <label className=\"text-sm font-medium\">Remix Strategy</label>\r\n                                                            <p className=\"text-sm bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-gray-100 p-2 rounded border border-gray-200 dark:border-gray-700\">{viralAd.remixStrategy}</p>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </CardContent>\r\n                                        </Card>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n\r\n                            {/* Viral Campaign Generator */}\r\n                            <Card>\r\n                                <CardHeader>\r\n                                    <CardTitle className=\"flex items-center gap-2\">\r\n                                        <Zap className=\"h-5 w-5 text-blue-500\" />\r\n                                        Viral Campaign Generator\r\n                                    </CardTitle>\r\n                                </CardHeader>\r\n                                <CardContent>\r\n                                    <div className=\"grid grid-cols-3 gap-2\">\r\n                                        <Button\r\n                                            onClick={() => handleGenerateViralCampaign('retargeting')}\r\n                                            variant=\"outline\"\r\n                                            size=\"sm\"\r\n                                        >\r\n                                            <Target className=\"h-4 w-4 mr-2\" />\r\n                                            Retargeting\r\n                                        </Button>\r\n                                        <Button\r\n                                            onClick={() => handleGenerateViralCampaign('cold')}\r\n                                            variant=\"outline\"\r\n                                            size=\"sm\"\r\n                                        >\r\n                                            <Users className=\"h-4 w-4 mr-2\" />\r\n                                            Cold Audience\r\n                                        </Button>\r\n                                        <Button\r\n                                            onClick={() => handleGenerateViralCampaign('drop')}\r\n                                            variant=\"outline\"\r\n                                            size=\"sm\"\r\n                                        >\r\n                                            <Calendar className=\"h-4 w-4 mr-2\" />\r\n                                            Drop Campaign\r\n                                        </Button>\r\n                                    </div>\r\n                                </CardContent>\r\n                            </Card>\r\n\r\n                            {/* Viral Analysis Results */}\r\n                            {viralAnalysis && (\r\n                                <Card>\r\n                                    <CardHeader>\r\n                                        <CardTitle className=\"flex items-center gap-2\">\r\n                                            <BarChart3 className=\"h-5 w-5 text-green-500\" />\r\n                                            Viral Pattern Analysis\r\n                                        </CardTitle>\r\n                                    </CardHeader>\r\n                                    <CardContent>\r\n                                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                                            <div className=\"space-y-3\">\r\n                                                <div>\r\n                                                    <label className=\"text-sm font-medium\">Successful Phrases</label>\r\n                                                    <div className=\"flex flex-wrap gap-1\">\r\n                                                        {viralAnalysis.viralPatterns.successfulPhrases.slice(0, 5).map((phrase, index) => (\r\n                                                            <Badge key={index} variant=\"outline\" className=\"text-xs\">\r\n                                                                {phrase}\r\n                                                            </Badge>\r\n                                                        ))}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <label className=\"text-sm font-medium\">Visual Styles</label>\r\n                                                    <div className=\"space-y-1\">\r\n                                                        {viralAnalysis.viralPatterns.visualStyles.slice(0, 3).map((style, index) => (\r\n                                                            <p key={index} className=\"text-sm bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-gray-100 p-2 rounded border border-gray-200 dark:border-gray-700\">{style}</p>\r\n                                                        ))}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"space-y-3\">\r\n                                                <div>\r\n                                                    <label className=\"text-sm font-medium\">Recommendations</label>\r\n                                                    <div className=\"space-y-1\">\r\n                                                        {viralAnalysis.recommendations.slice(0, 3).map((rec, index) => (\r\n                                                            <p key={index} className=\"text-sm bg-blue-50 dark:bg-blue-900/20 text-blue-900 dark:text-blue-100 p-2 rounded border-l-4 border-blue-500 dark:border-blue-400\">\r\n                                                                {rec}\r\n                                                            </p>\r\n                                                        ))}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            )}\r\n                        </TabsContent>\r\n                    </Tabs>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}