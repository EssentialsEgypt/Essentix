{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/ai-powered-business-dashboard.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { useState, useEffect, useCallback } from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\r\nimport { Progress } from \"@/components/ui/progress\"\r\nimport { Alert, AlertDescription } from \"@/components/ui/alert\"\r\nimport { Switch } from \"@/components/ui/switch\"\r\nimport {\r\n    DollarSign, TrendingUp, TrendingDown, Brain, Lightbulb,\r\n    RefreshCw, BarChart3, Heart, AlertTriangle, Star\r\n} from \"lucide-react\"\r\nimport { AIDropPredictorCard } from \"./ai-drop-predictor-card\"\r\nimport { AIROIForecastCard } from \"./ai-roi-forecast-card\"\r\nimport { AIStrategyComposerCard } from \"./ai-strategy-composer-card\"\r\nimport {\r\n    LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid,\r\n    Tooltip, ResponsiveContainer, PieChart, Pie, Cell\r\n} from \"recharts\"\r\n\r\n// Enhanced Types\r\ninterface KPIMetric {\r\n    id: string\r\n    title: string\r\n    value: string | number\r\n    change: number\r\n    trend: 'up' | 'down' | 'stable'\r\n    aiInsight: string\r\n    urgency: 'high' | 'medium' | 'low'\r\n}\r\n\r\ninterface AIInsight {\r\n    id: string\r\n    type: 'alert' | 'recommendation' | 'prediction' | 'explanation'\r\n    title: string\r\n    description: string\r\n    priority: 'critical' | 'high' | 'medium' | 'low'\r\n    category: 'sales' | 'ads' | 'content' | 'vip' | 'tech' | 'cash' | 'team'\r\n    action?: string\r\n    timestamp: Date\r\n    aiConfidence: number\r\n}\r\n\r\ninterface DropPerformance {\r\n    id: string\r\n    productName: string\r\n    views: number\r\n    cartAdds: number\r\n    checkouts: number\r\n    conversionRate: number\r\n    ugcMentions: number\r\n    aiRecommendation: string\r\n    status: 'live' | 'paused' | 'completed'\r\n    revenue: number\r\n    date: string\r\n}\r\n\r\ninterface SmartRecommendation {\r\n    id: string\r\n    type: 'post' | 'ad' | 'audience' | 'product' | 'content'\r\n    title: string\r\n    description: string\r\n    expectedImpact: string\r\n    confidence: number\r\n    action: string\r\n    priority: 'urgent' | 'high' | 'medium' | 'low'\r\n    category: string\r\n}\r\n\r\ninterface ToDoItem {\r\n    id: string\r\n    title: string\r\n    description: string\r\n    priority: 'urgent' | 'high' | 'medium' | 'low'\r\n    category: 'sales' | 'ads' | 'content' | 'support' | 'vip'\r\n    dueDate?: Date\r\n    completed: boolean\r\n    aiGenerated: boolean\r\n}\r\n\r\ninterface CompetitorSnapshot {\r\n    id: string\r\n    username: string\r\n    platform: string\r\n    postsToday: number\r\n    avgEngagement: number\r\n    topHook: string\r\n    visualStyle: string\r\n    aiAnalysis: string\r\n    lastUpdated: Date\r\n    followers: number\r\n    recentPosts: number\r\n}\r\n\r\ninterface VIPMovement {\r\n    id: string\r\n    customerName: string\r\n    action: 'viewed' | 'purchased' | 'abandoned' | 'contacted' | 'dropped'\r\n    productName?: string\r\n    value?: number\r\n    timestamp: Date\r\n    priority: 'high' | 'medium' | 'low'\r\n    ltv: number\r\n    lastPurchase: Date\r\n}\r\n\r\ninterface BrandMood {\r\n    overall: 'positive' | 'neutral' | 'negative'\r\n    score: number\r\n    sentiment: string\r\n    topEmotions: string[]\r\n    recommendations: string[]\r\n    lastUpdated: Date\r\n}\r\n\r\nexport function AIPoweredBusinessDashboard() {\r\n    const [activeTab, setActiveTab] = useState(\"overview\")\r\n    const [kpis, setKpis] = useState<KPIMetric[]>([])\r\n    const [insights, setInsights] = useState<AIInsight[]>([])\r\n    const [drops, setDrops] = useState<DropPerformance[]>([])\r\n    const [recommendations, setRecommendations] = useState<SmartRecommendation[]>([])\r\n    const [todoList, setTodoList] = useState<ToDoItem[]>([])\r\n    const [competitors, setCompetitors] = useState<CompetitorSnapshot[]>([])\r\n    const [vipMovements, setVipMovements] = useState<VIPMovement[]>([])\r\n    const [brandMood, setBrandMood] = useState<BrandMood | null>(null)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [loadError, setLoadError] = useState<string | null>(null)\r\n    const [sectionLoading, setSectionLoading] = useState({\r\n        kpis: false,\r\n        insights: false,\r\n        drops: false,\r\n        recommendations: false,\r\n        todo: false,\r\n        competitors: false,\r\n        vip: false,\r\n        brandMood: false\r\n    })\r\n\r\n    // Get fallback data for failed API calls\r\n    const getFallbackData = (endpoint: string): any => {\r\n        switch (endpoint) {\r\n            case 'kpis':\r\n                return [\r\n                    { id: '1', title: 'Revenue', value: '$12,450', change: 12.5, trend: 'up', aiInsight: 'Strong growth trend', urgency: 'low' },\r\n                    { id: '2', title: 'Orders', value: '156', change: -2.1, trend: 'down', aiInsight: 'Slight decline, monitor', urgency: 'medium' },\r\n                    { id: '3', title: 'Engagement', value: '89.2%', change: 5.3, trend: 'up', aiInsight: 'Excellent engagement rate', urgency: 'low' },\r\n                    { id: '4', title: 'Conversion', value: '3.2%', change: 0.8, trend: 'up', aiInsight: 'Improving conversion rate', urgency: 'low' },\r\n                    { id: '5', title: 'ROAS', value: '4.4x', change: 0.3, trend: 'up', aiInsight: 'Strong return on ad spend', urgency: 'low' }\r\n                ] as KPIMetric[]\r\n            case 'insights':\r\n                return [\r\n                    { id: '1', type: 'alert', title: 'Revenue Spike Detected', description: 'Unusual 23% revenue increase in last 2 hours. This correlates with your recent Instagram campaign launch.', priority: 'high', category: 'sales', timestamp: new Date(), aiConfidence: 0.95 },\r\n                    { id: '2', type: 'recommendation', title: 'Optimize Ad Timing', description: 'Move Instagram ads to 7-9 PM for 15% better CTR. Your audience is most active during these hours.', priority: 'medium', category: 'ads', timestamp: new Date(), aiConfidence: 0.88 },\r\n                    { id: '3', type: 'prediction', title: 'VIP Customer Activity', description: '3 high-value customers browsing new collection. Consider sending personalized outreach.', priority: 'low', category: 'vip', timestamp: new Date(), aiConfidence: 0.92 },\r\n                    { id: '4', type: 'alert', title: 'Ad Fatigue Detected', description: 'Facebook ad performance declining 12% week-over-week. Consider refreshing creative assets.', priority: 'critical', category: 'ads', timestamp: new Date(), aiConfidence: 0.89 },\r\n                    { id: '5', type: 'recommendation', title: 'Content Strategy Update', description: 'Behind-the-scenes content performs 40% better than product-only posts. Increase BTS content by 25%.', priority: 'medium', category: 'content', timestamp: new Date(), aiConfidence: 0.87 },\r\n                    { id: '6', type: 'prediction', title: 'Inventory Alert', description: 'Limited Edition Hoodie will sell out within 48 hours based on current demand patterns.', priority: 'high', category: 'sales', timestamp: new Date(), aiConfidence: 0.94 }\r\n                ] as AIInsight[]\r\n            case 'drop-performance':\r\n                return [\r\n                    { id: '1', productName: 'Limited Edition Hoodie', views: 1250, cartAdds: 89, checkouts: 45, conversionRate: 3.6, ugcMentions: 23, aiRecommendation: 'Strong performance, consider restock', status: 'live', revenue: 2250, date: '2024-01-15' },\r\n                    { id: '2', productName: 'Premium Sneakers', views: 890, cartAdds: 67, checkouts: 34, conversionRate: 3.8, ugcMentions: 15, aiRecommendation: 'Good conversion rate, optimize pricing', status: 'live', revenue: 1700, date: '2024-01-14' },\r\n                    { id: '3', productName: 'Streetwear Collection', views: 2100, cartAdds: 156, checkouts: 78, conversionRate: 3.7, ugcMentions: 45, aiRecommendation: 'Excellent UGC engagement', status: 'completed', revenue: 3900, date: '2024-01-10' }\r\n                ] as DropPerformance[]\r\n            case 'recommendations':\r\n                return [\r\n                    { id: '1', type: 'post', title: 'Behind-the-scenes content', description: 'Share your production process and team stories. This type of content drives 40% higher engagement than product-only posts.', expectedImpact: '+15% engagement', confidence: 0.92, action: 'Create post', priority: 'high', category: 'content' },\r\n                    { id: '2', type: 'ad', title: 'Retarget VIP customers', description: 'Create exclusive VIP campaign with personalized messaging. Your VIP customers have 3x higher conversion rates.', expectedImpact: '+25% conversions', confidence: 0.88, action: 'Launch campaign', priority: 'medium', category: 'ads' },\r\n                    { id: '3', type: 'product', title: 'Bundle trending items', description: 'Create limited edition bundle combining your best-selling hoodie with the new sneakers. Bundles increase AOV by 30%.', expectedImpact: '+30% AOV', confidence: 0.85, action: 'Create bundle', priority: 'high', category: 'sales' },\r\n                    { id: '4', type: 'audience', title: 'Expand to new demographics', description: 'Target 18-24 age group on TikTok. This demographic shows high interest in streetwear and has strong purchasing power.', expectedImpact: '+20% reach', confidence: 0.78, action: 'Update targeting', priority: 'medium', category: 'ads' },\r\n                    { id: '5', type: 'content', title: 'User-generated content campaign', description: 'Launch a hashtag challenge encouraging customers to share their style. UGC drives 5x more engagement than brand content.', expectedImpact: '+50% engagement', confidence: 0.91, action: 'Launch campaign', priority: 'high', category: 'content' },\r\n                    { id: '6', type: 'product', title: 'Limited restock strategy', description: 'Restock your best-selling items in limited quantities to create urgency and drive immediate sales.', expectedImpact: '+40% sales', confidence: 0.87, action: 'Plan restock', priority: 'urgent', category: 'sales' }\r\n                ] as SmartRecommendation[]\r\n            case 'todo':\r\n                return [\r\n                    { id: '1', title: 'Contact Sarah Johnson (VIP)', description: 'Sarah hasn\\'t purchased in 45 days. Send personalized email with new collection preview.', priority: 'urgent', category: 'vip', completed: false, aiGenerated: true, dueDate: new Date(Date.now() + 24 * 60 * 60 * 1000) },\r\n                    { id: '2', title: 'Refresh Facebook ad creatives', description: 'Ad fatigue detected. Create 3 new ad variations to improve performance.', priority: 'high', category: 'ads', completed: false, aiGenerated: true, dueDate: new Date(Date.now() + 2 * 24 * 60 * 60 * 1000) },\r\n                    { id: '3', title: 'Plan behind-the-scenes content', description: 'Create 5 BTS posts for next week. This content type performs 40% better.', priority: 'medium', category: 'content', completed: false, aiGenerated: true, dueDate: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000) },\r\n                    { id: '4', title: 'Review competitor pricing', description: 'Analyze competitor pricing strategy for premium sneakers category.', priority: 'medium', category: 'sales', completed: false, aiGenerated: false, dueDate: new Date(Date.now() + 4 * 24 * 60 * 60 * 1000) },\r\n                    { id: '5', title: 'Update Instagram bio', description: 'Optimize bio with new hashtags and call-to-action based on recent performance data.', priority: 'low', category: 'content', completed: false, aiGenerated: true, dueDate: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000) },\r\n                    { id: '6', title: 'Plan limited restock', description: 'Limited Edition Hoodie will sell out in 48 hours. Plan restock strategy.', priority: 'urgent', category: 'sales', completed: false, aiGenerated: true, dueDate: new Date(Date.now() + 12 * 60 * 60 * 1000) }\r\n                ] as ToDoItem[]\r\n            case 'competitors':\r\n                return [\r\n                    { id: '1', username: '@competitor1', platform: 'instagram', postsToday: 3, avgEngagement: 4.2, topHook: 'Lifestyle focus', visualStyle: 'Minimalist', aiAnalysis: 'Strong visual consistency', lastUpdated: new Date(), followers: 125000, recentPosts: 45 },\r\n                    { id: '2', username: '@competitor2', platform: 'tiktok', postsToday: 5, avgEngagement: 6.8, topHook: 'Trending challenges', visualStyle: 'Bold colors', aiAnalysis: 'High engagement with trending content', lastUpdated: new Date(), followers: 89000, recentPosts: 67 },\r\n                    { id: '3', username: '@competitor3', platform: 'instagram', postsToday: 2, avgEngagement: 3.1, topHook: 'Product showcases', visualStyle: 'Clean aesthetic', aiAnalysis: 'Consistent product presentation', lastUpdated: new Date(), followers: 156000, recentPosts: 23 }\r\n                ] as CompetitorSnapshot[]\r\n            case 'vip-movements':\r\n                return [\r\n                    { id: '1', customerName: 'VIP Customer 1', action: 'viewed', productName: 'Premium Collection', timestamp: new Date(), priority: 'high', ltv: 2500, lastPurchase: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000) },\r\n                    { id: '2', customerName: 'VIP Customer 2', action: 'purchased', productName: 'Limited Edition', value: 299, timestamp: new Date(), priority: 'high', ltv: 1800, lastPurchase: new Date() },\r\n                    { id: '3', customerName: 'VIP Customer 3', action: 'abandoned', productName: 'New Drop', timestamp: new Date(), priority: 'medium', ltv: 3200, lastPurchase: new Date(Date.now() - 14 * 24 * 60 * 60 * 1000) },\r\n                    { id: '4', customerName: 'VIP Customer 4', action: 'contacted', productName: 'Support inquiry', timestamp: new Date(), priority: 'high', ltv: 4100, lastPurchase: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000) }\r\n                ] as VIPMovement[]\r\n            case 'brand-mood':\r\n                return {\r\n                    overall: 'positive',\r\n                    score: 8.2,\r\n                    sentiment: 'Customers are very satisfied with recent drops',\r\n                    topEmotions: ['excited', 'satisfied', 'engaged'],\r\n                    recommendations: ['Continue current strategy', 'Engage more with VIP customers'],\r\n                    lastUpdated: new Date()\r\n                } as BrandMood\r\n            default:\r\n                return []\r\n        }\r\n    }\r\n\r\n    const loadDashboardData = async () => {\r\n        setIsLoading(true)\r\n        setLoadError(null)\r\n\r\n        try {\r\n            const endpoints = [\r\n                '/api/ai-business-dashboard/kpis',\r\n                '/api/ai-business-dashboard/insights',\r\n                '/api/ai-business-dashboard/drop-performance',\r\n                '/api/ai-business-dashboard/recommendations',\r\n                '/api/ai-business-dashboard/todo',\r\n                '/api/ai-business-dashboard/competitors',\r\n                '/api/ai-business-dashboard/vip-movements',\r\n                '/api/ai-business-dashboard/brand-mood'\r\n            ]\r\n\r\n            const results = await Promise.allSettled(\r\n                endpoints.map(endpoint => fetch(endpoint))\r\n            )\r\n\r\n            const data = results.map((result, index) => {\r\n                if (result.status === 'fulfilled' && result.value.ok) {\r\n                    return result.value.json()\r\n                } else {\r\n                    const endpoint = endpoints[index].split('/').pop()\r\n                    return Promise.resolve(getFallbackData(endpoint || ''))\r\n                }\r\n            })\r\n\r\n            const [\r\n                kpisData,\r\n                insightsData,\r\n                dropPerformanceData,\r\n                recommendationsData,\r\n                todoData,\r\n                competitorsData,\r\n                vipData,\r\n                brandMoodData\r\n            ] = await Promise.all(data)\r\n\r\n            // Type-safe data setting\r\n            if (Array.isArray(kpisData)) {\r\n                setKpis(kpisData as KPIMetric[])\r\n            }\r\n            if (Array.isArray(insightsData)) {\r\n                setInsights(insightsData as AIInsight[])\r\n            }\r\n            if (Array.isArray(dropPerformanceData)) {\r\n                setDrops(dropPerformanceData)\r\n            }\r\n            if (Array.isArray(recommendationsData)) {\r\n                setRecommendations(recommendationsData)\r\n            }\r\n            if (Array.isArray(todoData)) {\r\n                setTodoList(todoData)\r\n            }\r\n            if (Array.isArray(competitorsData)) {\r\n                setCompetitors(competitorsData)\r\n            }\r\n            if (Array.isArray(vipData)) {\r\n                setVipMovements(vipData)\r\n            }\r\n            if (brandMoodData && typeof brandMoodData === 'object') {\r\n                setBrandMood(brandMoodData as BrandMood)\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Dashboard data loading error:', error)\r\n            setLoadError('Failed to load dashboard data. Using demo data.')\r\n\r\n            // Set fallback data with proper typing\r\n            const fallbackKpis = getFallbackData('kpis') as KPIMetric[]\r\n            const fallbackInsights = getFallbackData('insights') as AIInsight[]\r\n            const fallbackDrops = getFallbackData('drop-performance') as DropPerformance[]\r\n            const fallbackRecommendations = getFallbackData('recommendations') as SmartRecommendation[]\r\n            const fallbackTodo = getFallbackData('todo') as ToDoItem[]\r\n            const fallbackCompetitors = getFallbackData('competitors') as CompetitorSnapshot[]\r\n            const fallbackVip = getFallbackData('vip-movements') as VIPMovement[]\r\n            const fallbackBrandMood = getFallbackData('brand-mood') as BrandMood\r\n\r\n            setKpis(fallbackKpis)\r\n            setInsights(fallbackInsights)\r\n            setDrops(fallbackDrops)\r\n            setRecommendations(fallbackRecommendations)\r\n            setTodoList(fallbackTodo)\r\n            setCompetitors(fallbackCompetitors)\r\n            setVipMovements(fallbackVip)\r\n            setBrandMood(fallbackBrandMood)\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadDashboardData()\r\n    }, []) // Empty dependency array to prevent auto-reload\r\n\r\n    // Memoize the loadDashboardData function to prevent unnecessary re-renders\r\n    const memoizedLoadDashboardData = useCallback(() => {\r\n        loadDashboardData()\r\n    }, [])\r\n\r\n    // Helper functions\r\n    const getUrgencyColor = (urgency: string) => {\r\n        switch (urgency) {\r\n            case 'high': return 'text-red-600 bg-red-100'\r\n            case 'medium': return 'text-yellow-600 bg-yellow-100'\r\n            case 'low': return 'text-green-600 bg-green-100'\r\n            default: return 'text-gray-600 bg-gray-100'\r\n        }\r\n    }\r\n\r\n    const getPriorityColor = (priority: string) => {\r\n        switch (priority) {\r\n            case 'critical': return 'text-red-600 bg-red-100'\r\n            case 'high': return 'text-orange-600 bg-orange-100'\r\n            case 'medium': return 'text-yellow-600 bg-yellow-100'\r\n            case 'low': return 'text-green-600 bg-green-100'\r\n            case 'urgent': return 'text-red-600 bg-red-100'\r\n            default: return 'text-gray-600 bg-gray-100'\r\n        }\r\n    }\r\n\r\n    const getTrendIcon = (trend: 'up' | 'down' | 'stable') => {\r\n        switch (trend) {\r\n            case 'up':\r\n                return <TrendingUp className=\"h-4 w-4 text-green-400\" />\r\n            case 'down':\r\n                return <TrendingDown className=\"h-4 w-4 text-red-400\" />\r\n            default:\r\n                return <BarChart3 className=\"h-4 w-4 text-gray-400\" />\r\n        }\r\n    }\r\n\r\n    const getStatusColor = (status: string) => {\r\n        switch (status) {\r\n            case 'live': return 'text-green-600 bg-green-100'\r\n            case 'paused': return 'text-yellow-600 bg-yellow-100'\r\n            case 'completed': return 'text-gray-600 bg-gray-100'\r\n            default: return 'text-gray-600 bg-gray-100'\r\n        }\r\n    }\r\n\r\n    const toggleTodoItem = (id: string) => {\r\n        setTodoList(prev => prev.map(item =>\r\n            item.id === id ? { ...item, completed: !item.completed } : item\r\n        ))\r\n    }\r\n\r\n    const handleRefresh = () => {\r\n        memoizedLoadDashboardData()\r\n    }\r\n\r\n    // Loading skeleton component\r\n    const LoadingSkeleton = ({ className = \"\" }: { className?: string }) => (\r\n        <div className={`animate-pulse ${className}`}>\r\n            <div className=\"h-4 bg-gray-200 rounded w-3/4 mb-2\"></div>\r\n            <div className=\"h-3 bg-gray-200 rounded w-1/2\"></div>\r\n        </div>\r\n    )\r\n\r\n    // Empty state component\r\n    const EmptyState = ({\r\n        title,\r\n        description,\r\n        icon: Icon\r\n    }: {\r\n        title: string\r\n        description: string\r\n        icon: any\r\n    }) => (\r\n        <div className=\"text-center py-8\">\r\n            <Icon className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">{title}</h3>\r\n            <p className=\"text-gray-500\">{description}</p>\r\n        </div>\r\n    )\r\n\r\n    // Chart data\r\n    const revenueData = [\r\n        { date: 'Mon', revenue: 12000, spend: 2800, roas: 4.3 },\r\n        { date: 'Tue', revenue: 13500, spend: 3100, roas: 4.4 },\r\n        { date: 'Wed', revenue: 11800, spend: 2900, roas: 4.1 },\r\n        { date: 'Thu', revenue: 14200, spend: 3200, roas: 4.4 },\r\n        { date: 'Fri', revenue: 15600, spend: 3500, roas: 4.5 },\r\n        { date: 'Sat', revenue: 16800, spend: 3800, roas: 4.4 },\r\n        { date: 'Sun', revenue: 12450, spend: 2800, roas: 4.4 },\r\n    ]\r\n\r\n    const engagementData = [\r\n        { platform: 'Instagram', engagement: 4.2, followers: 125000 },\r\n        { platform: 'TikTok', engagement: 6.8, followers: 89000 },\r\n        { platform: 'Facebook', engagement: 2.1, followers: 67000 },\r\n        { platform: 'Twitter', engagement: 1.8, followers: 45000 },\r\n    ]\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"flex items-center justify-center h-96\">\r\n                <div className=\"flex items-center space-x-3 p-6 bg-gradient-to-r from-slate-800/50 to-slate-900/50 backdrop-blur-xl rounded-2xl border border-white/10 shadow-2xl shadow-black/20\">\r\n                    <RefreshCw className=\"h-6 w-6 animate-spin text-pink-400\" />\r\n                    <span className=\"text-white font-semibold\">Loading AI-Powered Dashboard...</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            {/* Header */}\r\n            <div className=\"flex items-center justify-between p-6 bg-gradient-to-r from-slate-800/50 to-slate-900/50 backdrop-blur-xl rounded-2xl border border-white/10 shadow-2xl shadow-black/20\">\r\n                <div>\r\n                    <h1 className=\"text-3xl font-bold text-white\">AI-Powered Business Dashboard</h1>\r\n                    <p className=\"text-gray-300\">Real-time intelligence for your business</p>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                    <Button onClick={handleRefresh} size=\"sm\" variant=\"premium\" className=\"transition-all duration-200\">\r\n                        <RefreshCw className=\"h-4 w-4 mr-2\" />\r\n                        Refresh\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Error Alert */}\r\n            {loadError && (\r\n                <Alert className=\"bg-gradient-to-r from-red-500/20 to-red-600/20 border-red-500/30 backdrop-blur-xl\">\r\n                    <AlertTriangle className=\"h-4 w-4 text-red-400\" />\r\n                    <AlertDescription className=\"text-red-200\">\r\n                        {loadError} The dashboard is showing demo data with full functionality.\r\n                    </AlertDescription>\r\n                </Alert>\r\n            )}\r\n\r\n            {/* KPIs */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4\">\r\n                {kpis && kpis.map((kpi) => (\r\n                    <Card key={kpi.id} className=\"relative hover:scale-105 transition-all duration-200\">\r\n                        <CardContent className=\"p-6\">\r\n                            <div className=\"flex items-center justify-between\">\r\n                                <div>\r\n                                    <p className=\"text-sm font-medium text-gray-300\">{kpi.title}</p>\r\n                                    <p className=\"text-2xl font-bold text-white\">{kpi.value}</p>\r\n                                    <div className=\"flex items-center space-x-1 mt-1\">\r\n                                        {getTrendIcon(kpi.trend)}\r\n                                        <span className={`text-sm ${kpi.change >= 0 ? 'text-green-400' : 'text-red-400'}`}>\r\n                                            {kpi.change >= 0 ? '+' : ''}{kpi.change}%\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <Badge className={getUrgencyColor(kpi.urgency)} variant=\"premium\">\r\n                                    {kpi.urgency}\r\n                                </Badge>\r\n                            </div>\r\n                            <div className=\"mt-3 p-3 bg-gradient-to-r from-pink-500/10 to-purple-600/10 backdrop-blur-sm rounded-lg text-xs text-gray-200 border border-pink-500/20\">\r\n                                <Lightbulb className=\"h-3 w-3 inline mr-1 text-pink-400\" />\r\n                                {kpi.aiInsight}\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n                ))}\r\n            </div>\r\n\r\n            {/* Main Content */}\r\n            <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-4\">\r\n                <TabsList className=\"grid w-full grid-cols-8 bg-gradient-to-r from-slate-800/50 to-slate-900/50 backdrop-blur-xl border border-white/10 p-1 rounded-xl\">\r\n                    <TabsTrigger value=\"overview\" className=\"data-[state=active]:bg-gradient-to-r data-[state=active]:from-pink-500 data-[state=active]:to-purple-600 data-[state=active]:text-white data-[state=active]:shadow-lg data-[state=active]:shadow-pink-500/25 transition-all duration-200\">Overview</TabsTrigger>\r\n                    <TabsTrigger value=\"insights\" className=\"data-[state=active]:bg-gradient-to-r data-[state=active]:from-pink-500 data-[state=active]:to-purple-600 data-[state=active]:text-white data-[state=active]:shadow-lg data-[state=active]:shadow-pink-500/25 transition-all duration-200\">AI Insights</TabsTrigger>\r\n                    <TabsTrigger value=\"drops\" className=\"data-[state=active]:bg-gradient-to-r data-[state=active]:from-pink-500 data-[state=active]:to-purple-600 data-[state=active]:text-white data-[state=active]:shadow-lg data-[state=active]:shadow-pink-500/25 transition-all duration-200\">Drops</TabsTrigger>\r\n                    <TabsTrigger value=\"recommendations\" className=\"data-[state=active]:bg-gradient-to-r data-[state=active]:from-pink-500 data-[state=active]:to-purple-600 data-[state=active]:text-white data-[state=active]:shadow-lg data-[state=active]:shadow-pink-500/25 transition-all duration-200\">Smart Recs</TabsTrigger>\r\n                    <TabsTrigger value=\"todo\" className=\"data-[state=active]:bg-gradient-to-r data-[state=active]:from-pink-500 data-[state=active]:to-purple-600 data-[state=active]:text-white data-[state=active]:shadow-lg data-[state=active]:shadow-pink-500/25 transition-all duration-200\">AI To-Do</TabsTrigger>\r\n                    <TabsTrigger value=\"competitors\" className=\"data-[state=active]:bg-gradient-to-r data-[state=active]:from-pink-500 data-[state=active]:to-purple-600 data-[state=active]:text-white data-[state=active]:shadow-lg data-[state=active]:shadow-pink-500/25 transition-all duration-200\">Competitors</TabsTrigger>\r\n                    <TabsTrigger value=\"vip\" className=\"data-[state=active]:bg-gradient-to-r data-[state=active]:from-pink-500 data-[state=active]:to-purple-600 data-[state=active]:text-white data-[state=active]:shadow-lg data-[state=active]:shadow-pink-500/25 transition-all duration-200\">VIP Tracker</TabsTrigger>\r\n                    <TabsTrigger value=\"analytics\" className=\"data-[state=active]:bg-gradient-to-r data-[state=active]:from-pink-500 data-[state=active]:to-purple-600 data-[state=active]:text-white data-[state=active]:shadow-lg data-[state=active]:shadow-pink-500/25 transition-all duration-200\">Analytics</TabsTrigger>\r\n                </TabsList>\r\n\r\n                {/* Overview Tab */}\r\n                <TabsContent value=\"overview\" className=\"space-y-4\">\r\n                    <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4\">\r\n                        {/* Revenue Chart */}\r\n                        <Card className=\"lg:col-span-2\">\r\n                            <CardHeader>\r\n                                <CardTitle className=\"flex items-center space-x-2\">\r\n                                    <DollarSign className=\"h-5 w-5\" />\r\n                                    <span>Revenue vs Spend vs ROAS</span>\r\n                                </CardTitle>\r\n                            </CardHeader>\r\n                            <CardContent>\r\n                                <ResponsiveContainer width=\"100%\" height={300}>\r\n                                    <LineChart data={revenueData}>\r\n                                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                        <XAxis dataKey=\"date\" />\r\n                                        <YAxis />\r\n                                        <Tooltip />\r\n                                        <Line type=\"monotone\" dataKey=\"revenue\" stroke=\"#3b82f6\" name=\"Revenue\" />\r\n                                        <Line type=\"monotone\" dataKey=\"spend\" stroke=\"#ef4444\" name=\"Spend\" />\r\n                                        <Line type=\"monotone\" dataKey=\"roas\" stroke=\"#10b981\" name=\"ROAS\" />\r\n                                    </LineChart>\r\n                                </ResponsiveContainer>\r\n                            </CardContent>\r\n                        </Card>\r\n\r\n                        {/* AI Drop Predictor Card */}\r\n                        <AIDropPredictorCard />\r\n\r\n                        {/* AI ROI Forecast Card */}\r\n                        <AIROIForecastCard />\r\n\r\n                        {/* AI Strategy Composer Card */}\r\n                        <AIStrategyComposerCard />\r\n\r\n                        {/* Brand Mood */}\r\n                        <Card className=\"lg:col-span-2\">\r\n                            <CardHeader>\r\n                                <CardTitle className=\"flex items-center space-x-2\">\r\n                                    <Heart className=\"h-5 w-5\" />\r\n                                    <span>Brand Mood</span>\r\n                                </CardTitle>\r\n                            </CardHeader>\r\n                            <CardContent>\r\n                                {brandMood && (\r\n                                    <div className=\"space-y-4\">\r\n                                        <div className=\"flex items-center justify-between\">\r\n                                            <span className=\"text-sm font-medium\">Overall Sentiment</span>\r\n                                            <Badge className={brandMood.overall === 'positive' ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}>\r\n                                                {brandMood.overall}\r\n                                            </Badge>\r\n                                        </div>\r\n                                        <Progress value={brandMood.score * 10} className=\"w-full\" />\r\n                                        <p className=\"text-sm text-muted-foreground\">{brandMood.sentiment}</p>\r\n                                        <div>\r\n                                            <p className=\"text-sm font-medium mb-2\">Top Emotions:</p>\r\n                                            <div className=\"flex flex-wrap gap-1\">\r\n                                                {brandMood?.topEmotions?.map((emotion, index) => (\r\n                                                    <Badge key={index} variant=\"outline\" className=\"text-xs\">\r\n                                                        {emotion}\r\n                                                    </Badge>\r\n                                                ))}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </CardContent>\r\n                        </Card>\r\n                    </div>\r\n                </TabsContent>\r\n\r\n                {/* AI Insights Tab */}\r\n                <TabsContent value=\"insights\" className=\"space-y-4\">\r\n                    <div className=\"flex items-center justify-between mb-4\">\r\n                        <div>\r\n                            <h2 className=\"text-2xl font-bold text-white\">AI Business Insights</h2>\r\n                            <p className=\"text-gray-300\">Real-time intelligence powered by AI</p>\r\n                        </div>\r\n                        <Button onClick={handleRefresh} size=\"sm\" variant=\"outline\">\r\n                            <RefreshCw className=\"h-4 w-4 mr-2\" />\r\n                            Refresh\r\n                        </Button>\r\n                    </div>\r\n\r\n                    {sectionLoading.insights ? (\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                            {[1, 2, 3, 4, 5, 6].map((i) => (\r\n                                <Card key={i} className=\"relative\">\r\n                                    <CardContent className=\"p-6\">\r\n                                        <LoadingSkeleton />\r\n                                        <LoadingSkeleton className=\"mt-4\" />\r\n                                    </CardContent>\r\n                                </Card>\r\n                            ))}\r\n                        </div>\r\n                    ) : insights && insights.length > 0 ? (\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                            {insights.map((insight) => (\r\n                                <Card key={insight.id} className=\"relative hover:shadow-lg transition-all duration-200\">\r\n                                    <CardHeader>\r\n                                        <div className=\"flex items-center justify-between\">\r\n                                            <CardTitle className=\"text-sm flex items-center\">\r\n                                                <Brain className=\"h-4 w-4 mr-2 text-blue-500\" />\r\n                                                {insight.title}\r\n                                            </CardTitle>\r\n                                            <Badge className={getPriorityColor(insight.priority)}>\r\n                                                {insight.priority}\r\n                                            </Badge>\r\n                                        </div>\r\n                                    </CardHeader>\r\n                                    <CardContent>\r\n                                        <p className=\"text-sm text-muted-foreground mb-3\">{insight.description}</p>\r\n                                        <div className=\"flex items-center justify-between mb-3\">\r\n                                            <Badge variant=\"outline\" className=\"text-xs\">\r\n                                                {insight.category}\r\n                                            </Badge>\r\n                                            <span className=\"text-xs text-muted-foreground\">\r\n                                                {insight.aiConfidence * 100}% confidence\r\n                                            </span>\r\n                                        </div>\r\n                                        {insight.action && (\r\n                                            <Button size=\"sm\" className=\"w-full\">\r\n                                                {insight.action}\r\n                                            </Button>\r\n                                        )}\r\n                                        <div className=\"mt-2 text-xs text-gray-400\">\r\n                                            {insight.timestamp.toLocaleString()}\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            ))}\r\n                        </div>\r\n                    ) : (\r\n                        <EmptyState\r\n                            title=\"No AI Insights Available\"\r\n                            description=\"AI is analyzing your data. Check back soon for personalized insights.\"\r\n                            icon={Brain}\r\n                        />\r\n                    )}\r\n                </TabsContent>\r\n\r\n                {/* Drops Tab */}\r\n                <TabsContent value=\"drops\" className=\"space-y-4\">\r\n                    <div className=\"flex items-center justify-between mb-4\">\r\n                        <div>\r\n                            <h2 className=\"text-2xl font-bold text-white\">Product Drops Performance</h2>\r\n                            <p className=\"text-gray-300\">Track your drops and get AI-powered insights</p>\r\n                        </div>\r\n                        <div className=\"flex items-center space-x-2\">\r\n                            <Button onClick={handleRefresh} size=\"sm\" variant=\"outline\">\r\n                                <RefreshCw className=\"h-4 w-4 mr-2\" />\r\n                                Refresh\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {sectionLoading.drops ? (\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                            {[1, 2, 3, 4, 5, 6].map((i) => (\r\n                                <Card key={i} className=\"relative\">\r\n                                    <CardContent className=\"p-6\">\r\n                                        <LoadingSkeleton />\r\n                                        <LoadingSkeleton className=\"mt-4\" />\r\n                                    </CardContent>\r\n                                </Card>\r\n                            ))}\r\n                        </div>\r\n                    ) : drops && drops.length > 0 ? (\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                            {drops.map((drop) => (\r\n                                <Card key={drop.id} className=\"relative hover:shadow-lg transition-all duration-200\">\r\n                                    <CardHeader>\r\n                                        <div className=\"flex items-center justify-between\">\r\n                                            <CardTitle className=\"text-sm flex items-center\">\r\n                                                <TrendingUp className=\"h-4 w-4 mr-2 text-green-500\" />\r\n                                                {drop.productName}\r\n                                            </CardTitle>\r\n                                            <Badge className={getStatusColor(drop.status)}>\r\n                                                {drop.status}\r\n                                            </Badge>\r\n                                        </div>\r\n                                    </CardHeader>\r\n                                    <CardContent>\r\n                                        <div className=\"grid grid-cols-2 gap-4 mb-3\">\r\n                                            <div>\r\n                                                <p className=\"text-xs text-muted-foreground\">Views</p>\r\n                                                <p className=\"font-medium\">{drop.views.toLocaleString()}</p>\r\n                                            </div>\r\n                                            <div>\r\n                                                <p className=\"text-xs text-muted-foreground\">Revenue</p>\r\n                                                <p className=\"font-medium text-green-600\">${drop.revenue.toLocaleString()}</p>\r\n                                            </div>\r\n                                            <div>\r\n                                                <p className=\"text-xs text-muted-foreground\">Conversion</p>\r\n                                                <p className=\"font-medium\">{drop.conversionRate}%</p>\r\n                                            </div>\r\n                                            <div>\r\n                                                <p className=\"text-xs text-muted-foreground\">UGC Mentions</p>\r\n                                                <p className=\"font-medium\">{drop.ugcMentions}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"p-3 bg-gradient-to-r from-blue-50 to-purple-50 rounded-lg text-sm border border-blue-200\">\r\n                                            <Brain className=\"h-4 w-4 inline mr-2 text-blue-600\" />\r\n                                            {drop.aiRecommendation}\r\n                                        </div>\r\n                                        <div className=\"mt-3 text-xs text-gray-400\">\r\n                                            Drop date: {drop.date}\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            ))}\r\n                        </div>\r\n                    ) : (\r\n                        <EmptyState\r\n                            title=\"No Drops Data Available\"\r\n                            description=\"No product drops found. Create your first drop to see performance insights.\"\r\n                            icon={TrendingUp}\r\n                        />\r\n                    )}\r\n                </TabsContent>\r\n\r\n                {/* Smart Recommendations Tab */}\r\n                <TabsContent value=\"recommendations\" className=\"space-y-4\">\r\n                    <div className=\"flex items-center justify-between mb-4\">\r\n                        <div>\r\n                            <h2 className=\"text-2xl font-bold text-white\">Smart Recommendations</h2>\r\n                            <p className=\"text-gray-300\">AI-powered suggestions to grow your business</p>\r\n                        </div>\r\n                        <Button onClick={handleRefresh} size=\"sm\" variant=\"outline\">\r\n                            <RefreshCw className=\"h-4 w-4 mr-2\" />\r\n                            Refresh\r\n                        </Button>\r\n                    </div>\r\n\r\n                    {sectionLoading.recommendations ? (\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                            {[1, 2, 3, 4, 5, 6].map((i) => (\r\n                                <Card key={i} className=\"relative\">\r\n                                    <CardContent className=\"p-6\">\r\n                                        <LoadingSkeleton />\r\n                                        <LoadingSkeleton className=\"mt-4\" />\r\n                                    </CardContent>\r\n                                </Card>\r\n                            ))}\r\n                        </div>\r\n                    ) : recommendations && recommendations.length > 0 ? (\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                            {recommendations.map((rec) => (\r\n                                <Card key={rec.id} className=\"relative hover:shadow-lg transition-all duration-200\">\r\n                                    <CardHeader>\r\n                                        <div className=\"flex items-center justify-between\">\r\n                                            <CardTitle className=\"text-sm flex items-center\">\r\n                                                <Lightbulb className=\"h-4 w-4 mr-2 text-yellow-500\" />\r\n                                                {rec.title}\r\n                                            </CardTitle>\r\n                                            <Badge className={getPriorityColor(rec.priority)}>\r\n                                                {rec.priority}\r\n                                            </Badge>\r\n                                        </div>\r\n                                    </CardHeader>\r\n                                    <CardContent>\r\n                                        <p className=\"text-sm text-muted-foreground mb-3\">{rec.description}</p>\r\n                                        <div className=\"space-y-2 mb-3\">\r\n                                            <div className=\"flex items-center justify-between\">\r\n                                                <span className=\"text-xs text-muted-foreground\">Expected Impact</span>\r\n                                                <span className=\"text-xs font-medium text-green-600\">{rec.expectedImpact}</span>\r\n                                            </div>\r\n                                            <div className=\"flex items-center justify-between\">\r\n                                                <span className=\"text-xs text-muted-foreground\">Confidence</span>\r\n                                                <span className=\"text-xs font-medium\">{rec.confidence * 100}%</span>\r\n                                            </div>\r\n                                            <div className=\"flex items-center justify-between\">\r\n                                                <span className=\"text-xs text-muted-foreground\">Category</span>\r\n                                                <Badge variant=\"outline\" className=\"text-xs\">\r\n                                                    {rec.category}\r\n                                                </Badge>\r\n                                            </div>\r\n                                        </div>\r\n                                        <Button size=\"sm\" className=\"w-full\">\r\n                                            {rec.action}\r\n                                        </Button>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            ))}\r\n                        </div>\r\n                    ) : (\r\n                        <EmptyState\r\n                            title=\"No Recommendations Available\"\r\n                            description=\"AI is analyzing your data to provide personalized recommendations.\"\r\n                            icon={Lightbulb}\r\n                        />\r\n                    )}\r\n                </TabsContent>\r\n\r\n                {/* AI To-Do Tab */}\r\n                <TabsContent value=\"todo\" className=\"space-y-4\">\r\n                    <div className=\"flex items-center justify-between mb-4\">\r\n                        <div>\r\n                            <h2 className=\"text-2xl font-bold text-white\">AI To-Do List</h2>\r\n                            <p className=\"text-gray-300\">Smart tasks generated by AI to grow your business</p>\r\n                        </div>\r\n                        <div className=\"flex items-center space-x-2\">\r\n                            <Button onClick={handleRefresh} size=\"sm\" variant=\"outline\">\r\n                                <RefreshCw className=\"h-4 w-4 mr-2\" />\r\n                                Refresh\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {sectionLoading.todo ? (\r\n                        <div className=\"space-y-3\">\r\n                            {[1, 2, 3, 4, 5].map((i) => (\r\n                                <Card key={i} className=\"relative\">\r\n                                    <CardContent className=\"p-4\">\r\n                                        <LoadingSkeleton />\r\n                                        <LoadingSkeleton className=\"mt-2\" />\r\n                                    </CardContent>\r\n                                </Card>\r\n                            ))}\r\n                        </div>\r\n                    ) : todoList && todoList.length > 0 ? (\r\n                        <div className=\"space-y-3\">\r\n                            {todoList.map((item) => (\r\n                                <Card key={item.id} className={`relative hover:shadow-md transition-all duration-200 ${item.completed ? 'opacity-60 bg-gray-50' : ''}`}>\r\n                                    <CardContent className=\"p-4\">\r\n                                        <div className=\"flex items-start space-x-3\">\r\n                                            <Switch\r\n                                                checked={item.completed}\r\n                                                onCheckedChange={() => toggleTodoItem(item.id)}\r\n                                                className=\"mt-1\"\r\n                                            />\r\n                                            <div className=\"flex-1\">\r\n                                                <div className=\"flex items-center justify-between\">\r\n                                                    <h3 className={`font-medium ${item.completed ? 'line-through text-gray-500' : 'text-gray-900'}`}>\r\n                                                        {item.title}\r\n                                                    </h3>\r\n                                                    <div className=\"flex items-center space-x-2\">\r\n                                                        <Badge className={getPriorityColor(item.priority)}>\r\n                                                            {item.priority}\r\n                                                        </Badge>\r\n                                                        {item.aiGenerated && (\r\n                                                            <Brain className=\"h-4 w-4 text-blue-600\" />\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <p className={`text-sm mt-1 ${item.completed ? 'text-gray-400' : 'text-muted-foreground'}`}>\r\n                                                    {item.description}\r\n                                                </p>\r\n                                                <div className=\"flex items-center space-x-2 mt-2\">\r\n                                                    <Badge variant=\"outline\" className=\"text-xs\">\r\n                                                        {item.category}\r\n                                                    </Badge>\r\n                                                    {item.dueDate && (\r\n                                                        <span className=\"text-xs text-muted-foreground\">\r\n                                                            Due: {item.dueDate.toLocaleDateString()}\r\n                                                        </span>\r\n                                                    )}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            ))}\r\n                        </div>\r\n                    ) : (\r\n                        <EmptyState\r\n                            title=\"No Tasks Available\"\r\n                            description=\"AI will generate tasks based on your business data and insights.\"\r\n                            icon={Brain}\r\n                        />\r\n                    )}\r\n                </TabsContent>\r\n\r\n                {/* Competitors Tab */}\r\n                <TabsContent value=\"competitors\" className=\"space-y-4\">\r\n                    <div className=\"flex items-center justify-between mb-4\">\r\n                        <div>\r\n                            <h2 className=\"text-2xl font-bold text-white\">Competitor Analysis</h2>\r\n                            <p className=\"text-gray-300\">Track your competitors and get AI-powered insights</p>\r\n                        </div>\r\n                        <Button onClick={handleRefresh} size=\"sm\" variant=\"outline\">\r\n                            <RefreshCw className=\"h-4 w-4 mr-2\" />\r\n                            Refresh\r\n                        </Button>\r\n                    </div>\r\n\r\n                    {sectionLoading.competitors ? (\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                            {[1, 2, 3, 4, 5, 6].map((i) => (\r\n                                <Card key={i} className=\"relative\">\r\n                                    <CardContent className=\"p-6\">\r\n                                        <LoadingSkeleton />\r\n                                        <LoadingSkeleton className=\"mt-4\" />\r\n                                    </CardContent>\r\n                                </Card>\r\n                            ))}\r\n                        </div>\r\n                    ) : competitors && competitors.length > 0 ? (\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                            {competitors.map((competitor) => (\r\n                                <Card key={competitor.id} className=\"relative hover:shadow-lg transition-all duration-200\">\r\n                                    <CardHeader>\r\n                                        <div className=\"flex items-center justify-between\">\r\n                                            <CardTitle className=\"text-sm flex items-center\">\r\n                                                <BarChart3 className=\"h-4 w-4 mr-2 text-purple-500\" />\r\n                                                {competitor.username}\r\n                                            </CardTitle>\r\n                                            <Badge variant=\"outline\">{competitor.platform}</Badge>\r\n                                        </div>\r\n                                    </CardHeader>\r\n                                    <CardContent>\r\n                                        <div className=\"grid grid-cols-2 gap-4 mb-3\">\r\n                                            <div>\r\n                                                <p className=\"text-xs text-muted-foreground\">Followers</p>\r\n                                                <p className=\"font-medium\">{competitor.followers.toLocaleString()}</p>\r\n                                            </div>\r\n                                            <div>\r\n                                                <p className=\"text-xs text-muted-foreground\">Engagement</p>\r\n                                                <p className=\"font-medium\">{competitor.avgEngagement}%</p>\r\n                                            </div>\r\n                                            <div>\r\n                                                <p className=\"text-xs text-muted-foreground\">Posts Today</p>\r\n                                                <p className=\"font-medium\">{competitor.postsToday}</p>\r\n                                            </div>\r\n                                            <div>\r\n                                                <p className=\"text-xs text-muted-foreground\">Recent Posts</p>\r\n                                                <p className=\"font-medium\">{competitor.recentPosts}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"space-y-2 mb-3\">\r\n                                            <div>\r\n                                                <p className=\"text-xs font-medium\">Top Hook:</p>\r\n                                                <p className=\"text-xs text-muted-foreground\">{competitor.topHook}</p>\r\n                                            </div>\r\n                                            <div>\r\n                                                <p className=\"text-xs font-medium\">Visual Style:</p>\r\n                                                <p className=\"text-xs text-muted-foreground\">{competitor.visualStyle}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"p-3 bg-gradient-to-r from-purple-50 to-blue-50 rounded-lg text-sm border border-purple-200\">\r\n                                            <Brain className=\"h-4 w-4 inline mr-2 text-purple-600\" />\r\n                                            {competitor.aiAnalysis}\r\n                                        </div>\r\n                                        <div className=\"mt-2 text-xs text-gray-400\">\r\n                                            Last updated: {competitor.lastUpdated.toLocaleString()}\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            ))}\r\n                        </div>\r\n                    ) : (\r\n                        <EmptyState\r\n                            title=\"No Competitor Data Available\"\r\n                            description=\"Add competitors to track their performance and get insights.\"\r\n                            icon={BarChart3}\r\n                        />\r\n                    )}\r\n                </TabsContent>\r\n\r\n                {/* VIP Tracker Tab */}\r\n                <TabsContent value=\"vip\" className=\"space-y-4\">\r\n                    <div className=\"flex items-center justify-between mb-4\">\r\n                        <div>\r\n                            <h2 className=\"text-2xl font-bold text-white\">VIP Customer Tracker</h2>\r\n                            <p className=\"text-gray-300\">Monitor your high-value customers and their activities</p>\r\n                        </div>\r\n                        <Button onClick={handleRefresh} size=\"sm\" variant=\"outline\">\r\n                            <RefreshCw className=\"h-4 w-4 mr-2\" />\r\n                            Refresh\r\n                        </Button>\r\n                    </div>\r\n\r\n                    {sectionLoading.vip ? (\r\n                        <div className=\"space-y-3\">\r\n                            {[1, 2, 3, 4, 5].map((i) => (\r\n                                <Card key={i} className=\"relative\">\r\n                                    <CardContent className=\"p-4\">\r\n                                        <LoadingSkeleton />\r\n                                        <LoadingSkeleton className=\"mt-2\" />\r\n                                    </CardContent>\r\n                                </Card>\r\n                            ))}\r\n                        </div>\r\n                    ) : vipMovements && vipMovements.length > 0 ? (\r\n                        <div className=\"space-y-3\">\r\n                            {vipMovements.map((vip) => (\r\n                                <Card key={vip.id} className=\"relative hover:shadow-lg transition-all duration-200\">\r\n                                    <CardContent className=\"p-4\">\r\n                                        <div className=\"flex items-center justify-between mb-3\">\r\n                                            <div className=\"flex items-center space-x-3\">\r\n                                                <div className=\"w-12 h-12 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full flex items-center justify-center\">\r\n                                                    <Star className=\"h-6 w-6 text-white\" />\r\n                                                </div>\r\n                                                <div>\r\n                                                    <p className=\"font-medium text-lg\">{vip.customerName}</p>\r\n                                                    <p className=\"text-sm text-muted-foreground\">\r\n                                                        LTV: ${vip.ltv.toLocaleString()}\r\n                                                    </p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"text-right\">\r\n                                                <Badge className={getPriorityColor(vip.priority)}>\r\n                                                    {vip.priority}\r\n                                                </Badge>\r\n                                                {vip.value && (\r\n                                                    <p className=\"text-sm font-medium text-green-600 mt-1\">\r\n                                                        ${vip.value.toLocaleString()}\r\n                                                    </p>\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"flex items-center justify-between\">\r\n                                            <div>\r\n                                                <p className=\"text-sm font-medium capitalize\">{vip.action}</p>\r\n                                                {vip.productName && (\r\n                                                    <p className=\"text-xs text-muted-foreground\">{vip.productName}</p>\r\n                                                )}\r\n                                            </div>\r\n                                            <div className=\"text-right\">\r\n                                                <p className=\"text-xs text-muted-foreground\">\r\n                                                    {vip.timestamp.toLocaleDateString()}\r\n                                                </p>\r\n                                                <p className=\"text-xs text-muted-foreground\">\r\n                                                    Last purchase: {vip.lastPurchase.toLocaleDateString()}\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            ))}\r\n                        </div>\r\n                    ) : (\r\n                        <EmptyState\r\n                            title=\"No VIP Activity\"\r\n                            description=\"No VIP customer activity detected. Monitor your high-value customers here.\"\r\n                            icon={Star}\r\n                        />\r\n                    )}\r\n                </TabsContent>\r\n\r\n                {/* Analytics Tab */}\r\n                <TabsContent value=\"analytics\" className=\"space-y-4\">\r\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n                        {/* Engagement by Platform */}\r\n                        <Card>\r\n                            <CardHeader>\r\n                                <CardTitle>Engagement by Platform</CardTitle>\r\n                            </CardHeader>\r\n                            <CardContent>\r\n                                <ResponsiveContainer width=\"100%\" height={300}>\r\n                                    <BarChart data={engagementData}>\r\n                                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                        <XAxis dataKey=\"platform\" />\r\n                                        <YAxis />\r\n                                        <Tooltip />\r\n                                        <Bar dataKey=\"engagement\" fill=\"#3b82f6\" />\r\n                                    </BarChart>\r\n                                </ResponsiveContainer>\r\n                            </CardContent>\r\n                        </Card>\r\n\r\n                        {/* Platform Distribution */}\r\n                        <Card>\r\n                            <CardHeader>\r\n                                <CardTitle>Platform Distribution</CardTitle>\r\n                            </CardHeader>\r\n                            <CardContent>\r\n                                <ResponsiveContainer width=\"100%\" height={300}>\r\n                                    <PieChart>\r\n                                        <Pie\r\n                                            data={engagementData}\r\n                                            cx=\"50%\"\r\n                                            cy=\"50%\"\r\n                                            labelLine={false}\r\n                                            label={({ platform, followers }) => `${platform}: ${(followers / 326000 * 100).toFixed(1)}%`}\r\n                                            outerRadius={80}\r\n                                            fill=\"#8884d8\"\r\n                                            dataKey=\"followers\"\r\n                                        >\r\n                                            {engagementData.map((entry, index) => (\r\n                                                <Cell key={`cell-${index}`} fill={['#3b82f6', '#10b981', '#f59e0b', '#ef4444'][index % 4]} />\r\n                                            ))}\r\n                                        </Pie>\r\n                                        <Tooltip />\r\n                                    </PieChart>\r\n                                </ResponsiveContainer>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </div>\r\n                </TabsContent>\r\n            </Tabs>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AIPoweredBusinessDashboard "],"names":[],"mappings":"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","debugId":null}}]
}