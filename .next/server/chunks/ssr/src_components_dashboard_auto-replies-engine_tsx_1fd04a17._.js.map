{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/auto-replies-engine.tsx"],"sourcesContent":["// AutoReply-AI-Start: AI-Powered Auto Replies Engine UI Component\r\n\"use client\"\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Textarea } from \"@/components/ui/textarea\"\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\r\nimport { Switch } from \"@/components/ui/switch\"\r\nimport { Label } from \"@/components/ui/label\"\r\nimport { Separator } from \"@/components/ui/separator\"\r\nimport { ScrollArea } from \"@/components/ui/scroll-area\"\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\r\nimport {\r\n    MessageSquare,\r\n    Settings,\r\n    BarChart3,\r\n    Play,\r\n    Pause,\r\n    Plus,\r\n    Edit,\r\n    Trash2,\r\n    Copy,\r\n    CheckCircle,\r\n    AlertTriangle,\r\n    Clock,\r\n    Users,\r\n    Zap,\r\n    Brain,\r\n    Globe,\r\n    Smartphone,\r\n    Mail,\r\n    Monitor,\r\n    TrendingUp,\r\n    TrendingDown,\r\n    Activity,\r\n    Eye,\r\n    Target,\r\n    Filter,\r\n    Search,\r\n    RefreshCw,\r\n    Download,\r\n    Upload\r\n} from \"lucide-react\"\r\nimport { useToast } from \"@/hooks/use-toast\"\r\nimport { LineChart, Line, AreaChart, Area, BarChart, Bar, ResponsiveContainer, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\"\r\nimport styles from \"./auto-replies-engine.module.css\"\r\n\r\ninterface AutoReplyTemplate {\r\n    id: string\r\n    name: string\r\n    category: string\r\n    intent: string[]\r\n    platforms: string[]\r\n    template: string\r\n    variables: string[]\r\n    tone: string\r\n    isActive: boolean\r\n    usageCount: number\r\n    successRate: number\r\n    lastUsed: Date\r\n}\r\n\r\ninterface AutoReplyResponse {\r\n    id: string\r\n    originalMessageId: string\r\n    senderId: string\r\n    platform: string\r\n    intent: {\r\n        type: string\r\n        confidence: number\r\n        urgency: string\r\n        emotionalTone: string\r\n        requiresHumanEscalation: boolean\r\n        suggestedResponse: string\r\n        tags: string[]\r\n    }\r\n    response: string\r\n    templateUsed?: string\r\n    wasEdited: boolean\r\n    wasApproved: boolean\r\n    responseTime: number\r\n    sentAt: Date\r\n    tags: string[]\r\n    escalationTriggered: boolean\r\n}\r\n\r\ninterface AutoReplyAnalytics {\r\n    totalResponses: number\r\n    averageResponseTime: number\r\n    successRate: number\r\n    escalationRate: number\r\n    platformBreakdown: Record<string, number>\r\n    intentBreakdown: Record<string, number>\r\n    topTemplates: AutoReplyTemplate[]\r\n    recentResponses: AutoReplyResponse[]\r\n}\r\n\r\nconst mockAnalytics: AutoReplyAnalytics = {\r\n    totalResponses: 1247,\r\n    averageResponseTime: 3200,\r\n    successRate: 0.94,\r\n    escalationRate: 0.12,\r\n    platformBreakdown: {\r\n        instagram: 45,\r\n        whatsapp: 35,\r\n        email: 20\r\n    },\r\n    intentBreakdown: {\r\n        question: 30,\r\n        complaint: 15,\r\n        hype: 25,\r\n        order_tracking: 20,\r\n        general: 10\r\n    },\r\n    topTemplates: [],\r\n    recentResponses: []\r\n}\r\n\r\nconst mockTemplates: AutoReplyTemplate[] = [\r\n    {\r\n        id: 'faq-shipping',\r\n        name: 'Shipping Information',\r\n        category: 'FAQ',\r\n        intent: ['question', 'request'],\r\n        platforms: ['instagram', 'whatsapp', 'email'],\r\n        template: 'Hi {name}! Shipping takes 2-3 business days within Egypt. International shipping available. Track your order at {tracking_link}',\r\n        variables: ['name', 'tracking_link'],\r\n        tone: 'helpful',\r\n        isActive: true,\r\n        usageCount: 156,\r\n        successRate: 0.92,\r\n        lastUsed: new Date()\r\n    },\r\n    {\r\n        id: 'vip-greeting',\r\n        name: 'VIP Customer Greeting',\r\n        category: 'VIP',\r\n        intent: ['hype', 'general'],\r\n        platforms: ['instagram', 'whatsapp'],\r\n        template: 'Hey {name}! ðŸ‘‘ VIP access granted. What can we help you with today?',\r\n        variables: ['name'],\r\n        tone: 'excited',\r\n        isActive: true,\r\n        usageCount: 89,\r\n        successRate: 0.95,\r\n        lastUsed: new Date()\r\n    },\r\n    {\r\n        id: 'drop-hype',\r\n        name: 'Drop Hype Response',\r\n        category: 'Marketing',\r\n        intent: ['hype', 'drop_inquiry'],\r\n        platforms: ['instagram', 'whatsapp'],\r\n        template: 'ðŸ”¥ {name}, you know what\\'s coming! Next drop: {drop_date}. Set your alarms!',\r\n        variables: ['name', 'drop_date'],\r\n        tone: 'excited',\r\n        isActive: true,\r\n        usageCount: 234,\r\n        successRate: 0.88,\r\n        lastUsed: new Date()\r\n    }\r\n]\r\n\r\nconst mockRecentResponses: AutoReplyResponse[] = [\r\n    {\r\n        id: 'reply_1',\r\n        originalMessageId: 'msg_1',\r\n        senderId: 'user_123',\r\n        platform: 'instagram',\r\n        intent: {\r\n            type: 'question',\r\n            confidence: 0.85,\r\n            urgency: 'low',\r\n            emotionalTone: 'neutral',\r\n            requiresHumanEscalation: false,\r\n            suggestedResponse: 'faq-shipping',\r\n            tags: ['shipping', 'faq']\r\n        },\r\n        response: 'Hi there! Shipping takes 2-3 business days within Egypt. International shipping available. Track your order at https://track.essentials-egypt.com',\r\n        templateUsed: 'faq-shipping',\r\n        wasEdited: false,\r\n        wasApproved: false,\r\n        responseTime: 3200,\r\n        sentAt: new Date(Date.now() - 5 * 60 * 1000),\r\n        tags: ['shipping', 'faq'],\r\n        escalationTriggered: false\r\n    },\r\n    {\r\n        id: 'reply_2',\r\n        originalMessageId: 'msg_2',\r\n        senderId: 'vip_user_456',\r\n        platform: 'whatsapp',\r\n        intent: {\r\n            type: 'hype',\r\n            confidence: 0.92,\r\n            urgency: 'low',\r\n            emotionalTone: 'positive',\r\n            requiresHumanEscalation: false,\r\n            suggestedResponse: 'vip-greeting',\r\n            tags: ['vip', 'engagement']\r\n        },\r\n        response: 'ðŸ‘‘ Hey VIP! ðŸ‘‘ VIP access granted. What can we help you with today?',\r\n        templateUsed: 'vip-greeting',\r\n        wasEdited: false,\r\n        wasApproved: false,\r\n        responseTime: 2800,\r\n        sentAt: new Date(Date.now() - 15 * 60 * 1000),\r\n        tags: ['vip', 'engagement'],\r\n        escalationTriggered: false\r\n    }\r\n]\r\n\r\nconst responseTimeData = [\r\n    { time: \"00:00\", responses: 12, avgTime: 3200 },\r\n    { time: \"04:00\", responses: 8, avgTime: 3500 },\r\n    { time: \"08:00\", responses: 45, avgTime: 3100 },\r\n    { time: \"12:00\", responses: 89, avgTime: 2900 },\r\n    { time: \"16:00\", responses: 67, avgTime: 3300 },\r\n    { time: \"20:00\", responses: 34, avgTime: 3000 },\r\n    { time: \"24:00\", responses: 15, avgTime: 3400 }\r\n]\r\n\r\nexport function AutoRepliesEngine() {\r\n    const [activeTab, setActiveTab] = useState(\"overview\")\r\n    const [isSystemActive, setIsSystemActive] = useState(true)\r\n    const [templates, setTemplates] = useState<AutoReplyTemplate[]>(mockTemplates)\r\n    const [recentResponses, setRecentResponses] = useState<AutoReplyResponse[]>(mockRecentResponses)\r\n    const [analytics, setAnalytics] = useState<AutoReplyAnalytics>(mockAnalytics)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const { toast } = useToast()\r\n\r\n    // AutoReply-AI-Start: Load analytics data\r\n    useEffect(() => {\r\n        // Add a small delay to ensure the component is fully mounted\r\n        const timer = setTimeout(() => {\r\n            loadAnalytics()\r\n        }, 100)\r\n\r\n        return () => clearTimeout(timer)\r\n    }, [])\r\n\r\n    const loadAnalytics = async () => {\r\n        setIsLoading(true)\r\n        try {\r\n            const response = await fetch('/api/auto-replies/analytics')\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`)\r\n            }\r\n            const data = await response.json()\r\n            if (data.success) {\r\n                setAnalytics(data.analytics)\r\n                setIsSystemActive(data.systemStatus.isActive)\r\n            } else {\r\n                throw new Error(data.error || 'Failed to load analytics')\r\n            }\r\n        } catch (error) {\r\n            console.error('Failed to load analytics:', error)\r\n            // Fallback to mock data if API fails\r\n            setAnalytics(mockAnalytics)\r\n            setIsSystemActive(true)\r\n            toast({\r\n                title: \"Warning\",\r\n                description: \"Using mock data - API endpoint not available\",\r\n                variant: \"destructive\"\r\n            })\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    // AutoReply-AI-Start: Toggle system status\r\n    const toggleSystem = async (active: boolean) => {\r\n        try {\r\n            const response = await fetch('/api/auto-replies/toggle', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ active })\r\n            })\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`)\r\n            }\r\n\r\n            const data = await response.json()\r\n            if (data.success) {\r\n                setIsSystemActive(data.isActive)\r\n                toast({\r\n                    title: \"System Updated\",\r\n                    description: data.message,\r\n                })\r\n            } else {\r\n                throw new Error(data.error || 'Failed to update system status')\r\n            }\r\n        } catch (error) {\r\n            console.error('Failed to toggle system:', error)\r\n            // Fallback to local state if API fails\r\n            setIsSystemActive(active)\r\n            toast({\r\n                title: \"Warning\",\r\n                description: \"System updated locally - API endpoint not available\",\r\n                variant: \"destructive\"\r\n            })\r\n        }\r\n    }\r\n\r\n    // AutoReply-AI-Start: Get platform icon\r\n    const getPlatformIcon = (platform: string) => {\r\n        switch (platform) {\r\n            case 'instagram': return <Smartphone className=\"h-4 w-4\" />\r\n            case 'whatsapp': return <MessageSquare className=\"h-4 w-4\" />\r\n            case 'email': return <Mail className=\"h-4 w-4\" />\r\n            case 'live_chat': return <Monitor className=\"h-4 w-4\" />\r\n            default: return <Globe className=\"h-4 w-4\" />\r\n        }\r\n    }\r\n\r\n    // AutoReply-AI-Start: Get urgency color\r\n    const getUrgencyColor = (urgency: string) => {\r\n        switch (urgency) {\r\n            case 'critical': return 'bg-red-500'\r\n            case 'high': return 'bg-orange-500'\r\n            case 'medium': return 'bg-yellow-500'\r\n            case 'low': return 'bg-green-500'\r\n            default: return 'bg-gray-500'\r\n        }\r\n    }\r\n\r\n    // AutoReply-AI-Start: Get progress bar width class\r\n    const getProgressWidthClass = (percentage: number) => {\r\n        const roundedPercentage = Math.round(percentage / 5) * 5\r\n        return styles[`progressWidth${roundedPercentage}`] || styles.progressWidth100\r\n    }\r\n\r\n    // AutoReply-AI-Start: Test API connectivity\r\n    const testAPIConnection = async () => {\r\n        try {\r\n            const response = await fetch('/api/health')\r\n            if (response.ok) {\r\n                const data = await response.json()\r\n                toast({\r\n                    title: \"API Test\",\r\n                    description: \"API is working correctly\",\r\n                })\r\n                console.log('API Health Check:', data)\r\n            } else {\r\n                throw new Error(`HTTP ${response.status}`)\r\n            }\r\n        } catch (error) {\r\n            console.error('API Test Failed:', error)\r\n            toast({\r\n                title: \"API Test Failed\",\r\n                description: \"Cannot connect to API endpoints\",\r\n                variant: \"destructive\"\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            {/* Header */}\r\n            <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                    <h1 className=\"text-3xl font-bold\">Auto Replies Engine</h1>\r\n                    <p className=\"text-muted-foreground\">AI-powered real-time message responses</p>\r\n                </div>\r\n                <div className=\"flex items-center gap-4\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                        <Switch\r\n                            checked={isSystemActive}\r\n                            onCheckedChange={toggleSystem}\r\n                        />\r\n                        <Label>System Active</Label>\r\n                    </div>\r\n                    <Button variant=\"outline\" size=\"sm\" onClick={testAPIConnection}>\r\n                        <Activity className=\"h-4 w-4 mr-2\" />\r\n                        Test API\r\n                    </Button>\r\n                    <Button variant=\"outline\" size=\"sm\" onClick={loadAnalytics} disabled={isLoading}>\r\n                        <RefreshCw className={`h-4 w-4 mr-2 ${isLoading ? 'animate-spin' : ''}`} />\r\n                        {isLoading ? 'Loading...' : 'Refresh'}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Loading State */}\r\n            {isLoading && (\r\n                <Card>\r\n                    <CardContent className=\"flex items-center justify-center py-8\">\r\n                        <div className=\"flex items-center gap-2\">\r\n                            <RefreshCw className=\"h-4 w-4 animate-spin\" />\r\n                            <span>Loading auto replies data...</span>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n            )}\r\n\r\n            {/* Key Metrics Cards */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n                <Card>\r\n                    <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                        <CardTitle className=\"text-sm font-medium\">Total Responses</CardTitle>\r\n                        <MessageSquare className=\"h-4 w-4 text-muted-foreground\" />\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                        <div className=\"text-2xl font-bold\">{analytics.totalResponses.toLocaleString()}</div>\r\n                        <p className=\"text-xs text-muted-foreground flex items-center\">\r\n                            <TrendingUp className=\"h-3 w-3 mr-1 text-green-500\" />\r\n                            +12.5% from yesterday\r\n                        </p>\r\n                    </CardContent>\r\n                </Card>\r\n\r\n                <Card>\r\n                    <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                        <CardTitle className=\"text-sm font-medium\">Success Rate</CardTitle>\r\n                        <CheckCircle className=\"h-4 w-4 text-muted-foreground\" />\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                        <div className=\"text-2xl font-bold\">{(analytics.successRate * 100).toFixed(1)}%</div>\r\n                        <p className=\"text-xs text-muted-foreground flex items-center\">\r\n                            <TrendingUp className=\"h-3 w-3 mr-1 text-green-500\" />\r\n                            +2.1% from yesterday\r\n                        </p>\r\n                    </CardContent>\r\n                </Card>\r\n\r\n                <Card>\r\n                    <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                        <CardTitle className=\"text-sm font-medium\">Avg Response Time</CardTitle>\r\n                        <Clock className=\"h-4 w-4 text-muted-foreground\" />\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                        <div className=\"text-2xl font-bold\">{(analytics.averageResponseTime / 1000).toFixed(1)}s</div>\r\n                        <p className=\"text-xs text-muted-foreground flex items-center\">\r\n                            <TrendingDown className=\"h-3 w-3 mr-1 text-green-500\" />\r\n                            -0.3s from yesterday\r\n                        </p>\r\n                    </CardContent>\r\n                </Card>\r\n\r\n                <Card>\r\n                    <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                        <CardTitle className=\"text-sm font-medium\">Escalation Rate</CardTitle>\r\n                        <AlertTriangle className=\"h-4 w-4 text-muted-foreground\" />\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                        <div className=\"text-2xl font-bold\">{(analytics.escalationRate * 100).toFixed(1)}%</div>\r\n                        <p className=\"text-xs text-muted-foreground flex items-center\">\r\n                            <TrendingDown className=\"h-3 w-3 mr-1 text-green-500\" />\r\n                            -1.2% from yesterday\r\n                        </p>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n\r\n            {/* Main Content Tabs */}\r\n            <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-4\">\r\n                <TabsList className=\"grid w-full grid-cols-5\">\r\n                    <TabsTrigger value=\"overview\">Overview</TabsTrigger>\r\n                    <TabsTrigger value=\"templates\">Templates</TabsTrigger>\r\n                    <TabsTrigger value=\"responses\">Recent Responses</TabsTrigger>\r\n                    <TabsTrigger value=\"analytics\">Analytics</TabsTrigger>\r\n                    <TabsTrigger value=\"settings\">Settings</TabsTrigger>\r\n                </TabsList>\r\n\r\n                {/* Overview Tab */}\r\n                <TabsContent value=\"overview\" className=\"space-y-4\">\r\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                        {/* Response Time Chart */}\r\n                        <Card>\r\n                            <CardHeader>\r\n                                <CardTitle>Response Time Trends</CardTitle>\r\n                                <CardDescription>Average response time over 24 hours</CardDescription>\r\n                            </CardHeader>\r\n                            <CardContent>\r\n                                <ResponsiveContainer width=\"100%\" height={300}>\r\n                                    <LineChart data={responseTimeData}>\r\n                                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                        <XAxis dataKey=\"time\" />\r\n                                        <YAxis />\r\n                                        <Tooltip />\r\n                                        <Legend />\r\n                                        <Line type=\"monotone\" dataKey=\"responses\" stroke=\"#3B82F6\" strokeWidth={2} />\r\n                                        <Line type=\"monotone\" dataKey=\"avgTime\" stroke=\"#10B981\" strokeWidth={2} />\r\n                                    </LineChart>\r\n                                </ResponsiveContainer>\r\n                            </CardContent>\r\n                        </Card>\r\n\r\n                        {/* Platform & Intent Distribution */}\r\n                        <div className=\"space-y-4\">\r\n                            <Card>\r\n                                <CardHeader>\r\n                                    <CardTitle>Platform Distribution</CardTitle>\r\n                                </CardHeader>\r\n                                <CardContent>\r\n                                    <div className=\"space-y-3\">\r\n                                        {Object.entries(analytics.platformBreakdown).map(([platform, percentage]) => (\r\n                                            <div key={platform} className=\"flex items-center justify-between\">\r\n                                                <div className=\"flex items-center gap-2\">\r\n                                                    {getPlatformIcon(platform)}\r\n                                                    <span className=\"capitalize\">{platform}</span>\r\n                                                </div>\r\n                                                <div className=\"flex items-center gap-2\">\r\n                                                    <div className=\"w-24 bg-gray-200 rounded-full h-2\">\r\n                                                        <div\r\n                                                            className={`${styles.progressBar} ${styles.progressBarBlue} ${getProgressWidthClass(percentage)}`}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <span className=\"text-sm font-medium\">{percentage}%</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </CardContent>\r\n                            </Card>\r\n\r\n                            <Card>\r\n                                <CardHeader>\r\n                                    <CardTitle>Intent Distribution</CardTitle>\r\n                                </CardHeader>\r\n                                <CardContent>\r\n                                    <div className=\"space-y-3\">\r\n                                        {Object.entries(analytics.intentBreakdown).map(([intent, percentage]) => (\r\n                                            <div key={intent} className=\"flex items-center justify-between\">\r\n                                                <span className=\"capitalize\">{intent.replace('_', ' ')}</span>\r\n                                                <div className=\"flex items-center gap-2\">\r\n                                                    <div className=\"w-24 bg-gray-200 rounded-full h-2\">\r\n                                                        <div\r\n                                                            className={`${styles.progressBar} ${styles.progressBarGreen} ${getProgressWidthClass(percentage)}`}\r\n                                                        />\r\n                                                    </div>\r\n                                                    <span className=\"text-sm font-medium\">{percentage}%</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </div>\r\n                    </div>\r\n                </TabsContent>\r\n\r\n                {/* Templates Tab */}\r\n                <TabsContent value=\"templates\" className=\"space-y-4\">\r\n                    <Card>\r\n                        <CardHeader>\r\n                            <div className=\"flex items-center justify-between\">\r\n                                <div>\r\n                                    <CardTitle>Response Templates</CardTitle>\r\n                                    <CardDescription>Manage AI response templates and categories</CardDescription>\r\n                                </div>\r\n                                <Button size=\"sm\">\r\n                                    <Plus className=\"h-4 w-4 mr-2\" />\r\n                                    Add Template\r\n                                </Button>\r\n                            </div>\r\n                        </CardHeader>\r\n                        <CardContent>\r\n                            <div className=\"space-y-4\">\r\n                                {templates.map((template) => (\r\n                                    <div key={template.id} className=\"border rounded-lg p-4\">\r\n                                        <div className=\"flex items-center justify-between mb-3\">\r\n                                            <div>\r\n                                                <div className=\"font-medium\">{template.name}</div>\r\n                                                <div className=\"text-sm text-muted-foreground\">{template.category}</div>\r\n                                            </div>\r\n                                            <div className=\"flex items-center gap-2\">\r\n                                                <Badge variant={template.isActive ? \"default\" : \"secondary\"}>\r\n                                                    {template.isActive ? \"Active\" : \"Inactive\"}\r\n                                                </Badge>\r\n                                                <Button size=\"sm\" variant=\"outline\">\r\n                                                    <Edit className=\"h-4 w-4\" />\r\n                                                </Button>\r\n                                                <Button size=\"sm\" variant=\"outline\">\r\n                                                    <Copy className=\"h-4 w-4\" />\r\n                                                </Button>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"mb-3\">\r\n                                            <div className=\"text-sm text-muted-foreground mb-1\">Template:</div>\r\n                                            <div className=\"bg-muted p-3 rounded text-sm\">{template.template}</div>\r\n                                        </div>\r\n\r\n                                        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\r\n                                            <div>\r\n                                                <div className=\"text-muted-foreground\">Usage</div>\r\n                                                <div className=\"font-medium\">{template.usageCount}</div>\r\n                                            </div>\r\n                                            <div>\r\n                                                <div className=\"text-muted-foreground\">Success Rate</div>\r\n                                                <div className=\"font-medium\">{(template.successRate * 100).toFixed(1)}%</div>\r\n                                            </div>\r\n                                            <div>\r\n                                                <div className=\"text-muted-foreground\">Tone</div>\r\n                                                <div className=\"font-medium capitalize\">{template.tone}</div>\r\n                                            </div>\r\n                                            <div>\r\n                                                <div className=\"text-muted-foreground\">Platforms</div>\r\n                                                <div className=\"font-medium\">{template.platforms.length}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n                </TabsContent>\r\n\r\n                {/* Recent Responses Tab */}\r\n                <TabsContent value=\"responses\" className=\"space-y-4\">\r\n                    <Card>\r\n                        <CardHeader>\r\n                            <CardTitle>Recent Auto Replies</CardTitle>\r\n                            <CardDescription>Latest AI-generated responses and their performance</CardDescription>\r\n                        </CardHeader>\r\n                        <CardContent>\r\n                            <div className=\"space-y-4\">\r\n                                {recentResponses.map((response) => (\r\n                                    <div key={response.id} className=\"border rounded-lg p-4\">\r\n                                        <div className=\"flex items-center justify-between mb-3\">\r\n                                            <div className=\"flex items-center gap-3\">\r\n                                                {getPlatformIcon(response.platform)}\r\n                                                <div>\r\n                                                    <div className=\"font-medium\">{response.senderId}</div>\r\n                                                    <div className=\"text-sm text-muted-foreground\">\r\n                                                        {response.sentAt.toLocaleString()}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"flex items-center gap-2\">\r\n                                                <Badge className={getUrgencyColor(response.intent.urgency)}>\r\n                                                    {response.intent.urgency}\r\n                                                </Badge>\r\n                                                {response.escalationTriggered && (\r\n                                                    <Badge variant=\"destructive\">Escalated</Badge>\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-3\">\r\n                                            <div>\r\n                                                <div className=\"text-sm font-medium mb-1\">Intent</div>\r\n                                                <div className=\"text-sm text-muted-foreground capitalize\">\r\n                                                    {response.intent.type.replace('_', ' ')}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div>\r\n                                                <div className=\"text-sm font-medium mb-1\">Response Time</div>\r\n                                                <div className=\"text-sm text-muted-foreground\">\r\n                                                    {(response.responseTime / 1000).toFixed(1)}s\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"bg-muted/50 rounded p-3 mb-3\">\r\n                                            <div className=\"text-sm font-medium mb-1\">Response</div>\r\n                                            <div className=\"text-sm text-muted-foreground\">{response.response}</div>\r\n                                        </div>\r\n\r\n                                        <div className=\"flex items-center gap-2\">\r\n                                            {response.tags.map((tag) => (\r\n                                                <Badge key={tag} variant=\"secondary\" className=\"text-xs\">\r\n                                                    {tag}\r\n                                                </Badge>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n                </TabsContent>\r\n\r\n                {/* Analytics Tab */}\r\n                <TabsContent value=\"analytics\" className=\"space-y-4\">\r\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                        {/* Performance Metrics */}\r\n                        <Card>\r\n                            <CardHeader>\r\n                                <CardTitle>Performance Metrics</CardTitle>\r\n                                <CardDescription>Key performance indicators</CardDescription>\r\n                            </CardHeader>\r\n                            <CardContent>\r\n                                <div className=\"space-y-4\">\r\n                                    <div className=\"flex items-center justify-between\">\r\n                                        <span>Total Responses</span>\r\n                                        <span className=\"font-semibold\">{analytics.totalResponses.toLocaleString()}</span>\r\n                                    </div>\r\n                                    <div className=\"flex items-center justify-between\">\r\n                                        <span>Success Rate</span>\r\n                                        <span className=\"font-semibold\">{(analytics.successRate * 100).toFixed(1)}%</span>\r\n                                    </div>\r\n                                    <div className=\"flex items-center justify-between\">\r\n                                        <span>Avg Response Time</span>\r\n                                        <span className=\"font-semibold\">{(analytics.averageResponseTime / 1000).toFixed(1)}s</span>\r\n                                    </div>\r\n                                    <div className=\"flex items-center justify-between\">\r\n                                        <span>Escalation Rate</span>\r\n                                        <span className=\"font-semibold\">{(analytics.escalationRate * 100).toFixed(1)}%</span>\r\n                                    </div>\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n\r\n                        {/* Top Templates */}\r\n                        <Card>\r\n                            <CardHeader>\r\n                                <CardTitle>Top Performing Templates</CardTitle>\r\n                                <CardDescription>Most successful response templates</CardDescription>\r\n                            </CardHeader>\r\n                            <CardContent>\r\n                                <div className=\"space-y-3\">\r\n                                    {templates.slice(0, 5).map((template) => (\r\n                                        <div key={template.id} className=\"flex items-center justify-between\">\r\n                                            <div>\r\n                                                <div className=\"font-medium\">{template.name}</div>\r\n                                                <div className=\"text-sm text-muted-foreground\">{template.category}</div>\r\n                                            </div>\r\n                                            <div className=\"text-right\">\r\n                                                <div className=\"font-semibold\">{(template.successRate * 100).toFixed(1)}%</div>\r\n                                                <div className=\"text-xs text-muted-foreground\">{template.usageCount} uses</div>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </div>\r\n                </TabsContent>\r\n\r\n                {/* Settings Tab */}\r\n                <TabsContent value=\"settings\" className=\"space-y-4\">\r\n                    <Card>\r\n                        <CardHeader>\r\n                            <CardTitle>System Settings</CardTitle>\r\n                            <CardDescription>Configure auto reply system behavior</CardDescription>\r\n                        </CardHeader>\r\n                        <CardContent>\r\n                            <div className=\"space-y-6\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <div>\r\n                                        <Label>Enable Auto Replies</Label>\r\n                                        <p className=\"text-sm text-muted-foreground\">\r\n                                            Automatically respond to incoming messages\r\n                                        </p>\r\n                                    </div>\r\n                                    <Switch checked={isSystemActive} onCheckedChange={toggleSystem} />\r\n                                </div>\r\n\r\n                                <Separator />\r\n\r\n                                <div className=\"space-y-4\">\r\n                                    <h4 className=\"font-semibold\">Platform Settings</h4>\r\n                                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                                        <div className=\"space-y-2\">\r\n                                            <Label>Instagram Response Delay</Label>\r\n                                            <Input type=\"number\" defaultValue={3} min={1} max={10} />\r\n                                            <p className=\"text-xs text-muted-foreground\">Seconds before responding</p>\r\n                                        </div>\r\n                                        <div className=\"space-y-2\">\r\n                                            <Label>WhatsApp Response Delay</Label>\r\n                                            <Input type=\"number\" defaultValue={2} min={1} max={10} />\r\n                                            <p className=\"text-xs text-muted-foreground\">Seconds before responding</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <Separator />\r\n\r\n                                <div className=\"space-y-4\">\r\n                                    <h4 className=\"font-semibold\">Escalation Rules</h4>\r\n                                    <div className=\"space-y-2\">\r\n                                        <div className=\"flex items-center justify-between\">\r\n                                            <Label>Escalate complaints after</Label>\r\n                                            <Input type=\"number\" defaultValue={5} min={1} max={60} className=\"w-20\" />\r\n                                            <span className=\"text-sm\">minutes</span>\r\n                                        </div>\r\n                                        <div className=\"flex items-center justify-between\">\r\n                                            <Label>Escalate VIP messages after</Label>\r\n                                            <Input type=\"number\" defaultValue={2} min={1} max={30} className=\"w-20\" />\r\n                                            <span className=\"text-sm\">minutes</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n                </TabsContent>\r\n            </Tabs>\r\n        </div>\r\n    )\r\n} "],"names":[],"mappings":"AAAA,kEAAkE;;;;;AAGlE;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+BA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAhDA;;;;;;;;;;;;;;;AAoGA,MAAM,gBAAoC;IACtC,gBAAgB;IAChB,qBAAqB;IACrB,aAAa;IACb,gBAAgB;IAChB,mBAAmB;QACf,WAAW;QACX,UAAU;QACV,OAAO;IACX;IACA,iBAAiB;QACb,UAAU;QACV,WAAW;QACX,MAAM;QACN,gBAAgB;QAChB,SAAS;IACb;IACA,cAAc,EAAE;IAChB,iBAAiB,EAAE;AACvB;AAEA,MAAM,gBAAqC;IACvC;QACI,IAAI;QACJ,MAAM;QACN,UAAU;QACV,QAAQ;YAAC;YAAY;SAAU;QAC/B,WAAW;YAAC;YAAa;YAAY;SAAQ;QAC7C,UAAU;QACV,WAAW;YAAC;YAAQ;SAAgB;QACpC,MAAM;QACN,UAAU;QACV,YAAY;QACZ,aAAa;QACb,UAAU,IAAI;IAClB;IACA;QACI,IAAI;QACJ,MAAM;QACN,UAAU;QACV,QAAQ;YAAC;YAAQ;SAAU;QAC3B,WAAW;YAAC;YAAa;SAAW;QACpC,UAAU;QACV,WAAW;YAAC;SAAO;QACnB,MAAM;QACN,UAAU;QACV,YAAY;QACZ,aAAa;QACb,UAAU,IAAI;IAClB;IACA;QACI,IAAI;QACJ,MAAM;QACN,UAAU;QACV,QAAQ;YAAC;YAAQ;SAAe;QAChC,WAAW;YAAC;YAAa;SAAW;QACpC,UAAU;QACV,WAAW;YAAC;YAAQ;SAAY;QAChC,MAAM;QACN,UAAU;QACV,YAAY;QACZ,aAAa;QACb,UAAU,IAAI;IAClB;CACH;AAED,MAAM,sBAA2C;IAC7C;QACI,IAAI;QACJ,mBAAmB;QACnB,UAAU;QACV,UAAU;QACV,QAAQ;YACJ,MAAM;YACN,YAAY;YACZ,SAAS;YACT,eAAe;YACf,yBAAyB;YACzB,mBAAmB;YACnB,MAAM;gBAAC;gBAAY;aAAM;QAC7B;QACA,UAAU;QACV,cAAc;QACd,WAAW;QACX,aAAa;QACb,cAAc;QACd,QAAQ,IAAI,KAAK,KAAK,GAAG,KAAK,IAAI,KAAK;QACvC,MAAM;YAAC;YAAY;SAAM;QACzB,qBAAqB;IACzB;IACA;QACI,IAAI;QACJ,mBAAmB;QACnB,UAAU;QACV,UAAU;QACV,QAAQ;YACJ,MAAM;YACN,YAAY;YACZ,SAAS;YACT,eAAe;YACf,yBAAyB;YACzB,mBAAmB;YACnB,MAAM;gBAAC;gBAAO;aAAa;QAC/B;QACA,UAAU;QACV,cAAc;QACd,WAAW;QACX,aAAa;QACb,cAAc;QACd,QAAQ,IAAI,KAAK,KAAK,GAAG,KAAK,KAAK,KAAK;QACxC,MAAM;YAAC;YAAO;SAAa;QAC3B,qBAAqB;IACzB;CACH;AAED,MAAM,mBAAmB;IACrB;QAAE,MAAM;QAAS,WAAW;QAAI,SAAS;IAAK;IAC9C;QAAE,MAAM;QAAS,WAAW;QAAG,SAAS;IAAK;IAC7C;QAAE,MAAM;QAAS,WAAW;QAAI,SAAS;IAAK;IAC9C;QAAE,MAAM;QAAS,WAAW;QAAI,SAAS;IAAK;IAC9C;QAAE,MAAM;QAAS,WAAW;QAAI,SAAS;IAAK;IAC9C;QAAE,MAAM;QAAS,WAAW;QAAI,SAAS;IAAK;IAC9C;QAAE,MAAM;QAAS,WAAW;QAAI,SAAS;IAAK;CACjD;AAEM,SAAS;IACZ,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAuB;IAChE,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAuB;IAC5E,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAsB;IAC/D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IAEzB,0CAA0C;IAC1C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,6DAA6D;QAC7D,MAAM,QAAQ,WAAW;YACrB;QACJ,GAAG;QAEH,OAAO,IAAM,aAAa;IAC9B,GAAG,EAAE;IAEL,MAAM,gBAAgB;QAClB,aAAa;QACb,IAAI;YACA,MAAM,WAAW,MAAM,MAAM;YAC7B,IAAI,CAAC,SAAS,EAAE,EAAE;gBACd,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;YAC5D;YACA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,IAAI,KAAK,OAAO,EAAE;gBACd,aAAa,KAAK,SAAS;gBAC3B,kBAAkB,KAAK,YAAY,CAAC,QAAQ;YAChD,OAAO;gBACH,MAAM,IAAI,MAAM,KAAK,KAAK,IAAI;YAClC;QACJ,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,6BAA6B;YAC3C,qCAAqC;YACrC,aAAa;YACb,kBAAkB;YAClB,MAAM;gBACF,OAAO;gBACP,aAAa;gBACb,SAAS;YACb;QACJ,SAAU;YACN,aAAa;QACjB;IACJ;IAEA,2CAA2C;IAC3C,MAAM,eAAe,OAAO;QACxB,IAAI;YACA,MAAM,WAAW,MAAM,MAAM,4BAA4B;gBACrD,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBAAE;gBAAO;YAClC;YAEA,IAAI,CAAC,SAAS,EAAE,EAAE;gBACd,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;YAC5D;YAEA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,IAAI,KAAK,OAAO,EAAE;gBACd,kBAAkB,KAAK,QAAQ;gBAC/B,MAAM;oBACF,OAAO;oBACP,aAAa,KAAK,OAAO;gBAC7B;YACJ,OAAO;gBACH,MAAM,IAAI,MAAM,KAAK,KAAK,IAAI;YAClC;QACJ,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,uCAAuC;YACvC,kBAAkB;YAClB,MAAM;gBACF,OAAO;gBACP,aAAa;gBACb,SAAS;YACb;QACJ;IACJ;IAEA,wCAAwC;IACxC,MAAM,kBAAkB,CAAC;QACrB,OAAQ;YACJ,KAAK;gBAAa,qBAAO,8OAAC,8MAAA,CAAA,aAAU;oBAAC,WAAU;;;;;;YAC/C,KAAK;gBAAY,qBAAO,8OAAC,wNAAA,CAAA,gBAAa;oBAAC,WAAU;;;;;;YACjD,KAAK;gBAAS,qBAAO,8OAAC,kMAAA,CAAA,OAAI;oBAAC,WAAU;;;;;;YACrC,KAAK;gBAAa,qBAAO,8OAAC,wMAAA,CAAA,UAAO;oBAAC,WAAU;;;;;;YAC5C;gBAAS,qBAAO,8OAAC,oMAAA,CAAA,QAAK;oBAAC,WAAU;;;;;;QACrC;IACJ;IAEA,wCAAwC;IACxC,MAAM,kBAAkB,CAAC;QACrB,OAAQ;YACJ,KAAK;gBAAY,OAAO;YACxB,KAAK;gBAAQ,OAAO;YACpB,KAAK;gBAAU,OAAO;YACtB,KAAK;gBAAO,OAAO;YACnB;gBAAS,OAAO;QACpB;IACJ;IAEA,mDAAmD;IACnD,MAAM,wBAAwB,CAAC;QAC3B,MAAM,oBAAoB,KAAK,KAAK,CAAC,aAAa,KAAK;QACvD,OAAO,uKAAA,CAAA,UAAM,CAAC,CAAC,aAAa,EAAE,mBAAmB,CAAC,IAAI,uKAAA,CAAA,UAAM,CAAC,gBAAgB;IACjF;IAEA,4CAA4C;IAC5C,MAAM,oBAAoB;QACtB,IAAI;YACA,MAAM,WAAW,MAAM,MAAM;YAC7B,IAAI,SAAS,EAAE,EAAE;gBACb,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,MAAM;oBACF,OAAO;oBACP,aAAa;gBACjB;gBACA,QAAQ,GAAG,CAAC,qBAAqB;YACrC,OAAO;gBACH,MAAM,IAAI,MAAM,CAAC,KAAK,EAAE,SAAS,MAAM,EAAE;YAC7C;QACJ,EAAE,OAAO,OAAO;YACZ,QAAQ,KAAK,CAAC,oBAAoB;YAClC,MAAM;gBACF,OAAO;gBACP,aAAa;gBACb,SAAS;YACb;QACJ;IACJ;IAEA,qBACI,8OAAC;QAAI,WAAU;;0BAEX,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;;0CACG,8OAAC;gCAAG,WAAU;0CAAqB;;;;;;0CACnC,8OAAC;gCAAE,WAAU;0CAAwB;;;;;;;;;;;;kCAEzC,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;gCAAI,WAAU;;kDACX,8OAAC,kIAAA,CAAA,SAAM;wCACH,SAAS;wCACT,iBAAiB;;;;;;kDAErB,8OAAC,iIAAA,CAAA,QAAK;kDAAC;;;;;;;;;;;;0CAEX,8OAAC,kIAAA,CAAA,SAAM;gCAAC,SAAQ;gCAAU,MAAK;gCAAK,SAAS;;kDACzC,8OAAC,0MAAA,CAAA,WAAQ;wCAAC,WAAU;;;;;;oCAAiB;;;;;;;0CAGzC,8OAAC,kIAAA,CAAA,SAAM;gCAAC,SAAQ;gCAAU,MAAK;gCAAK,SAAS;gCAAe,UAAU;;kDAClE,8OAAC,gNAAA,CAAA,YAAS;wCAAC,WAAW,CAAC,aAAa,EAAE,YAAY,iBAAiB,IAAI;;;;;;oCACtE,YAAY,eAAe;;;;;;;;;;;;;;;;;;;YAMvC,2BACG,8OAAC,gIAAA,CAAA,OAAI;0BACD,cAAA,8OAAC,gIAAA,CAAA,cAAW;oBAAC,WAAU;8BACnB,cAAA,8OAAC;wBAAI,WAAU;;0CACX,8OAAC,gNAAA,CAAA,YAAS;gCAAC,WAAU;;;;;;0CACrB,8OAAC;0CAAK;;;;;;;;;;;;;;;;;;;;;;0BAOtB,8OAAC;gBAAI,WAAU;;kCACX,8OAAC,gIAAA,CAAA,OAAI;;0CACD,8OAAC,gIAAA,CAAA,aAAU;gCAAC,WAAU;;kDAClB,8OAAC,gIAAA,CAAA,YAAS;wCAAC,WAAU;kDAAsB;;;;;;kDAC3C,8OAAC,wNAAA,CAAA,gBAAa;wCAAC,WAAU;;;;;;;;;;;;0CAE7B,8OAAC,gIAAA,CAAA,cAAW;;kDACR,8OAAC;wCAAI,WAAU;kDAAsB,UAAU,cAAc,CAAC,cAAc;;;;;;kDAC5E,8OAAC;wCAAE,WAAU;;0DACT,8OAAC,kNAAA,CAAA,aAAU;gDAAC,WAAU;;;;;;4CAAgC;;;;;;;;;;;;;;;;;;;kCAMlE,8OAAC,gIAAA,CAAA,OAAI;;0CACD,8OAAC,gIAAA,CAAA,aAAU;gCAAC,WAAU;;kDAClB,8OAAC,gIAAA,CAAA,YAAS;wCAAC,WAAU;kDAAsB;;;;;;kDAC3C,8OAAC,2NAAA,CAAA,cAAW;wCAAC,WAAU;;;;;;;;;;;;0CAE3B,8OAAC,gIAAA,CAAA,cAAW;;kDACR,8OAAC;wCAAI,WAAU;;4CAAsB,CAAC,UAAU,WAAW,GAAG,GAAG,EAAE,OAAO,CAAC;4CAAG;;;;;;;kDAC9E,8OAAC;wCAAE,WAAU;;0DACT,8OAAC,kNAAA,CAAA,aAAU;gDAAC,WAAU;;;;;;4CAAgC;;;;;;;;;;;;;;;;;;;kCAMlE,8OAAC,gIAAA,CAAA,OAAI;;0CACD,8OAAC,gIAAA,CAAA,aAAU;gCAAC,WAAU;;kDAClB,8OAAC,gIAAA,CAAA,YAAS;wCAAC,WAAU;kDAAsB;;;;;;kDAC3C,8OAAC,oMAAA,CAAA,QAAK;wCAAC,WAAU;;;;;;;;;;;;0CAErB,8OAAC,gIAAA,CAAA,cAAW;;kDACR,8OAAC;wCAAI,WAAU;;4CAAsB,CAAC,UAAU,mBAAmB,GAAG,IAAI,EAAE,OAAO,CAAC;4CAAG;;;;;;;kDACvF,8OAAC;wCAAE,WAAU;;0DACT,8OAAC,sNAAA,CAAA,eAAY;gDAAC,WAAU;;;;;;4CAAgC;;;;;;;;;;;;;;;;;;;kCAMpE,8OAAC,gIAAA,CAAA,OAAI;;0CACD,8OAAC,gIAAA,CAAA,aAAU;gCAAC,WAAU;;kDAClB,8OAAC,gIAAA,CAAA,YAAS;wCAAC,WAAU;kDAAsB;;;;;;kDAC3C,8OAAC,wNAAA,CAAA,gBAAa;wCAAC,WAAU;;;;;;;;;;;;0CAE7B,8OAAC,gIAAA,CAAA,cAAW;;kDACR,8OAAC;wCAAI,WAAU;;4CAAsB,CAAC,UAAU,cAAc,GAAG,GAAG,EAAE,OAAO,CAAC;4CAAG;;;;;;;kDACjF,8OAAC;wCAAE,WAAU;;0DACT,8OAAC,sNAAA,CAAA,eAAY;gDAAC,WAAU;;;;;;4CAAgC;;;;;;;;;;;;;;;;;;;;;;;;;0BAQxE,8OAAC,gIAAA,CAAA,OAAI;gBAAC,OAAO;gBAAW,eAAe;gBAAc,WAAU;;kCAC3D,8OAAC,gIAAA,CAAA,WAAQ;wBAAC,WAAU;;0CAChB,8OAAC,gIAAA,CAAA,cAAW;gCAAC,OAAM;0CAAW;;;;;;0CAC9B,8OAAC,gIAAA,CAAA,cAAW;gCAAC,OAAM;0CAAY;;;;;;0CAC/B,8OAAC,gIAAA,CAAA,cAAW;gCAAC,OAAM;0CAAY;;;;;;0CAC/B,8OAAC,gIAAA,CAAA,cAAW;gCAAC,OAAM;0CAAY;;;;;;0CAC/B,8OAAC,gIAAA,CAAA,cAAW;gCAAC,OAAM;0CAAW;;;;;;;;;;;;kCAIlC,8OAAC,gIAAA,CAAA,cAAW;wBAAC,OAAM;wBAAW,WAAU;kCACpC,cAAA,8OAAC;4BAAI,WAAU;;8CAEX,8OAAC,gIAAA,CAAA,OAAI;;sDACD,8OAAC,gIAAA,CAAA,aAAU;;8DACP,8OAAC,gIAAA,CAAA,YAAS;8DAAC;;;;;;8DACX,8OAAC,gIAAA,CAAA,kBAAe;8DAAC;;;;;;;;;;;;sDAErB,8OAAC,gIAAA,CAAA,cAAW;sDACR,cAAA,8OAAC,mKAAA,CAAA,sBAAmB;gDAAC,OAAM;gDAAO,QAAQ;0DACtC,cAAA,8OAAC,qJAAA,CAAA,YAAS;oDAAC,MAAM;;sEACb,8OAAC,6JAAA,CAAA,gBAAa;4DAAC,iBAAgB;;;;;;sEAC/B,8OAAC,qJAAA,CAAA,QAAK;4DAAC,SAAQ;;;;;;sEACf,8OAAC,qJAAA,CAAA,QAAK;;;;;sEACN,8OAAC,uJAAA,CAAA,UAAO;;;;;sEACR,8OAAC,sJAAA,CAAA,SAAM;;;;;sEACP,8OAAC,oJAAA,CAAA,OAAI;4DAAC,MAAK;4DAAW,SAAQ;4DAAY,QAAO;4DAAU,aAAa;;;;;;sEACxE,8OAAC,oJAAA,CAAA,OAAI;4DAAC,MAAK;4DAAW,SAAQ;4DAAU,QAAO;4DAAU,aAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;8CAOtF,8OAAC;oCAAI,WAAU;;sDACX,8OAAC,gIAAA,CAAA,OAAI;;8DACD,8OAAC,gIAAA,CAAA,aAAU;8DACP,cAAA,8OAAC,gIAAA,CAAA,YAAS;kEAAC;;;;;;;;;;;8DAEf,8OAAC,gIAAA,CAAA,cAAW;8DACR,cAAA,8OAAC;wDAAI,WAAU;kEACV,OAAO,OAAO,CAAC,UAAU,iBAAiB,EAAE,GAAG,CAAC,CAAC,CAAC,UAAU,WAAW,iBACpE,8OAAC;gEAAmB,WAAU;;kFAC1B,8OAAC;wEAAI,WAAU;;4EACV,gBAAgB;0FACjB,8OAAC;gFAAK,WAAU;0FAAc;;;;;;;;;;;;kFAElC,8OAAC;wEAAI,WAAU;;0FACX,8OAAC;gFAAI,WAAU;0FACX,cAAA,8OAAC;oFACG,WAAW,GAAG,uKAAA,CAAA,UAAM,CAAC,WAAW,CAAC,CAAC,EAAE,uKAAA,CAAA,UAAM,CAAC,eAAe,CAAC,CAAC,EAAE,sBAAsB,aAAa;;;;;;;;;;;0FAGzG,8OAAC;gFAAK,WAAU;;oFAAuB;oFAAW;;;;;;;;;;;;;;+DAXhD;;;;;;;;;;;;;;;;;;;;;sDAmB1B,8OAAC,gIAAA,CAAA,OAAI;;8DACD,8OAAC,gIAAA,CAAA,aAAU;8DACP,cAAA,8OAAC,gIAAA,CAAA,YAAS;kEAAC;;;;;;;;;;;8DAEf,8OAAC,gIAAA,CAAA,cAAW;8DACR,cAAA,8OAAC;wDAAI,WAAU;kEACV,OAAO,OAAO,CAAC,UAAU,eAAe,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,WAAW,iBAChE,8OAAC;gEAAiB,WAAU;;kFACxB,8OAAC;wEAAK,WAAU;kFAAc,OAAO,OAAO,CAAC,KAAK;;;;;;kFAClD,8OAAC;wEAAI,WAAU;;0FACX,8OAAC;gFAAI,WAAU;0FACX,cAAA,8OAAC;oFACG,WAAW,GAAG,uKAAA,CAAA,UAAM,CAAC,WAAW,CAAC,CAAC,EAAE,uKAAA,CAAA,UAAM,CAAC,gBAAgB,CAAC,CAAC,EAAE,sBAAsB,aAAa;;;;;;;;;;;0FAG1G,8OAAC;gFAAK,WAAU;;oFAAuB;oFAAW;;;;;;;;;;;;;;+DARhD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAoBtC,8OAAC,gIAAA,CAAA,cAAW;wBAAC,OAAM;wBAAY,WAAU;kCACrC,cAAA,8OAAC,gIAAA,CAAA,OAAI;;8CACD,8OAAC,gIAAA,CAAA,aAAU;8CACP,cAAA,8OAAC;wCAAI,WAAU;;0DACX,8OAAC;;kEACG,8OAAC,gIAAA,CAAA,YAAS;kEAAC;;;;;;kEACX,8OAAC,gIAAA,CAAA,kBAAe;kEAAC;;;;;;;;;;;;0DAErB,8OAAC,kIAAA,CAAA,SAAM;gDAAC,MAAK;;kEACT,8OAAC,kMAAA,CAAA,OAAI;wDAAC,WAAU;;;;;;oDAAiB;;;;;;;;;;;;;;;;;;8CAK7C,8OAAC,gIAAA,CAAA,cAAW;8CACR,cAAA,8OAAC;wCAAI,WAAU;kDACV,UAAU,GAAG,CAAC,CAAC,yBACZ,8OAAC;gDAAsB,WAAU;;kEAC7B,8OAAC;wDAAI,WAAU;;0EACX,8OAAC;;kFACG,8OAAC;wEAAI,WAAU;kFAAe,SAAS,IAAI;;;;;;kFAC3C,8OAAC;wEAAI,WAAU;kFAAiC,SAAS,QAAQ;;;;;;;;;;;;0EAErE,8OAAC;gEAAI,WAAU;;kFACX,8OAAC,iIAAA,CAAA,QAAK;wEAAC,SAAS,SAAS,QAAQ,GAAG,YAAY;kFAC3C,SAAS,QAAQ,GAAG,WAAW;;;;;;kFAEpC,8OAAC,kIAAA,CAAA,SAAM;wEAAC,MAAK;wEAAK,SAAQ;kFACtB,cAAA,8OAAC,2MAAA,CAAA,OAAI;4EAAC,WAAU;;;;;;;;;;;kFAEpB,8OAAC,kIAAA,CAAA,SAAM;wEAAC,MAAK;wEAAK,SAAQ;kFACtB,cAAA,8OAAC,kMAAA,CAAA,OAAI;4EAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;kEAK5B,8OAAC;wDAAI,WAAU;;0EACX,8OAAC;gEAAI,WAAU;0EAAqC;;;;;;0EACpD,8OAAC;gEAAI,WAAU;0EAAgC,SAAS,QAAQ;;;;;;;;;;;;kEAGpE,8OAAC;wDAAI,WAAU;;0EACX,8OAAC;;kFACG,8OAAC;wEAAI,WAAU;kFAAwB;;;;;;kFACvC,8OAAC;wEAAI,WAAU;kFAAe,SAAS,UAAU;;;;;;;;;;;;0EAErD,8OAAC;;kFACG,8OAAC;wEAAI,WAAU;kFAAwB;;;;;;kFACvC,8OAAC;wEAAI,WAAU;;4EAAe,CAAC,SAAS,WAAW,GAAG,GAAG,EAAE,OAAO,CAAC;4EAAG;;;;;;;;;;;;;0EAE1E,8OAAC;;kFACG,8OAAC;wEAAI,WAAU;kFAAwB;;;;;;kFACvC,8OAAC;wEAAI,WAAU;kFAA0B,SAAS,IAAI;;;;;;;;;;;;0EAE1D,8OAAC;;kFACG,8OAAC;wEAAI,WAAU;kFAAwB;;;;;;kFACvC,8OAAC;wEAAI,WAAU;kFAAe,SAAS,SAAS,CAAC,MAAM;;;;;;;;;;;;;;;;;;;+CAvCzD,SAAS,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;kCAkDzC,8OAAC,gIAAA,CAAA,cAAW;wBAAC,OAAM;wBAAY,WAAU;kCACrC,cAAA,8OAAC,gIAAA,CAAA,OAAI;;8CACD,8OAAC,gIAAA,CAAA,aAAU;;sDACP,8OAAC,gIAAA,CAAA,YAAS;sDAAC;;;;;;sDACX,8OAAC,gIAAA,CAAA,kBAAe;sDAAC;;;;;;;;;;;;8CAErB,8OAAC,gIAAA,CAAA,cAAW;8CACR,cAAA,8OAAC;wCAAI,WAAU;kDACV,gBAAgB,GAAG,CAAC,CAAC,yBAClB,8OAAC;gDAAsB,WAAU;;kEAC7B,8OAAC;wDAAI,WAAU;;0EACX,8OAAC;gEAAI,WAAU;;oEACV,gBAAgB,SAAS,QAAQ;kFAClC,8OAAC;;0FACG,8OAAC;gFAAI,WAAU;0FAAe,SAAS,QAAQ;;;;;;0FAC/C,8OAAC;gFAAI,WAAU;0FACV,SAAS,MAAM,CAAC,cAAc;;;;;;;;;;;;;;;;;;0EAI3C,8OAAC;gEAAI,WAAU;;kFACX,8OAAC,iIAAA,CAAA,QAAK;wEAAC,WAAW,gBAAgB,SAAS,MAAM,CAAC,OAAO;kFACpD,SAAS,MAAM,CAAC,OAAO;;;;;;oEAE3B,SAAS,mBAAmB,kBACzB,8OAAC,iIAAA,CAAA,QAAK;wEAAC,SAAQ;kFAAc;;;;;;;;;;;;;;;;;;kEAKzC,8OAAC;wDAAI,WAAU;;0EACX,8OAAC;;kFACG,8OAAC;wEAAI,WAAU;kFAA2B;;;;;;kFAC1C,8OAAC;wEAAI,WAAU;kFACV,SAAS,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK;;;;;;;;;;;;0EAG3C,8OAAC;;kFACG,8OAAC;wEAAI,WAAU;kFAA2B;;;;;;kFAC1C,8OAAC;wEAAI,WAAU;;4EACV,CAAC,SAAS,YAAY,GAAG,IAAI,EAAE,OAAO,CAAC;4EAAG;;;;;;;;;;;;;;;;;;;kEAKvD,8OAAC;wDAAI,WAAU;;0EACX,8OAAC;gEAAI,WAAU;0EAA2B;;;;;;0EAC1C,8OAAC;gEAAI,WAAU;0EAAiC,SAAS,QAAQ;;;;;;;;;;;;kEAGrE,8OAAC;wDAAI,WAAU;kEACV,SAAS,IAAI,CAAC,GAAG,CAAC,CAAC,oBAChB,8OAAC,iIAAA,CAAA,QAAK;gEAAW,SAAQ;gEAAY,WAAU;0EAC1C;+DADO;;;;;;;;;;;+CA3Cd,SAAS,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;kCAwDzC,8OAAC,gIAAA,CAAA,cAAW;wBAAC,OAAM;wBAAY,WAAU;kCACrC,cAAA,8OAAC;4BAAI,WAAU;;8CAEX,8OAAC,gIAAA,CAAA,OAAI;;sDACD,8OAAC,gIAAA,CAAA,aAAU;;8DACP,8OAAC,gIAAA,CAAA,YAAS;8DAAC;;;;;;8DACX,8OAAC,gIAAA,CAAA,kBAAe;8DAAC;;;;;;;;;;;;sDAErB,8OAAC,gIAAA,CAAA,cAAW;sDACR,cAAA,8OAAC;gDAAI,WAAU;;kEACX,8OAAC;wDAAI,WAAU;;0EACX,8OAAC;0EAAK;;;;;;0EACN,8OAAC;gEAAK,WAAU;0EAAiB,UAAU,cAAc,CAAC,cAAc;;;;;;;;;;;;kEAE5E,8OAAC;wDAAI,WAAU;;0EACX,8OAAC;0EAAK;;;;;;0EACN,8OAAC;gEAAK,WAAU;;oEAAiB,CAAC,UAAU,WAAW,GAAG,GAAG,EAAE,OAAO,CAAC;oEAAG;;;;;;;;;;;;;kEAE9E,8OAAC;wDAAI,WAAU;;0EACX,8OAAC;0EAAK;;;;;;0EACN,8OAAC;gEAAK,WAAU;;oEAAiB,CAAC,UAAU,mBAAmB,GAAG,IAAI,EAAE,OAAO,CAAC;oEAAG;;;;;;;;;;;;;kEAEvF,8OAAC;wDAAI,WAAU;;0EACX,8OAAC;0EAAK;;;;;;0EACN,8OAAC;gEAAK,WAAU;;oEAAiB,CAAC,UAAU,cAAc,GAAG,GAAG,EAAE,OAAO,CAAC;oEAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8CAO7F,8OAAC,gIAAA,CAAA,OAAI;;sDACD,8OAAC,gIAAA,CAAA,aAAU;;8DACP,8OAAC,gIAAA,CAAA,YAAS;8DAAC;;;;;;8DACX,8OAAC,gIAAA,CAAA,kBAAe;8DAAC;;;;;;;;;;;;sDAErB,8OAAC,gIAAA,CAAA,cAAW;sDACR,cAAA,8OAAC;gDAAI,WAAU;0DACV,UAAU,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,yBACxB,8OAAC;wDAAsB,WAAU;;0EAC7B,8OAAC;;kFACG,8OAAC;wEAAI,WAAU;kFAAe,SAAS,IAAI;;;;;;kFAC3C,8OAAC;wEAAI,WAAU;kFAAiC,SAAS,QAAQ;;;;;;;;;;;;0EAErE,8OAAC;gEAAI,WAAU;;kFACX,8OAAC;wEAAI,WAAU;;4EAAiB,CAAC,SAAS,WAAW,GAAG,GAAG,EAAE,OAAO,CAAC;4EAAG;;;;;;;kFACxE,8OAAC;wEAAI,WAAU;;4EAAiC,SAAS,UAAU;4EAAC;;;;;;;;;;;;;;uDAPlE,SAAS,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAkB7C,8OAAC,gIAAA,CAAA,cAAW;wBAAC,OAAM;wBAAW,WAAU;kCACpC,cAAA,8OAAC,gIAAA,CAAA,OAAI;;8CACD,8OAAC,gIAAA,CAAA,aAAU;;sDACP,8OAAC,gIAAA,CAAA,YAAS;sDAAC;;;;;;sDACX,8OAAC,gIAAA,CAAA,kBAAe;sDAAC;;;;;;;;;;;;8CAErB,8OAAC,gIAAA,CAAA,cAAW;8CACR,cAAA,8OAAC;wCAAI,WAAU;;0DACX,8OAAC;gDAAI,WAAU;;kEACX,8OAAC;;0EACG,8OAAC,iIAAA,CAAA,QAAK;0EAAC;;;;;;0EACP,8OAAC;gEAAE,WAAU;0EAAgC;;;;;;;;;;;;kEAIjD,8OAAC,kIAAA,CAAA,SAAM;wDAAC,SAAS;wDAAgB,iBAAiB;;;;;;;;;;;;0DAGtD,8OAAC,qIAAA,CAAA,YAAS;;;;;0DAEV,8OAAC;gDAAI,WAAU;;kEACX,8OAAC;wDAAG,WAAU;kEAAgB;;;;;;kEAC9B,8OAAC;wDAAI,WAAU;;0EACX,8OAAC;gEAAI,WAAU;;kFACX,8OAAC,iIAAA,CAAA,QAAK;kFAAC;;;;;;kFACP,8OAAC,iIAAA,CAAA,QAAK;wEAAC,MAAK;wEAAS,cAAc;wEAAG,KAAK;wEAAG,KAAK;;;;;;kFACnD,8OAAC;wEAAE,WAAU;kFAAgC;;;;;;;;;;;;0EAEjD,8OAAC;gEAAI,WAAU;;kFACX,8OAAC,iIAAA,CAAA,QAAK;kFAAC;;;;;;kFACP,8OAAC,iIAAA,CAAA,QAAK;wEAAC,MAAK;wEAAS,cAAc;wEAAG,KAAK;wEAAG,KAAK;;;;;;kFACnD,8OAAC;wEAAE,WAAU;kFAAgC;;;;;;;;;;;;;;;;;;;;;;;;0DAKzD,8OAAC,qIAAA,CAAA,YAAS;;;;;0DAEV,8OAAC;gDAAI,WAAU;;kEACX,8OAAC;wDAAG,WAAU;kEAAgB;;;;;;kEAC9B,8OAAC;wDAAI,WAAU;;0EACX,8OAAC;gEAAI,WAAU;;kFACX,8OAAC,iIAAA,CAAA,QAAK;kFAAC;;;;;;kFACP,8OAAC,iIAAA,CAAA,QAAK;wEAAC,MAAK;wEAAS,cAAc;wEAAG,KAAK;wEAAG,KAAK;wEAAI,WAAU;;;;;;kFACjE,8OAAC;wEAAK,WAAU;kFAAU;;;;;;;;;;;;0EAE9B,8OAAC;gEAAI,WAAU;;kFACX,8OAAC,iIAAA,CAAA,QAAK;kFAAC;;;;;;kFACP,8OAAC,iIAAA,CAAA,QAAK;wEAAC,MAAK;wEAAS,cAAc;wEAAG,KAAK;wEAAG,KAAK;wEAAI,WAAU;;;;;;kFACjE,8OAAC;wEAAK,WAAU;kFAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWtE","debugId":null}}]
}