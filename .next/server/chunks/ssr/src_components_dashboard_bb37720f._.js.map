{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/ai-drop-predictor-card.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { useState, useEffect } from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Progress } from \"@/components/ui/progress\"\r\nimport {\r\n    Calendar,\r\n    Clock,\r\n    TrendingUp,\r\n    Target,\r\n    AlertTriangle,\r\n    CheckCircle,\r\n    Star,\r\n    BarChart3,\r\n    Users,\r\n    DollarSign,\r\n    MessageSquare,\r\n    Heart,\r\n    Eye,\r\n    Zap,\r\n    Brain,\r\n    History,\r\n    Plus,\r\n    Play,\r\n    Pause,\r\n    RefreshCw,\r\n    ArrowRight\r\n} from \"lucide-react\"\r\n\r\ninterface DropPrediction {\r\n    id: string\r\n    suggestedWindow: {\r\n        start: string\r\n        end: string\r\n        date: string\r\n    }\r\n    confidence: number\r\n    reasoning: string[]\r\n    alternativeSlots: Array<{\r\n        date: string\r\n        start: string\r\n        end: string\r\n        confidence: number\r\n    }>\r\n    audienceOverlap: number\r\n    competitorActivity: string[]\r\n    marketConditions: string\r\n}\r\n\r\nexport function AIDropPredictorCard() {\r\n    const [prediction, setPrediction] = useState<DropPrediction | null>(null)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n        loadLatestPrediction()\r\n    }, [])\r\n\r\n    const loadLatestPrediction = async () => {\r\n        try {\r\n            const response = await fetch('/api/ai-drop-predictor/predictions')\r\n            const data = await response.json()\r\n            if (data.success && data.data.length > 0) {\r\n                setPrediction(data.data[0])\r\n            }\r\n        } catch (error) {\r\n            console.error('Error loading prediction:', error)\r\n        }\r\n    }\r\n\r\n    const generateNewPrediction = async () => {\r\n        setIsLoading(true)\r\n        try {\r\n            const response = await fetch('/api/ai-drop-predictor/generate', {\r\n                method: 'POST'\r\n            })\r\n            const data = await response.json()\r\n            if (data.success) {\r\n                await loadLatestPrediction()\r\n            }\r\n        } catch (error) {\r\n            console.error('Error generating prediction:', error)\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const getConfidenceColor = (confidence: number) => {\r\n        if (confidence >= 80) return 'text-green-400'\r\n        if (confidence >= 60) return 'text-yellow-400'\r\n        return 'text-red-400'\r\n    }\r\n\r\n    if (!prediction) {\r\n        return (\r\n            <Card className=\"hover:scale-105 transition-all duration-300\">\r\n                <CardHeader>\r\n                    <CardTitle className=\"text-white flex items-center\">\r\n                        <Zap className=\"w-5 h-5 mr-2 text-pink-400\" />\r\n                        AI Drop Predictor\r\n                    </CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"text-center py-8\">\r\n                    <Calendar className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\r\n                    <p className=\"text-gray-300 mb-4\">No predictions available</p>\r\n                    <Button\r\n                        onClick={generateNewPrediction}\r\n                        disabled={isLoading}\r\n                        variant=\"premium\"\r\n                    >\r\n                        <Zap className=\"w-4 h-4 mr-2\" />\r\n                        Generate Prediction\r\n                    </Button>\r\n                </CardContent>\r\n            </Card>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Card className=\"hover:scale-105 transition-all duration-300\">\r\n            <CardHeader>\r\n                <div className=\"flex items-center justify-between\">\r\n                    <CardTitle className=\"text-white flex items-center\">\r\n                        <Zap className=\"w-5 h-5 mr-2 text-pink-400\" />\r\n                        Next Drop Window\r\n                    </CardTitle>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                        <Badge variant=\"premium\" className={`${getConfidenceColor(prediction.confidence)}`}>\r\n                            {prediction.confidence}% Confidence\r\n                        </Badge>\r\n                        <Button\r\n                            size=\"sm\"\r\n                            onClick={generateNewPrediction}\r\n                            disabled={isLoading}\r\n                            variant=\"glass\"\r\n                        >\r\n                            <RefreshCw className=\"w-4 h-4\" />\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n                {/* Main Prediction */}\r\n                <div className=\"bg-gradient-to-r from-pink-500/10 to-purple-600/10 backdrop-blur-sm rounded-lg p-4 border border-pink-500/20\">\r\n                    <div className=\"flex items-center justify-between mb-3\">\r\n                        <div>\r\n                            <div className=\"text-2xl font-bold text-white\">\r\n                                {prediction.suggestedWindow.date}\r\n                            </div>\r\n                            <div className=\"text-gray-300\">\r\n                                {prediction.suggestedWindow.start} - {prediction.suggestedWindow.end}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                            <div className=\"text-sm text-gray-400\">Audience Overlap</div>\r\n                            <div className=\"text-xl font-bold text-white\">{prediction.audienceOverlap}%</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"space-y-2\">\r\n                        <div className=\"flex items-center justify-between text-sm\">\r\n                            <span className=\"text-gray-400\">Confidence</span>\r\n                            <span className={`font-medium ${getConfidenceColor(prediction.confidence)}`}>\r\n                                {prediction.confidence}%\r\n                            </span>\r\n                        </div>\r\n                        <Progress value={prediction.confidence} className=\"h-2\" />\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Key Reasoning */}\r\n                <div className=\"space-y-2\">\r\n                    <h4 className=\"text-white font-semibold text-sm\">AI Reasoning</h4>\r\n                    <div className=\"space-y-1\">\r\n                        {prediction.reasoning.slice(0, 3).map((reason, index) => (\r\n                            <div key={index} className=\"flex items-start\">\r\n                                <CheckCircle className=\"w-3 h-3 text-green-400 mr-2 mt-0.5 flex-shrink-0\" />\r\n                                <span className=\"text-gray-300 text-xs\">{reason}</span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Market Conditions */}\r\n                <div className=\"bg-slate-700/20 rounded p-3\">\r\n                    <div className=\"flex items-center mb-1\">\r\n                        <TrendingUp className=\"w-4 h-4 text-green-400 mr-2\" />\r\n                        <span className=\"text-white font-medium text-sm\">Market Conditions</span>\r\n                    </div>\r\n                    <p className=\"text-gray-300 text-xs\">{prediction.marketConditions}</p>\r\n                </div>\r\n\r\n                {/* Alternative Slots */}\r\n                {prediction.alternativeSlots.length > 0 && (\r\n                    <div className=\"space-y-2\">\r\n                        <h4 className=\"text-white font-semibold text-sm\">Backup Slots</h4>\r\n                        <div className=\"space-y-2\">\r\n                            {prediction.alternativeSlots.slice(0, 2).map((slot, index) => (\r\n                                <div key={index} className=\"bg-slate-700/20 rounded p-2\">\r\n                                    <div className=\"flex items-center justify-between\">\r\n                                        <div>\r\n                                            <div className=\"text-white text-sm font-medium\">{slot.date}</div>\r\n                                            <div className=\"text-gray-400 text-xs\">{slot.start} - {slot.end}</div>\r\n                                        </div>\r\n                                        <span className={`text-xs ${getConfidenceColor(slot.confidence)}`}>\r\n                                            {slot.confidence}%\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Competitor Activity */}\r\n                {prediction.competitorActivity.length > 0 && (\r\n                    <div className=\"space-y-2\">\r\n                        <h4 className=\"text-white font-semibold text-sm flex items-center\">\r\n                            <AlertTriangle className=\"w-4 h-4 text-yellow-400 mr-2\" />\r\n                            Competitor Activity\r\n                        </h4>\r\n                        <div className=\"space-y-1\">\r\n                            {prediction.competitorActivity.slice(0, 2).map((activity, index) => (\r\n                                <div key={index} className=\"text-gray-300 text-xs\">\r\n                                    • {activity}\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Action Button */}\r\n                <Button\r\n                    className=\"w-full bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600\"\r\n                    onClick={() => window.location.href = '/dashboard?tab=aidroppredictor'}\r\n                >\r\n                    <ArrowRight className=\"w-4 h-4 mr-2\" />\r\n                    View Full Analysis\r\n                </Button>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 590, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/ai-roi-forecast-card.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { useState, useEffect } from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Progress } from \"@/components/ui/progress\"\r\nimport {\r\n  TrendingUp, DollarSign, Target, Brain, Clock, ArrowRight,\r\n  BarChart3, Users, Eye, Zap, CheckCircle, AlertTriangle\r\n} from \"lucide-react\"\r\n\r\ninterface ROIForecast {\r\n  id: string\r\n  productName: string\r\n  projectedROI: number\r\n  confidenceLevel: number\r\n  predictedRevenue: number\r\n  estimatedSpend: number\r\n  breakEvenPoint: number\r\n  status: 'pending' | 'active' | 'completed'\r\n  createdAt: string\r\n}\r\n\r\nexport function AIROIForecastCard() {\r\n  const [latestForecast, setLatestForecast] = useState<ROIForecast | null>(null)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  // Load latest forecast\r\n  const loadLatestForecast = async () => {\r\n    try {\r\n      const response = await fetch('/api/ai-roi-forecast/forecasts')\r\n      if (response.ok) {\r\n        const forecasts = await response.json()\r\n        if (forecasts.length > 0) {\r\n          setLatestForecast(forecasts[0])\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading latest forecast:', error)\r\n    }\r\n  }\r\n\r\n  // Generate new forecast\r\n  const generateNewForecast = async () => {\r\n    setIsLoading(true)\r\n    try {\r\n      const response = await fetch('/api/ai-roi-forecast/generate', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          productName: \"New Product Drop\",\r\n          productType: \"physical\",\r\n          campaignType: \"instagram\",\r\n          budget: 5000,\r\n          description: \"Quick forecast generation\"\r\n        })\r\n      })\r\n\r\n      if (response.ok) {\r\n        const forecast = await response.json()\r\n        setLatestForecast(forecast)\r\n      }\r\n    } catch (error) {\r\n      console.error('Error generating forecast:', error)\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadLatestForecast()\r\n  }, [])\r\n\r\n  const getConfidenceColor = (confidence: number) => {\r\n    if (confidence >= 80) return 'bg-green-100 text-green-800'\r\n    if (confidence >= 60) return 'bg-yellow-100 text-yellow-800'\r\n    return 'bg-red-100 text-red-800'\r\n  }\r\n\r\n  const getROIColor = (roi: number) => {\r\n    if (roi >= 3) return 'text-green-600'\r\n    if (roi >= 2) return 'text-yellow-600'\r\n    return 'text-red-600'\r\n  }\r\n\r\n  const formatCurrency = (amount: number) => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD',\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 0\r\n    }).format(amount)\r\n  }\r\n\r\n  if (!latestForecast) {\r\n    return (\r\n      <Card className=\"hover:scale-105 transition-all duration-300\">\r\n        <CardHeader className=\"pb-3\">\r\n          <CardTitle className=\"flex items-center space-x-2 text-lg text-white\">\r\n            <Brain className=\"h-5 w-5 text-pink-400\" />\r\n            <span>AI ROI Forecast</span>\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n          <div className=\"text-center py-6\">\r\n            <Brain className=\"w-8 h-8 text-pink-400 mx-auto mb-2\" />\r\n            <p className=\"text-sm text-gray-300 mb-4\">\r\n              No forecasts yet. Generate your first AI-powered ROI prediction.\r\n            </p>\r\n            <Button\r\n              onClick={generateNewForecast}\r\n              disabled={isLoading}\r\n              size=\"sm\"\r\n              variant=\"premium\"\r\n              className=\"w-full\"\r\n            >\r\n              {isLoading ? (\r\n                <>\r\n                  <Clock className=\"w-4 h-4 mr-2 animate-spin\" />\r\n                  Generating...\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Brain className=\"w-4 h-4 mr-2\" />\r\n                  Generate Forecast\r\n                </>\r\n              )}\r\n            </Button>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Card className=\"hover:scale-105 transition-all duration-300\">\r\n      <CardHeader className=\"pb-3\">\r\n        <CardTitle className=\"flex items-center space-x-2 text-lg text-white\">\r\n          <Brain className=\"h-5 w-5 text-pink-400\" />\r\n          <span>AI ROI Forecast</span>\r\n        </CardTitle>\r\n      </CardHeader>\r\n      <CardContent className=\"space-y-4\">\r\n        {/* Forecast Header */}\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <h3 className=\"font-semibold text-sm truncate text-white\">{latestForecast.productName}</h3>\r\n            <p className=\"text-xs text-gray-300\">\r\n              {new Date(latestForecast.createdAt).toLocaleDateString()}\r\n            </p>\r\n          </div>\r\n          <Badge variant=\"premium\" className={getConfidenceColor(latestForecast.confidenceLevel)}>\r\n            {latestForecast.confidenceLevel}%\r\n          </Badge>\r\n        </div>\r\n\r\n        {/* ROI Prediction */}\r\n        <div className=\"text-center\">\r\n          <div className={`text-2xl font-bold ${getROIColor(latestForecast.projectedROI)}`}>\r\n            {latestForecast.projectedROI.toFixed(1)}x ROI\r\n          </div>\r\n          <p className=\"text-xs text-gray-300\">Projected Return</p>\r\n        </div>\r\n\r\n        {/* Key Metrics */}\r\n        <div className=\"grid grid-cols-2 gap-3 text-xs\">\r\n          <div>\r\n            <div className=\"text-gray-300\">Revenue</div>\r\n            <div className=\"font-semibold text-green-400\">\r\n              {formatCurrency(latestForecast.predictedRevenue)}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div className=\"text-gray-300\">Spend</div>\r\n            <div className=\"font-semibold text-red-400\">\r\n              {formatCurrency(latestForecast.estimatedSpend)}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div className=\"text-muted-foreground\">Break-even</div>\r\n            <div className=\"font-semibold text-blue-600\">\r\n              {latestForecast.breakEvenPoint}h\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div className=\"text-muted-foreground\">Status</div>\r\n            <div className=\"font-semibold\">\r\n              {latestForecast.status === 'active' ? (\r\n                <span className=\"text-green-600\">Active</span>\r\n              ) : (\r\n                <span className=\"text-muted-foreground\">Completed</span>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Confidence Meter */}\r\n        <div className=\"space-y-2\">\r\n          <div className=\"flex justify-between text-xs\">\r\n            <span>Confidence</span>\r\n            <span>{latestForecast.confidenceLevel}%</span>\r\n          </div>\r\n          <Progress\r\n            value={latestForecast.confidenceLevel}\r\n            className=\"h-2\"\r\n          />\r\n        </div>\r\n\r\n        {/* Action Button */}\r\n        <Button\r\n          variant=\"outline\"\r\n          size=\"sm\"\r\n          className=\"w-full border-purple-300 text-purple-700 hover:bg-purple-100\"\r\n          onClick={() => window.location.href = '/?tab=roiforecast'}\r\n        >\r\n          <ArrowRight className=\"w-4 h-4 mr-2\" />\r\n          View Full Forecast\r\n        </Button>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1094, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/ai-strategy-composer-card.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { useState, useEffect } from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Progress } from \"@/components/ui/progress\"\r\nimport { Sparkles, Target, TrendingUp, Clock, ArrowRight } from \"lucide-react\"\r\n\r\ninterface StrategyMetrics {\r\n    totalStrategies: number\r\n    activeStrategies: number\r\n    completedStrategies: number\r\n    averageConfidence: number\r\n    averageSuccessRate: number\r\n    totalPredictedRevenue: number\r\n    totalActualRevenue: number\r\n    topPerformingActions: string[]\r\n}\r\n\r\nexport function AIStrategyComposerCard() {\r\n    const [metrics, setMetrics] = useState<StrategyMetrics | null>(null)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const loadMetrics = async () => {\r\n        try {\r\n            const response = await fetch('/api/ai-strategy-composer/metrics')\r\n            if (response.ok) {\r\n                const data = await response.json()\r\n                setMetrics(data)\r\n            }\r\n        } catch (error) {\r\n            console.error('Error loading strategy metrics:', error)\r\n        }\r\n    }\r\n\r\n    const formatCurrency = (amount: number) => {\r\n        return new Intl.NumberFormat('en-EG', {\r\n            style: 'currency',\r\n            currency: 'EGP',\r\n            minimumFractionDigits: 0,\r\n            maximumFractionDigits: 0\r\n        }).format(amount)\r\n    }\r\n\r\n    const getSuccessRateColor = (rate: number) => {\r\n        if (rate >= 80) return 'text-green-600'\r\n        if (rate >= 60) return 'text-yellow-600'\r\n        return 'text-red-600'\r\n    }\r\n\r\n    const getConfidenceColor = (confidence: number) => {\r\n        if (confidence >= 85) return 'text-green-600'\r\n        if (confidence >= 70) return 'text-yellow-600'\r\n        return 'text-red-600'\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadMetrics()\r\n    }, [])\r\n\r\n    if (!metrics) {\r\n        return (\r\n            <Card className=\"hover:scale-105 transition-all duration-300\">\r\n                <CardHeader className=\"pb-3\">\r\n                    <CardTitle className=\"flex items-center space-x-2 text-lg text-white\">\r\n                        <Sparkles className=\"w-5 h-5 text-pink-400\" />\r\n                        <span>AI Strategy Composer</span>\r\n                    </CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <div className=\"text-center text-gray-300 py-4\">\r\n                        <Sparkles className=\"w-8 h-8 mx-auto mb-2 text-gray-400\" />\r\n                        <p className=\"text-sm\">Loading strategy insights...</p>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Card className=\"hover:scale-105 transition-all duration-300\">\r\n            <CardHeader className=\"pb-3\">\r\n                <CardTitle className=\"flex items-center space-x-2 text-lg text-white\">\r\n                    <Sparkles className=\"w-5 h-5 text-pink-400\" />\r\n                    <span>AI Strategy Composer</span>\r\n                </CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n                {/* Key Metrics */}\r\n                <div className=\"grid grid-cols-2 gap-3\">\r\n                    <div className=\"text-center\">\r\n                        <div className=\"flex items-center justify-center space-x-1 mb-1\">\r\n                            <Target className=\"w-4 h-4 text-pink-400\" />\r\n                            <span className=\"text-sm font-medium text-gray-300\">Active</span>\r\n                        </div>\r\n                        <p className=\"text-lg font-bold text-pink-400\">{metrics.activeStrategies}</p>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                        <div className=\"flex items-center justify-center space-x-1 mb-1\">\r\n                            <TrendingUp className=\"w-4 h-4 text-green-400\" />\r\n                            <span className=\"text-sm font-medium text-gray-300\">Success Rate</span>\r\n                        </div>\r\n                        <p className={`text-lg font-bold ${getSuccessRateColor(metrics.averageSuccessRate)}`}>\r\n                            {metrics.averageSuccessRate}%\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Confidence Score */}\r\n                <div className=\"space-y-2\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                        <span className=\"text-sm font-medium text-gray-300\">AI Confidence</span>\r\n                        <span className={`text-sm font-semibold ${getConfidenceColor(metrics.averageConfidence)}`}>\r\n                            {metrics.averageConfidence}%\r\n                        </span>\r\n                    </div>\r\n                    <Progress value={metrics.averageConfidence} className=\"h-2\" />\r\n                </div>\r\n\r\n                {/* Revenue Prediction */}\r\n                <div className=\"space-y-2\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                        <span className=\"text-sm font-medium text-gray-300\">Predicted Revenue</span>\r\n                        <Clock className=\"w-4 h-4 text-gray-400\" />\r\n                    </div>\r\n                    <p className=\"text-lg font-bold text-green-400\">\r\n                        {formatCurrency(metrics.totalPredictedRevenue)}\r\n                    </p>\r\n                </div>\r\n\r\n                {/* Top Performing Action */}\r\n                {metrics.topPerformingActions.length > 0 && (\r\n                    <div className=\"space-y-2\">\r\n                        <span className=\"text-sm font-medium text-gray-300\">Top Action</span>\r\n                        <div className=\"bg-gradient-to-r from-pink-500/10 to-purple-600/10 backdrop-blur-sm p-2 rounded-lg border border-pink-500/20\">\r\n                            <p className=\"text-sm text-gray-200 font-medium\">\r\n                                {metrics.topPerformingActions[0]}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Action Button */}\r\n                <Button\r\n                    variant=\"premium\"\r\n                    className=\"w-full\"\r\n                    onClick={() => {\r\n                        // Navigate to strategy composer\r\n                        window.location.href = '/?tab=strategycomposer'\r\n                    }}\r\n                >\r\n                    <Sparkles className=\"w-4 h-4 mr-2\" />\r\n                    Create Strategy\r\n                    <ArrowRight className=\"w-4 h-4 ml-2\" />\r\n                </Button>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1516, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/index.ts"],"sourcesContent":["export { AIPoweredBusinessDashboard } from './ai-powered-business-dashboard'\r\nexport { default as AIPoweredBusinessDashboardDefault } from './ai-powered-business-dashboard' "],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 1535, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/brand-assets-hub.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { useState, ChangeEvent, FormEvent } from \"react\"\r\nimport Image from \"next/image\"\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardDescription,\r\n} from \"@/components/ui/card\"\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeader,\r\n  TableRow,\r\n} from \"@/components/ui/table\"\r\n\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\r\n\r\ntype UsageStatus = \"Live\" | \"Pending\" | \"Fatigued\"\r\ntype AssetType = \"image\" | \"video\" | \"ugc\"\r\n\r\ninterface Asset {\r\n  id: number\r\n  name: string\r\n  fileUrl: string\r\n  type: AssetType\r\n  tags: {\r\n    product: string\r\n    campaign: string\r\n    platform: string\r\n  }\r\n  usageStatus: UsageStatus\r\n  dateUploaded: string\r\n}\r\n\r\nexport function BrandAssetsHub() {\r\n  const [assets, setAssets] = useState<Asset[]>([])\r\n  const [file, setFile] = useState<File | null>(null)\r\n  const [productTag, setProductTag] = useState(\"\")\r\n  const [campaignTag, setCampaignTag] = useState(\"\")\r\n  const [platformTag, setPlatformTag] = useState(\"\")\r\n  const [usageStatus, setUsageStatus] = useState<UsageStatus>(\"Pending\")\r\n  const [error, setError] = useState(\"\")\r\n\r\n  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setError(\"\")\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const selectedFile = e.target.files[0]\r\n      const allowedTypes = [\"image/png\", \"image/jpeg\", \"image/jpg\", \"image/gif\", \"video/mp4\", \"video/webm\", \"video/ogg\"]\r\n      if (!allowedTypes.includes(selectedFile.type)) {\r\n        setError(\"Unsupported file type. Please upload an image or video.\")\r\n        setFile(null)\r\n        return\r\n      }\r\n      setFile(selectedFile)\r\n    }\r\n  }\r\n\r\n  const getAssetType = (file: File): AssetType => {\r\n    if (file.type.startsWith(\"image/\")) return \"image\"\r\n    if (file.type.startsWith(\"video/\")) return \"video\"\r\n    return \"ugc\"\r\n  }\r\n\r\n  const handleAddAsset = (e: FormEvent) => {\r\n    e.preventDefault()\r\n    setError(\"\")\r\n\r\n    if (!file) {\r\n      setError(\"Please select a file to upload.\")\r\n      return\r\n    }\r\n    if (!productTag.trim() || !campaignTag.trim() || !platformTag.trim()) {\r\n      setError(\"Please fill in all tag fields: product, campaign, and platform.\")\r\n      return\r\n    }\r\n\r\n    const newAsset: Asset = {\r\n      id: Date.now(),\r\n      name: file.name,\r\n      fileUrl: URL.createObjectURL(file),\r\n      type: getAssetType(file),\r\n      tags: {\r\n        product: productTag.trim(),\r\n        campaign: campaignTag.trim(),\r\n        platform: platformTag.trim(),\r\n      },\r\n      usageStatus,\r\n      dateUploaded: new Date().toISOString().split(\"T\")[0], // YYYY-MM-DD\r\n    }\r\n\r\n    setAssets((prev) => [newAsset, ...prev])\r\n    // Reset form\r\n    setFile(null)\r\n    setProductTag(\"\")\r\n    setCampaignTag(\"\")\r\n    setPlatformTag(\"\")\r\n    setUsageStatus(\"Pending\")\r\n    // Reset file input value manually\r\n    const fileInput = document.getElementById(\"fileInput\") as HTMLInputElement | null\r\n    if (fileInput) fileInput.value = \"\"\r\n  }\r\n\r\n  const handleUsageStatusChange = (id: number, newStatus: UsageStatus) => {\r\n    setAssets((prev) =>\r\n      prev.map((asset) =>\r\n        asset.id === id ? { ...asset, usageStatus: newStatus } : asset\r\n      )\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Brand Assets Hub</CardTitle>\r\n          <CardDescription>\r\n            Store approved brand assets and manage tags and usage status\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <form onSubmit={handleAddAsset} className=\"space-y-4\">\r\n            <div>\r\n              <label htmlFor=\"fileInput\" className=\"block mb-1 font-medium\">\r\n                Upload Asset (Image or Video)\r\n              </label>\r\n              <Input\r\n                type=\"file\"\r\n                id=\"fileInput\"\r\n                accept=\"image/*,video/*\"\r\n                onChange={handleFileChange}\r\n              />\r\n            </div>\r\n            <div className=\"grid grid-cols-3 gap-4\">\r\n              <div>\r\n                <label htmlFor=\"productTag\" className=\"block mb-1 font-medium\">\r\n                  Product Tag\r\n                </label>\r\n                <Input\r\n                  id=\"productTag\"\r\n                  value={productTag}\r\n                  onChange={(e) => setProductTag(e.target.value)}\r\n                  placeholder=\"Product\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"campaignTag\" className=\"block mb-1 font-medium\">\r\n                  Campaign Tag\r\n                </label>\r\n                <Input\r\n                  id=\"campaignTag\"\r\n                  value={campaignTag}\r\n                  onChange={(e) => setCampaignTag(e.target.value)}\r\n                  placeholder=\"Campaign\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"platformTag\" className=\"block mb-1 font-medium\">\r\n                  Platform Tag\r\n                </label>\r\n                <Input\r\n                  id=\"platformTag\"\r\n                  value={platformTag}\r\n                  onChange={(e) => setPlatformTag(e.target.value)}\r\n                  placeholder=\"Platform\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"usageStatus\" className=\"block mb-1 font-medium\">\r\n                Usage Status\r\n              </label>\r\n              <Select\r\n                onValueChange={(value) => setUsageStatus(value as UsageStatus)}\r\n                value={usageStatus}\r\n              >\r\n                <SelectTrigger id=\"usageStatus\" className=\"w-[180px]\">\r\n                  <SelectValue placeholder=\"Select status\" />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  <SelectItem value=\"Live\">Live</SelectItem>\r\n                  <SelectItem value=\"Pending\">Pending</SelectItem>\r\n                  <SelectItem value=\"Fatigued\">Fatigued</SelectItem>\r\n                </SelectContent>\r\n              </Select>\r\n            </div>\r\n            {error && <p className=\"text-red-600 font-medium\">{error}</p>}\r\n            <Button type=\"submit\">Add Asset</Button>\r\n          </form>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Stored Brand Assets</CardTitle>\r\n          <CardDescription>Manage your uploaded brand assets</CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          {assets.length === 0 ? (\r\n            <p>No assets uploaded yet.</p>\r\n          ) : (\r\n            <Table>\r\n              <TableHeader>\r\n                <TableRow>\r\n                  <TableHead>Preview</TableHead>\r\n                  <TableHead>Name</TableHead>\r\n                  <TableHead>Type</TableHead>\r\n                  <TableHead>Product</TableHead>\r\n                  <TableHead>Campaign</TableHead>\r\n                  <TableHead>Platform</TableHead>\r\n                  <TableHead>Usage Status</TableHead>\r\n                  <TableHead>Date Uploaded</TableHead>\r\n                </TableRow>\r\n              </TableHeader>\r\n              <TableBody>\r\n                {assets.map((asset) => (\r\n                  <TableRow key={asset.id}>\r\n                    <TableCell>\r\n                      {asset.type === \"image\" ? (\r\n                        <img\r\n                          src={asset.fileUrl}\r\n                          alt={asset.name}\r\n                          className=\"w-16 h-16 object-cover rounded\"\r\n                        />\r\n                      ) : (\r\n                        <div className=\"w-16 h-16 flex items-center justify-center bg-gray-200 rounded text-sm font-medium\">\r\n                          {asset.type.toUpperCase()}\r\n                        </div>\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell>{asset.name}</TableCell>\r\n                    <TableCell>{asset.type}</TableCell>\r\n                    <TableCell>{asset.tags.product}</TableCell>\r\n                    <TableCell>{asset.tags.campaign}</TableCell>\r\n                    <TableCell>{asset.tags.platform}</TableCell>\r\n                    <TableCell>\r\n                      <Select\r\n                        value={asset.usageStatus}\r\n                        onValueChange={(value) =>\r\n                          handleUsageStatusChange(asset.id, value as UsageStatus)\r\n                        }\r\n                      >\r\n                        <SelectTrigger className=\"w-[120px]\">\r\n                          <SelectValue />\r\n                        </SelectTrigger>\r\n                        <SelectContent>\r\n                          <SelectItem value=\"Live\">Live</SelectItem>\r\n                          <SelectItem value=\"Pending\">Pending</SelectItem>\r\n                          <SelectItem value=\"Fatigued\">Fatigued</SelectItem>\r\n                        </SelectContent>\r\n                      </Select>\r\n                    </TableCell>\r\n                    <TableCell>{asset.dateUploaded}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2157, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/dashboard/auto-replies-engine.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"progressBar\": \"auto-replies-engine-module__hoCOua__progressBar\",\n  \"progressBarBlue\": \"auto-replies-engine-module__hoCOua__progressBarBlue\",\n  \"progressBarGreen\": \"auto-replies-engine-module__hoCOua__progressBarGreen\",\n  \"progressWidth10\": \"auto-replies-engine-module__hoCOua__progressWidth10\",\n  \"progressWidth100\": \"auto-replies-engine-module__hoCOua__progressWidth100\",\n  \"progressWidth15\": \"auto-replies-engine-module__hoCOua__progressWidth15\",\n  \"progressWidth20\": \"auto-replies-engine-module__hoCOua__progressWidth20\",\n  \"progressWidth25\": \"auto-replies-engine-module__hoCOua__progressWidth25\",\n  \"progressWidth30\": \"auto-replies-engine-module__hoCOua__progressWidth30\",\n  \"progressWidth35\": \"auto-replies-engine-module__hoCOua__progressWidth35\",\n  \"progressWidth40\": \"auto-replies-engine-module__hoCOua__progressWidth40\",\n  \"progressWidth45\": \"auto-replies-engine-module__hoCOua__progressWidth45\",\n  \"progressWidth50\": \"auto-replies-engine-module__hoCOua__progressWidth50\",\n  \"progressWidth55\": \"auto-replies-engine-module__hoCOua__progressWidth55\",\n  \"progressWidth60\": \"auto-replies-engine-module__hoCOua__progressWidth60\",\n  \"progressWidth65\": \"auto-replies-engine-module__hoCOua__progressWidth65\",\n  \"progressWidth70\": \"auto-replies-engine-module__hoCOua__progressWidth70\",\n  \"progressWidth75\": \"auto-replies-engine-module__hoCOua__progressWidth75\",\n  \"progressWidth80\": \"auto-replies-engine-module__hoCOua__progressWidth80\",\n  \"progressWidth85\": \"auto-replies-engine-module__hoCOua__progressWidth85\",\n  \"progressWidth90\": \"auto-replies-engine-module__hoCOua__progressWidth90\",\n  \"progressWidth95\": \"auto-replies-engine-module__hoCOua__progressWidth95\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 2187, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/website-analytics.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\r\nimport { Alert, AlertDescription } from \"@/components/ui/alert\"\r\nimport { RefreshCw, Users, DollarSign, Target, TrendingUp, TrendingDown, AlertTriangle, Brain, Lightbulb } from \"lucide-react\"\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\"\r\n\r\ninterface SessionBehavior {\r\n    id: string\r\n    sessionId: string\r\n    device: string\r\n    source: string\r\n    duration: number\r\n    pages: number\r\n    scrollDepth: number\r\n    rageClicks: number\r\n    exits: number\r\n    aiLabel: string\r\n    aiSummary: string\r\n    timestamp: string\r\n    revenue?: number\r\n    products: string[]\r\n}\r\n\r\ninterface Benchmark {\r\n    metric: string\r\n    yourValue: number\r\n    industryAverage: number\r\n    percentile: number\r\n    trend: string\r\n    aiAnalysis: string\r\n}\r\n\r\nexport function WebsiteAnalytics() {\r\n    const [activeTab, setActiveTab] = useState(\"overview\")\r\n    const [sessions, setSessions] = useState<SessionBehavior[]>([])\r\n    const [benchmarks, setBenchmarks] = useState<Benchmark[]>([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [loadError, setLoadError] = useState<string | null>(null)\r\n\r\n    // Fetch sessions and benchmarks\r\n    const loadAnalyticsData = async () => {\r\n        setIsLoading(true)\r\n        setLoadError(null)\r\n        try {\r\n            const [sessionsRes, benchmarksRes] = await Promise.all([\r\n                fetch(\"/api/website-analytics/sessions\"),\r\n                fetch(\"/api/website-analytics/benchmarks\")\r\n            ])\r\n            if (!sessionsRes.ok || !benchmarksRes.ok) throw new Error(\"API error\")\r\n            const sessionsData = await sessionsRes.json()\r\n            const benchmarksData = await benchmarksRes.json()\r\n            setSessions(sessionsData.data.sessions)\r\n            setBenchmarks(benchmarksData.data.benchmarks)\r\n        } catch (e) {\r\n            setLoadError(\"Failed to load analytics data. Showing demo data.\")\r\n            setSessions([])\r\n            setBenchmarks([])\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadAnalyticsData()\r\n    }, [])\r\n\r\n    // Chart data for demo\r\n    const sessionData = [\r\n        { time: '00:00', sessions: 45, conversions: 3 },\r\n        { time: '04:00', sessions: 23, conversions: 1 },\r\n        { time: '08:00', sessions: 89, conversions: 8 },\r\n        { time: '12:00', sessions: 156, conversions: 15 },\r\n        { time: '16:00', sessions: 134, conversions: 12 },\r\n        { time: '20:00', sessions: 98, conversions: 9 },\r\n        { time: '24:00', sessions: 67, conversions: 6 }\r\n    ]\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"flex items-center justify-center h-96\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                    <RefreshCw className=\"h-6 w-6 animate-spin\" />\r\n                    <span>Loading Website Analytics...</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"space-y-6 p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                    <h1 className=\"text-3xl font-bold\">Website Analytics</h1>\r\n                    <p className=\"text-muted-foreground\">AI-powered insights into user behavior and business performance</p>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                    <Button onClick={loadAnalyticsData} size=\"sm\">\r\n                        <RefreshCw className=\"h-4 w-4 mr-2\" />\r\n                        Refresh\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n            {loadError && (\r\n                <Alert>\r\n                    <AlertTriangle className=\"h-4 w-4\" />\r\n                    <AlertDescription>{loadError}</AlertDescription>\r\n                </Alert>\r\n            )}\r\n            <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-4\">\r\n                <TabsList className=\"grid w-full grid-cols-2\">\r\n                    <TabsTrigger value=\"overview\">Overview</TabsTrigger>\r\n                    <TabsTrigger value=\"behavior\">AI Behavior</TabsTrigger>\r\n                </TabsList>\r\n                <TabsContent value=\"overview\" className=\"space-y-4\">\r\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n                        <Card>\r\n                            <CardHeader>\r\n                                <CardTitle>Sessions & Conversions</CardTitle>\r\n                            </CardHeader>\r\n                            <CardContent>\r\n                                <ResponsiveContainer width=\"100%\" height={300}>\r\n                                    <LineChart data={sessionData}>\r\n                                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                        <XAxis dataKey=\"time\" />\r\n                                        <YAxis />\r\n                                        <Tooltip />\r\n                                        <Line type=\"monotone\" dataKey=\"sessions\" stroke=\"#3b82f6\" name=\"Sessions\" />\r\n                                        <Line type=\"monotone\" dataKey=\"conversions\" stroke=\"#10b981\" name=\"Conversions\" />\r\n                                    </LineChart>\r\n                                </ResponsiveContainer>\r\n                            </CardContent>\r\n                        </Card>\r\n                        <Card>\r\n                            <CardHeader>\r\n                                <CardTitle>Competitor Benchmarks</CardTitle>\r\n                            </CardHeader>\r\n                            <CardContent>\r\n                                <div className=\"space-y-4\">\r\n                                    {benchmarks.map((benchmark) => (\r\n                                        <div key={benchmark.metric} className=\"flex items-center justify-between p-3 border rounded\">\r\n                                            <div>\r\n                                                <p className=\"font-medium\">{benchmark.metric}</p>\r\n                                                <p className=\"text-sm text-muted-foreground\">{benchmark.aiAnalysis}</p>\r\n                                            </div>\r\n                                            <div className=\"text-right\">\r\n                                                <p className=\"font-bold\">{benchmark.yourValue}</p>\r\n                                                <p className=\"text-xs text-muted-foreground\">vs {benchmark.industryAverage} avg</p>\r\n                                                <div className=\"flex items-center\">\r\n                                                    {benchmark.trend === 'up' ? <TrendingUp className=\"h-4 w-4 text-green-600\" /> : <TrendingDown className=\"h-4 w-4 text-red-600\" />}\r\n                                                    <span className=\"text-xs ml-1\">{benchmark.percentile}th percentile</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </div>\r\n                </TabsContent>\r\n                <TabsContent value=\"behavior\" className=\"space-y-4\">\r\n                    <div className=\"space-y-4\">\r\n                        {sessions.map((session) => (\r\n                            <Card key={session.id}>\r\n                                <CardContent className=\"p-4\">\r\n                                    <div className=\"flex items-center justify-between mb-3\">\r\n                                        <div className=\"flex items-center space-x-3\">\r\n                                            <Badge>{session.aiLabel}</Badge>\r\n                                            <div>\r\n                                                <p className=\"font-medium\">Session {session.sessionId}</p>\r\n                                                <p className=\"text-sm text-muted-foreground\">{session.device} • {session.source} • {session.duration}s</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-right\">\r\n                                            {session.revenue ? (\r\n                                                <p className=\"font-bold text-green-600\">${session.revenue}</p>\r\n                                            ) : (\r\n                                                <p className=\"text-muted-foreground\">No revenue</p>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-3\">\r\n                                        <div>\r\n                                            <p className=\"text-xs text-muted-foreground\">Pages</p>\r\n                                            <p className=\"font-medium\">{session.pages}</p>\r\n                                        </div>\r\n                                        <div>\r\n                                            <p className=\"text-xs text-muted-foreground\">Scroll Depth</p>\r\n                                            <p className=\"font-medium\">{session.scrollDepth}%</p>\r\n                                        </div>\r\n                                        <div>\r\n                                            <p className=\"text-xs text-muted-foreground\">Rage Clicks</p>\r\n                                            <p className=\"font-medium\">{session.rageClicks}</p>\r\n                                        </div>\r\n                                        <div>\r\n                                            <p className=\"text-xs text-muted-foreground\">Exits</p>\r\n                                            <p className=\"font-medium\">{session.exits}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"p-3 bg-blue-50 rounded text-sm\">\r\n                                        <Brain className=\"h-4 w-4 inline mr-2 text-blue-600\" />\r\n                                        {session.aiSummary}\r\n                                    </div>\r\n                                </CardContent>\r\n                            </Card>\r\n                        ))}\r\n                    </div>\r\n                </TabsContent>\r\n            </Tabs>\r\n        </div>\r\n    )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2925, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/enhanced-social-media-dashboard.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport { Sidebar, SidebarContent, SidebarHeader, SidebarMenu, SidebarMenuItem, SidebarMenuButton, SidebarProvider, SidebarTrigger } from \"@/components/ui/sidebar\"\r\nimport { BarChart3, Home, TrendingUp, Calendar, Image, DollarSign, Target, Users, Clock, Globe, Lightbulb, MessageSquare, Settings, Brain, Building, Zap, Sparkles } from \"lucide-react\"\r\nimport { SocialMediaManager } from \"./social-media-manager\"\r\nimport { RedesignedOverviewDashboard } from \"./redesigned-overview-dashboard\"\r\nimport { AIPoweredBusinessDashboard } from \"./index\"\r\n\r\nimport { BrandAssetsHub } from \"./brand-assets-hub\"\r\nimport { EnhancedCashLog } from \"./enhanced-cash-log\"\r\n\r\nimport { EnhancedAudienceTracker } from \"./enhanced-audience-tracker\"\r\nimport { AIPoweredAdIdeaGenerator } from \"./ai-powered-ad-idea-generator\"\r\nimport { EnhancedAutoMessages } from \"./enhanced-auto-messages\"\r\nimport { AutoRepliesEngine } from \"./auto-replies-engine\"\r\nimport { BrandingPlaceholder } from \"./branding-placeholder\"\r\nimport { AIAudienceTimingInsights } from \"./ai-audience-timing-insights\"\r\nimport RageIntel from \"./rageintel\"\r\nimport AdPilotAI from \"./adpilot-ai\"\r\nimport { AIChat } from \"./ai-chat\"\r\nimport { WebsiteAnalytics } from \"./website-analytics\"\r\nimport { CRMSalesPipeline } from \"./crm-sales-pipeline\"\r\nimport { AIDropPredictor } from \"./ai-drop-predictor\"\r\nimport { AIROIForecastEngine } from \"./ai-roi-forecast-engine\"\r\nimport { AIStrategyComposer } from \"./ai-strategy-composer\"\r\n\r\nconst sidebarItems = [\r\n  { id: \"dashboard\", label: \"Social Media Manager\", icon: Home },\r\n  { id: \"aibusinessdashboard\", label: \"AI Business Dashboard\", icon: Brain },\r\n  { id: \"redesigneddashboard\", label: \"Redesigned Dashboard\", icon: BarChart3 },\r\n  { id: \"brandassets\", label: \"Brand Assets Hub\", icon: Image },\r\n  { id: \"cash\", label: \"Cash Log\", icon: DollarSign },\r\n  { id: \"audience\", label: \"Audience Tracker\", icon: Users },\r\n  { id: \"audiencetiming\", label: \"AI Audience Timing\", icon: Clock },\r\n  { id: \"aiideas\", label: \"AI Ad Generator\", icon: Brain },\r\n  { id: \"autoreplies\", label: \"Auto Replies\", icon: MessageSquare },\r\n  { id: \"messages\", label: \"Auto Messages\", icon: MessageSquare },\r\n  { id: \"branding\", label: \"Branding\", icon: Settings },\r\n  { id: \"rageintel\", label: \"Competitor Tracking\", icon: Brain },\r\n  { id: \"adpilot\", label: \"Ad Performance\", icon: Target },\r\n  { id: \"aichat\", label: \"AI Chat & Collab\", icon: MessageSquare },\r\n  { id: \"websiteanalytics\", label: \"Website Analytics\", icon: BarChart3 },\r\n  { id: \"crm\", label: \"CRM & Sales\", icon: Building },\r\n  { id: \"aidroppredictor\", label: \"AI Drop Predictor\", icon: Zap },\r\n  { id: \"roiforecast\", label: \"AI ROI Forecast\", icon: Target },\r\n  { id: \"strategycomposer\", label: \"AI Strategy Composer\", icon: Sparkles },\r\n]\r\n\r\nexport function EnhancedSocialMediaDashboard() {\r\n  const [activeTab, setActiveTab] = useState(\"dashboard\")\r\n\r\n  const renderContent = () => {\r\n    switch (activeTab) {\r\n      case \"dashboard\":\r\n        return <AIPoweredBusinessDashboard />\r\n      case \"social\":\r\n        return <SocialMediaManager />\r\n      case \"audience\":\r\n        return <EnhancedAudienceTracker />\r\n      case \"ads\":\r\n        return <EnhancedAdPerformance />\r\n      case \"auto\":\r\n        return <AutoRepliesEngine />\r\n      case \"messages\":\r\n        return <EnhancedAutoMessages />\r\n      case \"branding\":\r\n        return <BrandAssetsHub />\r\n      case \"cash\":\r\n        return <CashLog />\r\n      case \"timing\":\r\n        return <AIAudienceTiming />\r\n      case \"generator\":\r\n        return <AIPoweredAdIdeaGenerator />\r\n      case \"competitors\":\r\n        return <RageIntel />\r\n      case \"analytics\":\r\n        return <WebsiteAnalytics />\r\n      case \"crm\":\r\n        return <CRMAndSales />\r\n      case \"drops\":\r\n        return <Drops />\r\n      case \"forecast\":\r\n        return <AIROIForecastEngine />\r\n      case \"strategycomposer\":\r\n        return <AIStrategyComposer />\r\n      default:\r\n        return <AIPoweredBusinessDashboard />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <SidebarProvider>\r\n      <div className=\"flex h-screen w-full bg-gradient-to-br from-slate-900 via-purple-900/50 to-slate-900 gpu-accelerated\">\r\n        <Sidebar className=\"border-r border-white/10 gpu-accelerated\">\r\n          <SidebarHeader className=\"border-b border-white/10 p-6 bg-gradient-to-r from-slate-800/50 to-slate-900/50 backdrop-blur-xl gpu-accelerated\">\r\n            <div className=\"flex items-center gap-3\">\r\n              <div className=\"p-2 rounded-lg bg-gradient-to-r from-pink-500 to-purple-600 shadow-lg shadow-pink-500/25 gpu-accelerated\">\r\n                <BarChart3 className=\"h-6 w-6 text-white\" />\r\n              </div>\r\n              <div>\r\n                <span className=\"font-bold text-white text-lg\">Essentials Enhanced</span>\r\n                <div className=\"text-xs text-gray-300\">AI-Powered Business OS</div>\r\n              </div>\r\n            </div>\r\n          </SidebarHeader>\r\n          <SidebarContent className=\"p-4\">\r\n            <SidebarMenu>\r\n              {sidebarItems.map((item) => (\r\n                <SidebarMenuItem key={item.id}>\r\n                  <SidebarMenuButton\r\n                    onClick={() => setActiveTab(item.id)}\r\n                    isActive={activeTab === item.id}\r\n                    className=\"w-full justify-start transition-all duration-200 gpu-accelerated\"\r\n                  >\r\n                    <item.icon className=\"h-4 w-4\" />\r\n                    <span>{item.label}</span>\r\n                  </SidebarMenuButton>\r\n                </SidebarMenuItem>\r\n              ))}\r\n            </SidebarMenu>\r\n          </SidebarContent>\r\n        </Sidebar>\r\n\r\n        <div className=\"flex-1 flex flex-col overflow-hidden gpu-accelerated\">\r\n          <header className=\"border-b border-white/10 p-6 flex items-center justify-between bg-gradient-to-r from-slate-800/30 to-slate-900/30 backdrop-blur-xl gpu-accelerated\">\r\n            <div className=\"flex items-center gap-4\">\r\n              <SidebarTrigger className=\"bg-gradient-to-r from-pink-500 to-purple-600 text-white shadow-lg shadow-pink-500/25 hover:shadow-xl hover:shadow-pink-500/40 hover:scale-105 transition-all duration-200 gpu-accelerated\" />\r\n              <div>\r\n                <h1 className=\"text-2xl font-bold text-white\">\r\n                  {sidebarItems.find(item => item.id === activeTab)?.label || \"Dashboard\"}\r\n                </h1>\r\n                <div className=\"text-sm text-gray-300\">Premium AI-Powered Interface</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <div className=\"px-3 py-1 rounded-full bg-gradient-to-r from-pink-500 to-purple-600 text-white text-xs font-semibold shadow-lg shadow-pink-500/25 gpu-accelerated\">\r\n                Enhanced Mode\r\n              </div>\r\n            </div>\r\n          </header>\r\n\r\n          <main className=\"flex-1 overflow-auto p-6 bg-gradient-to-br from-slate-900/50 to-slate-800/50 gpu-accelerated\">\r\n            <div className=\"max-w-7xl mx-auto transition-all duration-200\">\r\n              {renderContent()}\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </SidebarProvider>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}