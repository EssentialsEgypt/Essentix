{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/enhanced-cash-log.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Textarea } from \"@/components/ui/textarea\"\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\"\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\r\nimport { Switch } from \"@/components/ui/switch\"\r\nimport { toast } from \"sonner\"\r\nimport { \r\n  DollarSign, \r\n  Users, \r\n  ShoppingCart, \r\n  Plus, \r\n  Minus, \r\n  Calendar, \r\n  TrendingUp, \r\n  TrendingDown,\r\n  Facebook,\r\n  Instagram,\r\n  CreditCard,\r\n  Receipt,\r\n  User,\r\n  Gift,\r\n  Package,\r\n  Settings,\r\n  BarChart3,\r\n  Download,\r\n  Upload,\r\n  RefreshCw\r\n} from \"lucide-react\"\r\n\r\n// Types\r\ninterface CashLogEntry {\r\n  id: number\r\n  date: string\r\n  description: string\r\n  amount: number\r\n  category: string\r\n  subcategory?: string\r\n  transaction_type: 'income' | 'expense'\r\n  source?: string\r\n  platform?: string\r\n  campaign_id?: string\r\n  tags?: string[]\r\n  notes?: string\r\n}\r\n\r\ninterface TeamMember {\r\n  id: number\r\n  name: string\r\n  monthly_salary: number\r\n  last_paid?: string\r\n  status: 'active' | 'inactive'\r\n}\r\n\r\ninterface MonthlySummary {\r\n  year: number\r\n  month: number\r\n  total_revenue: number\r\n  total_ad_spend: number\r\n  total_salaries: number\r\n  total_bonuses: number\r\n  total_expenses: number\r\n  net_profit: number\r\n  roi_percentage: number\r\n}\r\n\r\n// Mock data for demonstration\r\nconst mockTeamMembers: TeamMember[] = [\r\n  { id: 1, name: \"Ahmed\", monthly_salary: 10000, status: 'active' },\r\n  { id: 2, name: \"Omar\", monthly_salary: 8000, status: 'active' },\r\n  { id: 3, name: \"Sarah\", monthly_salary: 12000, status: 'active' },\r\n  { id: 4, name: \"Fatima\", monthly_salary: 9000, status: 'active' },\r\n]\r\n\r\nconst mockCashLogEntries: CashLogEntry[] = [\r\n  {\r\n    id: 1,\r\n    date: \"2024-01-15\",\r\n    description: \"Instagram – Story Campaign – August 3\",\r\n    amount: -2000,\r\n    category: \"Ad Spend\",\r\n    subcategory: \"Instagram Ads\",\r\n    transaction_type: \"expense\",\r\n    source: \"instagram\",\r\n    platform: \"instagram\",\r\n    tags: [\"@campaign\", \"story\"]\r\n  },\r\n  {\r\n    id: 2,\r\n    date: \"2024-01-10\",\r\n    description: \"Salary – @Ahmed\",\r\n    amount: -10000,\r\n    category: \"Salary\",\r\n    transaction_type: \"expense\",\r\n    source: \"salary\",\r\n    tags: [\"@Ahmed\", \"salary\"]\r\n  },\r\n  {\r\n    id: 3,\r\n    date: \"2024-01-12\",\r\n    description: \"Bonus – @Omar\",\r\n    amount: -2000,\r\n    category: \"Bonus\",\r\n    transaction_type: \"expense\",\r\n    source: \"bonus\",\r\n    tags: [\"@Omar\", \"bonus\", \"salary\"]\r\n  },\r\n  {\r\n    id: 4,\r\n    date: \"2024-01-14\",\r\n    description: \"Manual Order – Supreme Hoodie\",\r\n    amount: -1850,\r\n    category: \"Order\",\r\n    subcategory: \"Manual Order\",\r\n    transaction_type: \"expense\",\r\n    source: \"manual\",\r\n    tags: [\"@order\", \"supreme\"]\r\n  },\r\n  {\r\n    id: 5,\r\n    date: \"2024-01-16\",\r\n    description: \"Facebook Ad Campaign: Summer Sale\",\r\n    amount: -1500,\r\n    category: \"Ad Spend\",\r\n    subcategory: \"Facebook Ads\",\r\n    transaction_type: \"expense\",\r\n    source: \"facebook_ads\",\r\n    platform: \"facebook\",\r\n    tags: [\"@campaign\", \"summer\"]\r\n  },\r\n  {\r\n    id: 6,\r\n    date: \"2024-01-20\",\r\n    description: \"Monthly Revenue - Shopify Store\",\r\n    amount: 25000,\r\n    category: \"Revenue\",\r\n    subcategory: \"Shopify\",\r\n    transaction_type: \"income\",\r\n    source: \"shopify\",\r\n    platform: \"shopify\",\r\n    tags: [\"@revenue\", \"monthly\"]\r\n  }\r\n]\r\n\r\nconst mockMonthlySummary: MonthlySummary = {\r\n  year: 2024,\r\n  month: 1,\r\n  total_revenue: 25000,\r\n  total_ad_spend: 3500,\r\n  total_salaries: 10000,\r\n  total_bonuses: 2000,\r\n  total_expenses: 1850,\r\n  net_profit: 7650,\r\n  roi_percentage: 45.2\r\n}\r\n\r\nexport function EnhancedCashLog() {\r\n  const [cashLogEntries, setCashLogEntries] = useState<CashLogEntry[]>(mockCashLogEntries)\r\n  const [teamMembers, setTeamMembers] = useState<TeamMember[]>(mockTeamMembers)\r\n  const [monthlySummary, setMonthlySummary] = useState<MonthlySummary>(mockMonthlySummary)\r\n  const [selectedMonth, setSelectedMonth] = useState<string>(\"2024-01\")\r\n  const [showAddEntry, setShowAddEntry] = useState(false)\r\n  const [showAddTeamMember, setShowAddTeamMember] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  // Form states\r\n  const [newEntry, setNewEntry] = useState({\r\n    description: \"\",\r\n    amount: \"\",\r\n    category: \"\",\r\n    subcategory: \"\",\r\n    transaction_type: \"expense\" as 'income' | 'expense',\r\n    source: \"\",\r\n    platform: \"\",\r\n    tags: \"\",\r\n    notes: \"\"\r\n  })\r\n\r\n  const [newTeamMember, setNewTeamMember] = useState({\r\n    name: \"\",\r\n    monthly_salary: \"\",\r\n    status: \"active\" as 'active' | 'inactive'\r\n  })\r\n\r\n  const [manualOrder, setManualOrder] = useState({\r\n    amount: \"\",\r\n    description: \"\",\r\n    category: \"Order\"\r\n  })\r\n\r\n  const [manualExpense, setManualExpense] = useState({\r\n    description: \"\",\r\n    amount: \"\",\r\n    category: \"\",\r\n    transaction_type: \"expense\" as 'income' | 'expense'\r\n  })\r\n\r\n  // Categories for dropdowns\r\n  const categories = [\r\n    \"Ad Spend\", \"Salary\", \"Bonus\", \"Order\", \"Manual\", \"Revenue\", \r\n    \"Office Expenses\", \"Software & Tools\", \"Marketing\", \"Travel\", \"Equipment\"\r\n  ]\r\n\r\n  const platforms = [\r\n    \"Facebook\", \"Instagram\", \"Google\", \"TikTok\", \"LinkedIn\", \"Snapchat\", \r\n    \"Shopify\", \"Manual\", \"Other\"\r\n  ]\r\n\r\n  const sources = [\r\n    \"facebook_ads\", \"instagram_ads\", \"google_ads\", \"tiktok_ads\", \r\n    \"linkedin_ads\", \"snapchat_ads\", \"salary\", \"bonus\", \"manual\", \r\n    \"shopify\", \"other\"\r\n  ]\r\n\r\n  // Functions\r\n  const addCashLogEntry = (entry: Omit<CashLogEntry, 'id' | 'date'>) => {\r\n    const newEntry: CashLogEntry = {\r\n      ...entry,\r\n      id: Date.now(),\r\n      date: new Date().toISOString().split('T')[0],\r\n      tags: entry.tags?.filter(tag => tag) || []\r\n    }\r\n    setCashLogEntries(prev => [newEntry, ...prev])\r\n    toast.success(\"Entry added successfully\")\r\n  }\r\n\r\n  const paySalary = (member: TeamMember) => {\r\n    const entry: Omit<CashLogEntry, 'id' | 'date'> = {\r\n      description: `Salary – @${member.name}`,\r\n      amount: -member.monthly_salary,\r\n      category: \"Salary\",\r\n      transaction_type: \"expense\",\r\n      source: \"salary\",\r\n      tags: [`@${member.name}`, \"salary\"]\r\n    }\r\n    addCashLogEntry(entry)\r\n    \r\n    // Update team member's last paid date\r\n    setTeamMembers(prev => prev.map(m => \r\n      m.id === member.id \r\n        ? { ...m, last_paid: new Date().toISOString().split('T')[0] }\r\n        : m\r\n    ))\r\n  }\r\n\r\n  const payBonus = (member: TeamMember, amount: number) => {\r\n    const entry: Omit<CashLogEntry, 'id' | 'date'> = {\r\n      description: `Bonus – @${member.name}`,\r\n      amount: -amount,\r\n      category: \"Bonus\",\r\n      transaction_type: \"expense\",\r\n      source: \"bonus\",\r\n      tags: [`@${member.name}`, \"bonus\", \"salary\"]\r\n    }\r\n    addCashLogEntry(entry)\r\n  }\r\n\r\n  const addManualOrder = () => {\r\n    if (!manualOrder.amount || !manualOrder.description) {\r\n      toast.error(\"Please fill in all required fields\")\r\n      return\r\n    }\r\n\r\n    const entry: Omit<CashLogEntry, 'id' | 'date'> = {\r\n      description: `Manual Order – ${manualOrder.description}`,\r\n      amount: -parseFloat(manualOrder.amount),\r\n      category: \"Order\",\r\n      subcategory: \"Manual Order\",\r\n      transaction_type: \"expense\",\r\n      source: \"manual\",\r\n      tags: [\"@order\", \"manual\"]\r\n    }\r\n    addCashLogEntry(entry)\r\n    setManualOrder({ amount: \"\", description: \"\", category: \"Order\" })\r\n  }\r\n\r\n  const addManualExpense = () => {\r\n    if (!manualExpense.description || !manualExpense.amount) {\r\n      toast.error(\"Please fill in all required fields\")\r\n      return\r\n    }\r\n\r\n    const entry: Omit<CashLogEntry, 'id' | 'date'> = {\r\n      description: manualExpense.description,\r\n      amount: manualExpense.transaction_type === 'income' \r\n        ? parseFloat(manualExpense.amount) \r\n        : -parseFloat(manualExpense.amount),\r\n      category: manualExpense.category || \"Manual\",\r\n      transaction_type: manualExpense.transaction_type,\r\n      source: \"manual\",\r\n      tags: [\"@manual\"]\r\n    }\r\n    addCashLogEntry(entry)\r\n    setManualExpense({ description: \"\", amount: \"\", category: \"\", transaction_type: \"expense\" })\r\n  }\r\n\r\n  const addTeamMember = () => {\r\n    if (!newTeamMember.name || !newTeamMember.monthly_salary) {\r\n      toast.error(\"Please fill in all required fields\")\r\n      return\r\n    }\r\n\r\n    const member: TeamMember = {\r\n      id: Date.now(),\r\n      name: newTeamMember.name,\r\n      monthly_salary: parseFloat(newTeamMember.monthly_salary),\r\n      status: newTeamMember.status\r\n    }\r\n    setTeamMembers(prev => [...prev, member])\r\n    setNewTeamMember({ name: \"\", monthly_salary: \"\", status: \"active\" })\r\n    toast.success(\"Team member added successfully\")\r\n  }\r\n\r\n  const syncAdSpending = async () => {\r\n    setLoading(true)\r\n    // Simulate API call\r\n    await new Promise(resolve => setTimeout(resolve, 2000))\r\n    \r\n    // Mock ad spending data\r\n    const mockAdSpending = [\r\n      {\r\n        description: \"Facebook Ad Campaign: Winter Collection\",\r\n        amount: -1200,\r\n        platform: \"facebook\",\r\n        source: \"facebook_ads\"\r\n      },\r\n      {\r\n        description: \"Instagram Ad Campaign: New Product Launch\",\r\n        amount: -800,\r\n        platform: \"instagram\",\r\n        source: \"instagram_ads\"\r\n      }\r\n    ]\r\n\r\n    mockAdSpending.forEach(ad => {\r\n      const entry: Omit<CashLogEntry, 'id' | 'date'> = {\r\n        description: ad.description,\r\n        amount: ad.amount,\r\n        category: \"Ad Spend\",\r\n        subcategory: `${ad.platform} Ads`,\r\n        transaction_type: \"expense\",\r\n        source: ad.source,\r\n        platform: ad.platform,\r\n        tags: [\"@campaign\", ad.platform]\r\n      }\r\n      addCashLogEntry(entry)\r\n    })\r\n\r\n    setLoading(false)\r\n    toast.success(\"Ad spending synced successfully\")\r\n  }\r\n\r\n  const syncRevenue = async () => {\r\n    setLoading(true)\r\n    // Simulate API call\r\n    await new Promise(resolve => setTimeout(resolve, 1500))\r\n    \r\n    const revenueEntry: Omit<CashLogEntry, 'id' | 'date'> = {\r\n      description: \"Monthly Revenue - Shopify Store\",\r\n      amount: 28000,\r\n      category: \"Revenue\",\r\n      subcategory: \"Shopify\",\r\n      transaction_type: \"income\",\r\n      source: \"shopify\",\r\n      platform: \"shopify\",\r\n      tags: [\"@revenue\", \"monthly\"]\r\n    }\r\n    addCashLogEntry(revenueEntry)\r\n    \r\n    setLoading(false)\r\n    toast.success(\"Revenue synced successfully\")\r\n  }\r\n\r\n  // Calculate totals\r\n  const currentMonthEntries = cashLogEntries.filter(entry => \r\n    entry.date.startsWith(selectedMonth)\r\n  )\r\n\r\n  const totalRevenue = currentMonthEntries\r\n    .filter(entry => entry.transaction_type === 'income')\r\n    .reduce((sum, entry) => sum + entry.amount, 0)\r\n\r\n  const totalExpenses = currentMonthEntries\r\n    .filter(entry => entry.transaction_type === 'expense')\r\n    .reduce((sum, entry) => sum + Math.abs(entry.amount), 0)\r\n\r\n  const netProfit = totalRevenue - totalExpenses\r\n\r\n  return (\r\n    <div className=\"space-y-6 p-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold\">Cash Log System</h1>\r\n          <p className=\"text-gray-600\">Smart financial tracking for your business</p>\r\n        </div>\r\n        <div className=\"flex gap-2\">\r\n          <Button onClick={syncAdSpending} disabled={loading}>\r\n            <RefreshCw className={`h-4 w-4 mr-2 ${loading ? 'animate-spin' : ''}`} />\r\n            Sync Ad Spending\r\n          </Button>\r\n          <Button onClick={syncRevenue} disabled={loading} variant=\"outline\">\r\n            <Upload className=\"h-4 w-4 mr-2\" />\r\n            Sync Revenue\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Monthly Summary Cards */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Total Revenue</p>\r\n                <p className=\"text-2xl font-bold text-green-600\">+{totalRevenue.toLocaleString()} EGP</p>\r\n              </div>\r\n              <TrendingUp className=\"h-8 w-8 text-green-600\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Total Expenses</p>\r\n                <p className=\"text-2xl font-bold text-red-600\">-{totalExpenses.toLocaleString()} EGP</p>\r\n              </div>\r\n              <TrendingDown className=\"h-8 w-8 text-red-600\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Net Profit</p>\r\n                <p className={`text-2xl font-bold ${netProfit >= 0 ? 'text-green-600' : 'text-red-600'}`}>\r\n                  {netProfit >= 0 ? '+' : ''}{netProfit.toLocaleString()} EGP\r\n                </p>\r\n              </div>\r\n              <DollarSign className=\"h-8 w-8 text-blue-600\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        <Card>\r\n          <CardContent className=\"p-4\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">ROI</p>\r\n                <p className=\"text-2xl font-bold text-blue-600\">\r\n                  {totalExpenses > 0 ? ((netProfit / totalExpenses) * 100).toFixed(1) : 0}%\r\n                </p>\r\n              </div>\r\n              <BarChart3 className=\"h-8 w-8 text-blue-600\" />\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n\r\n      {/* Main Content Tabs */}\r\n      <Tabs defaultValue=\"cashlog\" className=\"w-full\">\r\n        <TabsList className=\"grid w-full grid-cols-5\">\r\n          <TabsTrigger value=\"cashlog\">Cash Log</TabsTrigger>\r\n          <TabsTrigger value=\"team\">Team Salaries</TabsTrigger>\r\n          <TabsTrigger value=\"orders\">Manual Orders</TabsTrigger>\r\n          <TabsTrigger value=\"expenses\">Expenses</TabsTrigger>\r\n          <TabsTrigger value=\"analytics\">Analytics</TabsTrigger>\r\n        </TabsList>\r\n\r\n        {/* Cash Log Tab */}\r\n        <TabsContent value=\"cashlog\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader>\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <CardTitle>Cash Log Entries</CardTitle>\r\n                  <CardDescription>All financial transactions and activities</CardDescription>\r\n                </div>\r\n                <Dialog open={showAddEntry} onOpenChange={setShowAddEntry}>\r\n                  <DialogTrigger asChild>\r\n                    <Button>\r\n                      <Plus className=\"h-4 w-4 mr-2\" />\r\n                      Add Entry\r\n                    </Button>\r\n                  </DialogTrigger>\r\n                  <DialogContent className=\"max-w-2xl\">\r\n                    <DialogHeader>\r\n                      <DialogTitle>Add New Cash Log Entry</DialogTitle>\r\n                    </DialogHeader>\r\n                    <div className=\"space-y-4\">\r\n                      <div className=\"grid grid-cols-2 gap-4\">\r\n                        <div>\r\n                          <label className=\"text-sm font-medium\">Description</label>\r\n                          <Input\r\n                            value={newEntry.description}\r\n                            onChange={(e) => setNewEntry({...newEntry, description: e.target.value})}\r\n                            placeholder=\"Enter description\"\r\n                          />\r\n                        </div>\r\n                        <div>\r\n                          <label className=\"text-sm font-medium\">Amount</label>\r\n                          <Input\r\n                            type=\"number\"\r\n                            value={newEntry.amount}\r\n                            onChange={(e) => setNewEntry({...newEntry, amount: e.target.value})}\r\n                            placeholder=\"0.00\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"grid grid-cols-2 gap-4\">\r\n                        <div>\r\n                          <label className=\"text-sm font-medium\">Category</label>\r\n                          <Select value={newEntry.category} onValueChange={(value) => setNewEntry({...newEntry, category: value})}>\r\n                            <SelectTrigger>\r\n                              <SelectValue placeholder=\"Select category\" />\r\n                            </SelectTrigger>\r\n                            <SelectContent>\r\n                              {categories.map((category) => (\r\n                                <SelectItem key={category} value={category}>{category}</SelectItem>\r\n                              ))}\r\n                            </SelectContent>\r\n                          </Select>\r\n                        </div>\r\n                        <div>\r\n                          <label className=\"text-sm font-medium\">Transaction Type</label>\r\n                          <Select value={newEntry.transaction_type} onValueChange={(value: 'income' | 'expense') => setNewEntry({...newEntry, transaction_type: value})}>\r\n                            <SelectTrigger>\r\n                              <SelectValue />\r\n                            </SelectTrigger>\r\n                            <SelectContent>\r\n                              <SelectItem value=\"income\">Income</SelectItem>\r\n                              <SelectItem value=\"expense\">Expense</SelectItem>\r\n                            </SelectContent>\r\n                          </Select>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"grid grid-cols-2 gap-4\">\r\n                        <div>\r\n                          <label className=\"text-sm font-medium\">Platform</label>\r\n                          <Select value={newEntry.platform} onValueChange={(value) => setNewEntry({...newEntry, platform: value})}>\r\n                            <SelectTrigger>\r\n                              <SelectValue placeholder=\"Select platform\" />\r\n                            </SelectTrigger>\r\n                            <SelectContent>\r\n                              {platforms.map((platform) => (\r\n                                <SelectItem key={platform} value={platform}>{platform}</SelectItem>\r\n                              ))}\r\n                            </SelectContent>\r\n                          </Select>\r\n                        </div>\r\n                        <div>\r\n                          <label className=\"text-sm font-medium\">Tags</label>\r\n                          <Input\r\n                            value={newEntry.tags}\r\n                            onChange={(e) => setNewEntry({...newEntry, tags: e.target.value})}\r\n                            placeholder=\"@tag1, @tag2\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-sm font-medium\">Notes</label>\r\n                        <Textarea\r\n                          value={newEntry.notes}\r\n                          onChange={(e) => setNewEntry({...newEntry, notes: e.target.value})}\r\n                          placeholder=\"Additional notes...\"\r\n                          rows={3}\r\n                        />\r\n                      </div>\r\n                      <div className=\"flex justify-end gap-2\">\r\n                        <Button variant=\"outline\" onClick={() => setShowAddEntry(false)}>\r\n                          Cancel\r\n                        </Button>\r\n                        <Button onClick={() => {\r\n                          if (!newEntry.description || !newEntry.amount || !newEntry.category) {\r\n                            toast.error(\"Please fill in all required fields\")\r\n                            return\r\n                          }\r\n                          const entry: Omit<CashLogEntry, 'id' | 'date'> = {\r\n                            description: newEntry.description,\r\n                            amount: newEntry.transaction_type === 'income' \r\n                              ? parseFloat(newEntry.amount) \r\n                              : -parseFloat(newEntry.amount),\r\n                            category: newEntry.category,\r\n                            subcategory: newEntry.subcategory,\r\n                            transaction_type: newEntry.transaction_type,\r\n                            source: newEntry.source,\r\n                            platform: newEntry.platform,\r\n                            tags: newEntry.tags.split(',').map(tag => tag.trim()).filter(tag => tag),\r\n                            notes: newEntry.notes\r\n                          }\r\n                          addCashLogEntry(entry)\r\n                          setNewEntry({\r\n                            description: \"\", amount: \"\", category: \"\", subcategory: \"\",\r\n                            transaction_type: \"expense\", source: \"\", platform: \"\", tags: \"\", notes: \"\"\r\n                          })\r\n                          setShowAddEntry(false)\r\n                        }}>\r\n                          Add Entry\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </DialogContent>\r\n                </Dialog>\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <Table>\r\n                <TableHeader>\r\n                  <TableRow>\r\n                    <TableHead>Date</TableHead>\r\n                    <TableHead>Description</TableHead>\r\n                    <TableHead>Category</TableHead>\r\n                    <TableHead>Amount</TableHead>\r\n                    <TableHead>Tags</TableHead>\r\n                    <TableHead>Actions</TableHead>\r\n                  </TableRow>\r\n                </TableHeader>\r\n                <TableBody>\r\n                  {cashLogEntries.map((entry) => (\r\n                    <TableRow key={entry.id}>\r\n                      <TableCell>{new Date(entry.date).toLocaleDateString()}</TableCell>\r\n                      <TableCell>\r\n                        <div>\r\n                          <p className=\"font-medium\">{entry.description}</p>\r\n                          {entry.platform && (\r\n                            <Badge variant=\"secondary\" className=\"text-xs mt-1\">\r\n                              {entry.platform}\r\n                            </Badge>\r\n                          )}\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Badge variant={entry.category === 'Revenue' ? 'default' : 'outline'}>\r\n                          {entry.category}\r\n                        </Badge>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <span className={`font-semibold ${entry.amount >= 0 ? 'text-green-600' : 'text-red-600'}`}>\r\n                          {entry.amount >= 0 ? '+' : ''}{entry.amount.toLocaleString()} EGP\r\n                        </span>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <div className=\"flex flex-wrap gap-1\">\r\n                          {entry.tags?.map((tag, index) => (\r\n                            <Badge key={index} variant=\"secondary\" className=\"text-xs\">\r\n                              {tag}\r\n                            </Badge>\r\n                          ))}\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Button size=\"sm\" variant=\"outline\">\r\n                          Edit\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Team Salaries Tab */}\r\n        <TabsContent value=\"team\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader>\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <CardTitle>Team Salary Management</CardTitle>\r\n                  <CardDescription>Manage team members and salary payments</CardDescription>\r\n                </div>\r\n                <Dialog open={showAddTeamMember} onOpenChange={setShowAddTeamMember}>\r\n                  <DialogTrigger asChild>\r\n                    <Button>\r\n                      <User className=\"h-4 w-4 mr-2\" />\r\n                      Add Team Member\r\n                    </Button>\r\n                  </DialogTrigger>\r\n                  <DialogContent>\r\n                    <DialogHeader>\r\n                      <DialogTitle>Add New Team Member</DialogTitle>\r\n                    </DialogHeader>\r\n                    <div className=\"space-y-4\">\r\n                      <div>\r\n                        <label className=\"text-sm font-medium\">Name</label>\r\n                        <Input\r\n                          value={newTeamMember.name}\r\n                          onChange={(e) => setNewTeamMember({...newTeamMember, name: e.target.value})}\r\n                          placeholder=\"Enter name\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-sm font-medium\">Monthly Salary (EGP)</label>\r\n                        <Input\r\n                          type=\"number\"\r\n                          value={newTeamMember.monthly_salary}\r\n                          onChange={(e) => setNewTeamMember({...newTeamMember, monthly_salary: e.target.value})}\r\n                          placeholder=\"0\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"text-sm font-medium\">Status</label>\r\n                        <Select value={newTeamMember.status} onValueChange={(value: 'active' | 'inactive') => setNewTeamMember({...newTeamMember, status: value})}>\r\n                          <SelectTrigger>\r\n                            <SelectValue />\r\n                          </SelectTrigger>\r\n                          <SelectContent>\r\n                            <SelectItem value=\"active\">Active</SelectItem>\r\n                            <SelectItem value=\"inactive\">Inactive</SelectItem>\r\n                          </SelectContent>\r\n                        </Select>\r\n                      </div>\r\n                      <div className=\"flex justify-end gap-2\">\r\n                        <Button variant=\"outline\" onClick={() => setShowAddTeamMember(false)}>\r\n                          Cancel\r\n                        </Button>\r\n                        <Button onClick={addTeamMember}>\r\n                          Add Member\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </DialogContent>\r\n                </Dialog>\r\n              </div>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <Table>\r\n                <TableHeader>\r\n                  <TableRow>\r\n                    <TableHead>Name</TableHead>\r\n                    <TableHead>Monthly Salary</TableHead>\r\n                    <TableHead>Last Paid</TableHead>\r\n                    <TableHead>Status</TableHead>\r\n                    <TableHead>Actions</TableHead>\r\n                  </TableRow>\r\n                </TableHeader>\r\n                <TableBody>\r\n                  {teamMembers.map((member) => (\r\n                    <TableRow key={member.id}>\r\n                      <TableCell className=\"font-medium\">{member.name}</TableCell>\r\n                      <TableCell>{member.monthly_salary.toLocaleString()} EGP</TableCell>\r\n                      <TableCell>\r\n                        {member.last_paid ? new Date(member.last_paid).toLocaleDateString() : 'Never'}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Badge variant={member.status === 'active' ? 'default' : 'secondary'}>\r\n                          {member.status}\r\n                        </Badge>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <div className=\"flex gap-2\">\r\n                          <Button \r\n                            size=\"sm\" \r\n                            onClick={() => paySalary(member)}\r\n                            disabled={member.status === 'inactive'}\r\n                          >\r\n                            Pay Salary\r\n                          </Button>\r\n                          <Dialog>\r\n                            <DialogTrigger asChild>\r\n                              <Button size=\"sm\" variant=\"outline\">\r\n                                <Gift className=\"h-4 w-4 mr-1\" />\r\n                                Bonus\r\n                              </Button>\r\n                            </DialogTrigger>\r\n                            <DialogContent>\r\n                              <DialogHeader>\r\n                                <DialogTitle>Pay Bonus to {member.name}</DialogTitle>\r\n                              </DialogHeader>\r\n                              <div className=\"space-y-4\">\r\n                                <div>\r\n                                  <label className=\"text-sm font-medium\">Bonus Amount (EGP)</label>\r\n                                  <Input\r\n                                    type=\"number\"\r\n                                    placeholder=\"0\"\r\n                                    id=\"bonus-amount\"\r\n                                  />\r\n                                </div>\r\n                                <div className=\"flex justify-end gap-2\">\r\n                                  <Button variant=\"outline\">Cancel</Button>\r\n                                  <Button onClick={() => {\r\n                                    const amount = parseFloat((document.getElementById('bonus-amount') as HTMLInputElement).value)\r\n                                    if (amount > 0) {\r\n                                      payBonus(member, amount)\r\n                                    }\r\n                                  }}>\r\n                                    Pay Bonus\r\n                                  </Button>\r\n                                </div>\r\n                              </div>\r\n                            </DialogContent>\r\n                          </Dialog>\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Manual Orders Tab */}\r\n        <TabsContent value=\"orders\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Manual Order Cost Entry</CardTitle>\r\n              <CardDescription>Log payments for custom orders and client requests</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                <div>\r\n                  <label className=\"text-sm font-medium\">Amount Paid (EGP)</label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    value={manualOrder.amount}\r\n                    onChange={(e) => setManualOrder({...manualOrder, amount: e.target.value})}\r\n                    placeholder=\"0.00\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"text-sm font-medium\">Description</label>\r\n                  <Input\r\n                    value={manualOrder.description}\r\n                    onChange={(e) => setManualOrder({...manualOrder, description: e.target.value})}\r\n                    placeholder=\"e.g., Supreme Hoodie\"\r\n                  />\r\n                </div>\r\n                <div className=\"flex items-end\">\r\n                  <Button onClick={addManualOrder} className=\"w-full\">\r\n                    <ShoppingCart className=\"h-4 w-4 mr-2\" />\r\n                    Add Order\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Manual Expenses Tab */}\r\n        <TabsContent value=\"expenses\" className=\"space-y-4\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Manual Expense/Income Entry</CardTitle>\r\n              <CardDescription>Log any custom cash activities like delivery fees, refunds, etc.</CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n                <div>\r\n                  <label className=\"text-sm font-medium\">Description</label>\r\n                  <Input\r\n                    value={manualExpense.description}\r\n                    onChange={(e) => setManualExpense({...manualExpense, description: e.target.value})}\r\n                    placeholder=\"e.g., Delivery fee\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"text-sm font-medium\">Amount (EGP)</label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    value={manualExpense.amount}\r\n                    onChange={(e) => setManualExpense({...manualExpense, amount: e.target.value})}\r\n                    placeholder=\"0.00\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"text-sm font-medium\">Category</label>\r\n                  <Select value={manualExpense.category} onValueChange={(value) => setManualExpense({...manualExpense, category: value})}>\r\n                    <SelectTrigger>\r\n                      <SelectValue placeholder=\"Select category\" />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      {categories.map((category) => (\r\n                        <SelectItem key={category} value={category}>{category}</SelectItem>\r\n                      ))}\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n                <div>\r\n                  <label className=\"text-sm font-medium\">Type</label>\r\n                  <Select value={manualExpense.transaction_type} onValueChange={(value: 'income' | 'expense') => setManualExpense({...manualExpense, transaction_type: value})}>\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      <SelectItem value=\"income\">Income</SelectItem>\r\n                      <SelectItem value=\"expense\">Expense</SelectItem>\r\n                    </SelectContent>\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-4\">\r\n                <Button onClick={addManualExpense}>\r\n                  <Receipt className=\"h-4 w-4 mr-2\" />\r\n                  Add Entry\r\n                </Button>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Analytics Tab */}\r\n        <TabsContent value=\"analytics\" className=\"space-y-4\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Monthly Profit Summary</CardTitle>\r\n                <CardDescription>Financial overview for {selectedMonth}</CardDescription>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"flex justify-between\">\r\n                    <span>Total Revenue:</span>\r\n                    <span className=\"font-semibold text-green-600\">+{monthlySummary.total_revenue.toLocaleString()} EGP</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span>Ad Spend:</span>\r\n                    <span className=\"font-semibold text-red-600\">-{monthlySummary.total_ad_spend.toLocaleString()} EGP</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span>Salaries:</span>\r\n                    <span className=\"font-semibold text-red-600\">-{monthlySummary.total_salaries.toLocaleString()} EGP</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span>Bonuses:</span>\r\n                    <span className=\"font-semibold text-red-600\">-{monthlySummary.total_bonuses.toLocaleString()} EGP</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between\">\r\n                    <span>Other Expenses:</span>\r\n                    <span className=\"font-semibold text-red-600\">-{monthlySummary.total_expenses.toLocaleString()} EGP</span>\r\n                  </div>\r\n                  <div className=\"border-t pt-2\">\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"font-semibold\">Net Profit:</span>\r\n                      <span className={`font-bold text-lg ${monthlySummary.net_profit >= 0 ? 'text-green-600' : 'text-red-600'}`}>\r\n                        {monthlySummary.net_profit >= 0 ? '+' : ''}{monthlySummary.net_profit.toLocaleString()} EGP\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Category Breakdown</CardTitle>\r\n                <CardDescription>Expenses by category</CardDescription>\r\n              </CardHeader>\r\n              <CardContent>\r\n                <div className=\"space-y-3\">\r\n                  {Object.entries(\r\n                    currentMonthEntries\r\n                      .filter(entry => entry.transaction_type === 'expense')\r\n                      .reduce((acc, entry) => {\r\n                        acc[entry.category] = (acc[entry.category] || 0) + Math.abs(entry.amount)\r\n                        return acc\r\n                      }, {} as Record<string, number>)\r\n                  ).map(([category, amount]) => (\r\n                    <div key={category} className=\"flex justify-between items-center\">\r\n                      <span>{category}</span>\r\n                      <span className=\"font-semibold text-red-600\">-{amount.toLocaleString()} EGP</span>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}