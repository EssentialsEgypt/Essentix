{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/team-members-directory.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { useState } from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Progress } from \"@/components/ui/progress\"\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\"\r\nimport {\r\n    User, Mail, Phone, Calendar, Brain, Target, Activity,\r\n    TrendingUp, TrendingDown, Clock, Star, Heart, AlertTriangle,\r\n    MessageSquare, Video, Mail as MailIcon, Settings, Crown,\r\n    Users, Award, Zap, Eye, EyeOff, Lock, Unlock, CheckCircle\r\n} from \"lucide-react\"\r\n\r\ninterface TeamMember {\r\n    id: string\r\n    name: string\r\n    role: string\r\n    status: 'active' | 'away' | 'offline' | 'focus'\r\n    avatar: string\r\n    email: string\r\n    phone: string\r\n    joinDate: Date\r\n    aiMotivationType: string\r\n    strengths: string[]\r\n    currentStressLevel: number\r\n    lastTasks: string[]\r\n    openTasks: number\r\n    completedTasks: number\r\n    campaignsInvolved: number\r\n    meetingAttendance: number\r\n    responseSpeed: number\r\n    deadlineCompliance: number\r\n    salary: number\r\n    toolCost: number\r\n    revenueImpact: number\r\n    roi: number\r\n    mood: 'positive' | 'neutral' | 'negative'\r\n    burnoutRisk: number\r\n    focusMode: boolean\r\n    lastActive: Date\r\n    timeSpent: number\r\n    skills: string[]\r\n    desiredSkills: string[]\r\n    mentorId?: string\r\n    menteeIds: string[]\r\n    permissions: string[]\r\n    motivationDrivers: string[]\r\n}\r\n\r\ninterface TeamMembersDirectoryProps {\r\n    teamMembers: TeamMember[]\r\n}\r\n\r\nexport function TeamMembersDirectory({ teamMembers }: TeamMembersDirectoryProps) {\r\n    const [selectedMember, setSelectedMember] = useState<TeamMember | null>(null)\r\n    const [viewMode, setViewMode] = useState<'grid' | 'list'>('grid')\r\n    const [filterStatus, setFilterStatus] = useState<string>('all')\r\n\r\n    const getStatusColor = (status: string) => {\r\n        switch (status) {\r\n            case 'active': return 'text-green-600 bg-green-100'\r\n            case 'away': return 'text-yellow-600 bg-yellow-100'\r\n            case 'offline': return 'text-gray-600 bg-gray-100'\r\n            case 'focus': return 'text-purple-600 bg-purple-100'\r\n            default: return 'text-gray-600 bg-gray-100'\r\n        }\r\n    }\r\n\r\n    const getMoodColor = (mood: string) => {\r\n        switch (mood) {\r\n            case 'positive': return 'text-green-600 bg-green-100'\r\n            case 'neutral': return 'text-yellow-600 bg-yellow-100'\r\n            case 'negative': return 'text-red-600 bg-red-100'\r\n            default: return 'text-gray-600 bg-gray-100'\r\n        }\r\n    }\r\n\r\n    const getBurnoutRiskColor = (risk: number) => {\r\n        if (risk < 20) return 'text-green-600 bg-green-100'\r\n        if (risk < 40) return 'text-yellow-600 bg-yellow-100'\r\n        return 'text-red-600 bg-red-100'\r\n    }\r\n\r\n    const getBurnoutRiskLevel = (risk: number) => {\r\n        if (risk < 20) return 'Low'\r\n        if (risk < 40) return 'Medium'\r\n        return 'High'\r\n    }\r\n\r\n    const filteredMembers = teamMembers.filter(member => {\r\n        if (filterStatus === 'all') return true\r\n        return member.status === filterStatus\r\n    })\r\n\r\n    const MemberProfileDialog = ({ member }: { member: TeamMember }) => (\r\n        <Dialog>\r\n            <DialogTrigger asChild>\r\n                <Button variant=\"outline\" size=\"sm\">\r\n                    <Eye className=\"h-4 w-4 mr-2\" />\r\n                    View Profile\r\n                </Button>\r\n            </DialogTrigger>\r\n            <DialogContent className=\"max-w-2xl max-h-[80vh] overflow-y-auto\">\r\n                <DialogHeader>\r\n                    <DialogTitle className=\"flex items-center space-x-3\">\r\n                        <Avatar className=\"h-12 w-12\">\r\n                            <AvatarImage src={member.avatar} />\r\n                            <AvatarFallback>{member.name.split(' ').map(n => n[0]).join('')}</AvatarFallback>\r\n                        </Avatar>\r\n                        <div>\r\n                            <h2 className=\"text-xl font-bold\">{member.name}</h2>\r\n                            <p className=\"text-gray-500\">{member.role}</p>\r\n                        </div>\r\n                    </DialogTitle>\r\n                </DialogHeader>\r\n                <div className=\"space-y-6\">\r\n                    {/* Basic Info */}\r\n                    <div className=\"grid grid-cols-2 gap-4\">\r\n                        <div className=\"space-y-2\">\r\n                            <div className=\"flex items-center space-x-2\">\r\n                                <Mail className=\"h-4 w-4 text-gray-400\" />\r\n                                <span className=\"text-sm\">{member.email}</span>\r\n                            </div>\r\n                            <div className=\"flex items-center space-x-2\">\r\n                                <Phone className=\"h-4 w-4 text-gray-400\" />\r\n                                <span className=\"text-sm\">{member.phone}</span>\r\n                            </div>\r\n                            <div className=\"flex items-center space-x-2\">\r\n                                <Calendar className=\"h-4 w-4 text-gray-400\" />\r\n                                <span className=\"text-sm\">Joined {member.joinDate.toLocaleDateString()}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"space-y-2\">\r\n                            <div className=\"flex items-center space-x-2\">\r\n                                <Brain className=\"h-4 w-4 text-blue-400\" />\r\n                                <span className=\"text-sm font-medium\">AI Motivation: {member.aiMotivationType}</span>\r\n                            </div>\r\n                            <div className=\"flex items-center space-x-2\">\r\n                                <Target className=\"h-4 w-4 text-green-400\" />\r\n                                <span className=\"text-sm font-medium\">ROI: {member.roi}x</span>\r\n                            </div>\r\n                            <div className=\"flex items-center space-x-2\">\r\n                                <Activity className=\"h-4 w-4 text-purple-400\" />\r\n                                <span className=\"text-sm font-medium\">Time Spent: {member.timeSpent}h/week</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Strengths */}\r\n                    <div>\r\n                        <h3 className=\"text-lg font-semibold mb-3\">Strengths</h3>\r\n                        <div className=\"flex flex-wrap gap-2\">\r\n                            {member.strengths.map((strength, index) => (\r\n                                <Badge key={index} variant=\"outline\" className=\"bg-green-50 text-green-700\">\r\n                                    {strength}\r\n                                </Badge>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Skills */}\r\n                    <div className=\"grid grid-cols-2 gap-4\">\r\n                        <div>\r\n                            <h3 className=\"text-lg font-semibold mb-3\">Current Skills</h3>\r\n                            <div className=\"flex flex-wrap gap-2\">\r\n                                {member.skills.map((skill, index) => (\r\n                                    <Badge key={index} variant=\"secondary\">\r\n                                        {skill}\r\n                                    </Badge>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <h3 className=\"text-lg font-semibold mb-3\">Desired Skills</h3>\r\n                            <div className=\"flex flex-wrap gap-2\">\r\n                                {member.desiredSkills.map((skill, index) => (\r\n                                    <Badge key={index} variant=\"outline\" className=\"bg-blue-50 text-blue-700\">\r\n                                        {skill}\r\n                                    </Badge>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Motivation Drivers */}\r\n                    <div>\r\n                        <h3 className=\"text-lg font-semibold mb-3\">Motivation Drivers</h3>\r\n                        <div className=\"flex flex-wrap gap-2\">\r\n                            {member.motivationDrivers.map((driver, index) => (\r\n                                <Badge key={index} variant=\"outline\" className=\"bg-purple-50 text-purple-700\">\r\n                                    {driver}\r\n                                </Badge>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Recent Tasks */}\r\n                    <div>\r\n                        <h3 className=\"text-lg font-semibold mb-3\">Recent Tasks</h3>\r\n                        <div className=\"space-y-2\">\r\n                            {member.lastTasks.map((task, index) => (\r\n                                <div key={index} className=\"flex items-center space-x-2 p-2 bg-gray-50 rounded-lg\">\r\n                                    <CheckCircle className=\"h-4 w-4 text-green-500\" />\r\n                                    <span className=\"text-sm\">{task}</span>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Performance Metrics */}\r\n                    <div>\r\n                        <h3 className=\"text-lg font-semibold mb-3\">Performance Metrics</h3>\r\n                        <div className=\"grid grid-cols-2 gap-4\">\r\n                            <div className=\"space-y-2\">\r\n                                <div className=\"flex justify-between\">\r\n                                    <span className=\"text-sm\">Response Speed</span>\r\n                                    <span className=\"text-sm font-medium\">{member.responseSpeed}%</span>\r\n                                </div>\r\n                                <Progress value={member.responseSpeed} className=\"h-2\" />\r\n                            </div>\r\n                            <div className=\"space-y-2\">\r\n                                <div className=\"flex justify-between\">\r\n                                    <span className=\"text-sm\">Deadline Compliance</span>\r\n                                    <span className=\"text-sm font-medium\">{member.deadlineCompliance}%</span>\r\n                                </div>\r\n                                <Progress value={member.deadlineCompliance} className=\"h-2\" />\r\n                            </div>\r\n                            <div className=\"space-y-2\">\r\n                                <div className=\"flex justify-between\">\r\n                                    <span className=\"text-sm\">Meeting Attendance</span>\r\n                                    <span className=\"text-sm font-medium\">{member.meetingAttendance}%</span>\r\n                                </div>\r\n                                <Progress value={member.meetingAttendance} className=\"h-2\" />\r\n                            </div>\r\n                            <div className=\"space-y-2\">\r\n                                <div className=\"flex justify-between\">\r\n                                    <span className=\"text-sm\">Stress Level</span>\r\n                                    <span className=\"text-sm font-medium\">{member.currentStressLevel}%</span>\r\n                                </div>\r\n                                <Progress value={member.currentStressLevel} className=\"h-2\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n\r\n    return (\r\n        <div className=\"space-y-4\">\r\n            {/* Header */}\r\n            <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                    <h2 className=\"text-2xl font-bold text-white\">Team Members Directory</h2>\r\n                    <p className=\"text-gray-300\">Manage and view all team members</p>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                    <Button\r\n                        variant={viewMode === 'grid' ? 'default' : 'outline'}\r\n                        size=\"sm\"\r\n                        onClick={() => setViewMode('grid')}\r\n                    >\r\n                        <div className=\"grid grid-cols-2 gap-1 h-4 w-4\">\r\n                            <div className=\"bg-current rounded-sm\" />\r\n                            <div className=\"bg-current rounded-sm\" />\r\n                            <div className=\"bg-current rounded-sm\" />\r\n                            <div className=\"bg-current rounded-sm\" />\r\n                        </div>\r\n                    </Button>\r\n                    <Button\r\n                        variant={viewMode === 'list' ? 'default' : 'outline'}\r\n                        size=\"sm\"\r\n                        onClick={() => setViewMode('list')}\r\n                    >\r\n                        <div className=\"space-y-1 h-4 w-4\">\r\n                            <div className=\"bg-current rounded-sm h-1\" />\r\n                            <div className=\"bg-current rounded-sm h-1\" />\r\n                            <div className=\"bg-current rounded-sm h-1\" />\r\n                        </div>\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Filters */}\r\n            <div className=\"flex items-center space-x-2\">\r\n                <Badge\r\n                    variant={filterStatus === 'all' ? 'default' : 'outline'}\r\n                    className=\"cursor-pointer\"\r\n                    onClick={() => setFilterStatus('all')}\r\n                >\r\n                    All ({teamMembers.length})\r\n                </Badge>\r\n                <Badge\r\n                    variant={filterStatus === 'active' ? 'default' : 'outline'}\r\n                    className=\"cursor-pointer\"\r\n                    onClick={() => setFilterStatus('active')}\r\n                >\r\n                    Active ({teamMembers.filter(m => m.status === 'active').length})\r\n                </Badge>\r\n                <Badge\r\n                    variant={filterStatus === 'focus' ? 'default' : 'outline'}\r\n                    className=\"cursor-pointer\"\r\n                    onClick={() => setFilterStatus('focus')}\r\n                >\r\n                    Focus ({teamMembers.filter(m => m.status === 'focus').length})\r\n                </Badge>\r\n                <Badge\r\n                    variant={filterStatus === 'away' ? 'default' : 'outline'}\r\n                    className=\"cursor-pointer\"\r\n                    onClick={() => setFilterStatus('away')}\r\n                >\r\n                    Away ({teamMembers.filter(m => m.status === 'away').length})\r\n                </Badge>\r\n            </div>\r\n\r\n            {/* Members Grid/List */}\r\n            {viewMode === 'grid' ? (\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                    {filteredMembers.map((member) => (\r\n                        <Card key={member.id} className=\"relative hover:shadow-lg transition-all duration-200\">\r\n                            <CardHeader className=\"pb-3\">\r\n                                <div className=\"flex items-start justify-between\">\r\n                                    <div className=\"flex items-center space-x-3\">\r\n                                        <Avatar className=\"h-12 w-12\">\r\n                                            <AvatarImage src={member.avatar} />\r\n                                            <AvatarFallback>{member.name.split(' ').map(n => n[0]).join('')}</AvatarFallback>\r\n                                        </Avatar>\r\n                                        <div>\r\n                                            <h3 className=\"font-semibold text-lg\">{member.name}</h3>\r\n                                            <p className=\"text-sm text-gray-500\">{member.role}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"flex flex-col items-end space-y-1\">\r\n                                        <Badge className={getStatusColor(member.status)}>\r\n                                            {member.status}\r\n                                        </Badge>\r\n                                        {member.focusMode && (\r\n                                            <Badge variant=\"outline\" className=\"text-purple-600 border-purple-600\">\r\n                                                <Target className=\"h-3 w-3 mr-1\" />\r\n                                                Focus\r\n                                            </Badge>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </CardHeader>\r\n                            <CardContent className=\"space-y-4\">\r\n                                {/* AI Motivation & ROI */}\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <div className=\"flex items-center space-x-2\">\r\n                                        <Brain className=\"h-4 w-4 text-blue-400\" />\r\n                                        <span className=\"text-sm font-medium\">{member.aiMotivationType}</span>\r\n                                    </div>\r\n                                    <div className=\"flex items-center space-x-2\">\r\n                                        <TrendingUp className=\"h-4 w-4 text-green-400\" />\r\n                                        <span className=\"text-sm font-medium\">{member.roi}x ROI</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Performance Metrics */}\r\n                                <div className=\"grid grid-cols-2 gap-3\">\r\n                                    <div className=\"text-center\">\r\n                                        <p className=\"text-xs text-gray-500\">Tasks</p>\r\n                                        <p className=\"text-lg font-bold text-white\">{member.completedTasks}</p>\r\n                                        <p className=\"text-xs text-gray-400\">{member.openTasks} open</p>\r\n                                    </div>\r\n                                    <div className=\"text-center\">\r\n                                        <p className=\"text-xs text-gray-500\">Campaigns</p>\r\n                                        <p className=\"text-lg font-bold text-white\">{member.campaignsInvolved}</p>\r\n                                        <p className=\"text-xs text-gray-400\">involved</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Stress Level & Mood */}\r\n                                <div className=\"space-y-2\">\r\n                                    <div className=\"flex items-center justify-between\">\r\n                                        <span className=\"text-xs text-gray-500\">Stress Level</span>\r\n                                        <span className=\"text-xs font-medium\">{member.currentStressLevel}%</span>\r\n                                    </div>\r\n                                    <Progress value={member.currentStressLevel} className=\"h-2\" />\r\n                                    <div className=\"flex items-center justify-between\">\r\n                                        <Badge className={getMoodColor(member.mood)}>\r\n                                            <Heart className=\"h-3 w-3 mr-1\" />\r\n                                            {member.mood}\r\n                                        </Badge>\r\n                                        <Badge className={getBurnoutRiskColor(member.burnoutRisk)}>\r\n                                            <AlertTriangle className=\"h-3 w-3 mr-1\" />\r\n                                            {getBurnoutRiskLevel(member.burnoutRisk)}\r\n                                        </Badge>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Recent Tasks */}\r\n                                <div>\r\n                                    <p className=\"text-xs text-gray-500 mb-2\">Recent Tasks</p>\r\n                                    <div className=\"space-y-1\">\r\n                                        {member.lastTasks.slice(0, 2).map((task, index) => (\r\n                                            <div key={index} className=\"flex items-center space-x-2\">\r\n                                                <CheckCircle className=\"h-3 w-3 text-green-500\" />\r\n                                                <span className=\"text-xs text-gray-600 truncate\">{task}</span>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Actions */}\r\n                                <div className=\"flex items-center justify-between pt-2\">\r\n                                    <MemberProfileDialog member={member} />\r\n                                    <div className=\"flex items-center space-x-1\">\r\n                                        <Button size=\"sm\" variant=\"ghost\">\r\n                                            <MessageSquare className=\"h-4 w-4\" />\r\n                                        </Button>\r\n                                        <Button size=\"sm\" variant=\"ghost\">\r\n                                            <Video className=\"h-4 w-4\" />\r\n                                        </Button>\r\n                                        <Button size=\"sm\" variant=\"ghost\">\r\n                                            <MailIcon className=\"h-4 w-4\" />\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    ))}\r\n                </div>\r\n            ) : (\r\n                <div className=\"space-y-3\">\r\n                    {filteredMembers.map((member) => (\r\n                        <Card key={member.id} className=\"relative hover:shadow-md transition-all duration-200\">\r\n                            <CardContent className=\"p-4\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <div className=\"flex items-center space-x-4\">\r\n                                        <Avatar className=\"h-10 w-10\">\r\n                                            <AvatarImage src={member.avatar} />\r\n                                            <AvatarFallback>{member.name.split(' ').map(n => n[0]).join('')}</AvatarFallback>\r\n                                        </Avatar>\r\n                                        <div>\r\n                                            <h3 className=\"font-semibold\">{member.name}</h3>\r\n                                            <p className=\"text-sm text-gray-500\">{member.role}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"flex items-center space-x-4\">\r\n                                        <div className=\"text-center\">\r\n                                            <p className=\"text-sm font-medium\">{member.completedTasks}</p>\r\n                                            <p className=\"text-xs text-gray-500\">Tasks</p>\r\n                                        </div>\r\n                                        <div className=\"text-center\">\r\n                                            <p className=\"text-sm font-medium\">{member.roi}x</p>\r\n                                            <p className=\"text-xs text-gray-500\">ROI</p>\r\n                                        </div>\r\n                                        <div className=\"text-center\">\r\n                                            <p className=\"text-sm font-medium\">{member.currentStressLevel}%</p>\r\n                                            <p className=\"text-xs text-gray-500\">Stress</p>\r\n                                        </div>\r\n                                        <div className=\"flex items-center space-x-2\">\r\n                                            <Badge className={getStatusColor(member.status)}>\r\n                                                {member.status}\r\n                                            </Badge>\r\n                                            <MemberProfileDialog member={member} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;;;;;;;;;;AAwDO,SAAS,qBAAqB,EAAE,WAAW,EAA6B;IAC3E,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAqB;IACxE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAmB;IAC1D,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAEzD,MAAM,iBAAiB,CAAC;QACpB,OAAQ;YACJ,KAAK;gBAAU,OAAO;YACtB,KAAK;gBAAQ,OAAO;YACpB,KAAK;gBAAW,OAAO;YACvB,KAAK;gBAAS,OAAO;YACrB;gBAAS,OAAO;QACpB;IACJ;IAEA,MAAM,eAAe,CAAC;QAClB,OAAQ;YACJ,KAAK;gBAAY,OAAO;YACxB,KAAK;gBAAW,OAAO;YACvB,KAAK;gBAAY,OAAO;YACxB;gBAAS,OAAO;QACpB;IACJ;IAEA,MAAM,sBAAsB,CAAC;QACzB,IAAI,OAAO,IAAI,OAAO;QACtB,IAAI,OAAO,IAAI,OAAO;QACtB,OAAO;IACX;IAEA,MAAM,sBAAsB,CAAC;QACzB,IAAI,OAAO,IAAI,OAAO;QACtB,IAAI,OAAO,IAAI,OAAO;QACtB,OAAO;IACX;IAEA,MAAM,kBAAkB,YAAY,MAAM,CAAC,CAAA;QACvC,IAAI,iBAAiB,OAAO,OAAO;QACnC,OAAO,OAAO,MAAM,KAAK;IAC7B;IAEA,MAAM,sBAAsB,CAAC,EAAE,MAAM,EAA0B,iBAC3D,8OAAC,kIAAA,CAAA,SAAM;;8BACH,8OAAC,kIAAA,CAAA,gBAAa;oBAAC,OAAO;8BAClB,cAAA,8OAAC,kIAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAU,MAAK;;0CAC3B,8OAAC,gMAAA,CAAA,MAAG;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;;;;;;8BAIxC,8OAAC,kIAAA,CAAA,gBAAa;oBAAC,WAAU;;sCACrB,8OAAC,kIAAA,CAAA,eAAY;sCACT,cAAA,8OAAC,kIAAA,CAAA,cAAW;gCAAC,WAAU;;kDACnB,8OAAC,kIAAA,CAAA,SAAM;wCAAC,WAAU;;0DACd,8OAAC,kIAAA,CAAA,cAAW;gDAAC,KAAK,OAAO,MAAM;;;;;;0DAC/B,8OAAC,kIAAA,CAAA,iBAAc;0DAAE,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAA,IAAK,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC;;;;;;;;;;;;kDAEhE,8OAAC;;0DACG,8OAAC;gDAAG,WAAU;0DAAqB,OAAO,IAAI;;;;;;0DAC9C,8OAAC;gDAAE,WAAU;0DAAiB,OAAO,IAAI;;;;;;;;;;;;;;;;;;;;;;;sCAIrD,8OAAC;4BAAI,WAAU;;8CAEX,8OAAC;oCAAI,WAAU;;sDACX,8OAAC;4CAAI,WAAU;;8DACX,8OAAC;oDAAI,WAAU;;sEACX,8OAAC,kMAAA,CAAA,OAAI;4DAAC,WAAU;;;;;;sEAChB,8OAAC;4DAAK,WAAU;sEAAW,OAAO,KAAK;;;;;;;;;;;;8DAE3C,8OAAC;oDAAI,WAAU;;sEACX,8OAAC,oMAAA,CAAA,QAAK;4DAAC,WAAU;;;;;;sEACjB,8OAAC;4DAAK,WAAU;sEAAW,OAAO,KAAK;;;;;;;;;;;;8DAE3C,8OAAC;oDAAI,WAAU;;sEACX,8OAAC,0MAAA,CAAA,WAAQ;4DAAC,WAAU;;;;;;sEACpB,8OAAC;4DAAK,WAAU;;gEAAU;gEAAQ,OAAO,QAAQ,CAAC,kBAAkB;;;;;;;;;;;;;;;;;;;sDAG5E,8OAAC;4CAAI,WAAU;;8DACX,8OAAC;oDAAI,WAAU;;sEACX,8OAAC,oMAAA,CAAA,QAAK;4DAAC,WAAU;;;;;;sEACjB,8OAAC;4DAAK,WAAU;;gEAAsB;gEAAgB,OAAO,gBAAgB;;;;;;;;;;;;;8DAEjF,8OAAC;oDAAI,WAAU;;sEACX,8OAAC,sMAAA,CAAA,SAAM;4DAAC,WAAU;;;;;;sEAClB,8OAAC;4DAAK,WAAU;;gEAAsB;gEAAM,OAAO,GAAG;gEAAC;;;;;;;;;;;;;8DAE3D,8OAAC;oDAAI,WAAU;;sEACX,8OAAC,0MAAA,CAAA,WAAQ;4DAAC,WAAU;;;;;;sEACpB,8OAAC;4DAAK,WAAU;;gEAAsB;gEAAa,OAAO,SAAS;gEAAC;;;;;;;;;;;;;;;;;;;;;;;;;8CAMhF,8OAAC;;sDACG,8OAAC;4CAAG,WAAU;sDAA6B;;;;;;sDAC3C,8OAAC;4CAAI,WAAU;sDACV,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC,UAAU,sBAC7B,8OAAC,iIAAA,CAAA,QAAK;oDAAa,SAAQ;oDAAU,WAAU;8DAC1C;mDADO;;;;;;;;;;;;;;;;8CAQxB,8OAAC;oCAAI,WAAU;;sDACX,8OAAC;;8DACG,8OAAC;oDAAG,WAAU;8DAA6B;;;;;;8DAC3C,8OAAC;oDAAI,WAAU;8DACV,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,sBACvB,8OAAC,iIAAA,CAAA,QAAK;4DAAa,SAAQ;sEACtB;2DADO;;;;;;;;;;;;;;;;sDAMxB,8OAAC;;8DACG,8OAAC;oDAAG,WAAU;8DAA6B;;;;;;8DAC3C,8OAAC;oDAAI,WAAU;8DACV,OAAO,aAAa,CAAC,GAAG,CAAC,CAAC,OAAO,sBAC9B,8OAAC,iIAAA,CAAA,QAAK;4DAAa,SAAQ;4DAAU,WAAU;sEAC1C;2DADO;;;;;;;;;;;;;;;;;;;;;;8CAS5B,8OAAC;;sDACG,8OAAC;4CAAG,WAAU;sDAA6B;;;;;;sDAC3C,8OAAC;4CAAI,WAAU;sDACV,OAAO,iBAAiB,CAAC,GAAG,CAAC,CAAC,QAAQ,sBACnC,8OAAC,iIAAA,CAAA,QAAK;oDAAa,SAAQ;oDAAU,WAAU;8DAC1C;mDADO;;;;;;;;;;;;;;;;8CAQxB,8OAAC;;sDACG,8OAAC;4CAAG,WAAU;sDAA6B;;;;;;sDAC3C,8OAAC;4CAAI,WAAU;sDACV,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC,MAAM,sBACzB,8OAAC;oDAAgB,WAAU;;sEACvB,8OAAC,2NAAA,CAAA,cAAW;4DAAC,WAAU;;;;;;sEACvB,8OAAC;4DAAK,WAAU;sEAAW;;;;;;;mDAFrB;;;;;;;;;;;;;;;;8CAStB,8OAAC;;sDACG,8OAAC;4CAAG,WAAU;sDAA6B;;;;;;sDAC3C,8OAAC;4CAAI,WAAU;;8DACX,8OAAC;oDAAI,WAAU;;sEACX,8OAAC;4DAAI,WAAU;;8EACX,8OAAC;oEAAK,WAAU;8EAAU;;;;;;8EAC1B,8OAAC;oEAAK,WAAU;;wEAAuB,OAAO,aAAa;wEAAC;;;;;;;;;;;;;sEAEhE,8OAAC,oIAAA,CAAA,WAAQ;4DAAC,OAAO,OAAO,aAAa;4DAAE,WAAU;;;;;;;;;;;;8DAErD,8OAAC;oDAAI,WAAU;;sEACX,8OAAC;4DAAI,WAAU;;8EACX,8OAAC;oEAAK,WAAU;8EAAU;;;;;;8EAC1B,8OAAC;oEAAK,WAAU;;wEAAuB,OAAO,kBAAkB;wEAAC;;;;;;;;;;;;;sEAErE,8OAAC,oIAAA,CAAA,WAAQ;4DAAC,OAAO,OAAO,kBAAkB;4DAAE,WAAU;;;;;;;;;;;;8DAE1D,8OAAC;oDAAI,WAAU;;sEACX,8OAAC;4DAAI,WAAU;;8EACX,8OAAC;oEAAK,WAAU;8EAAU;;;;;;8EAC1B,8OAAC;oEAAK,WAAU;;wEAAuB,OAAO,iBAAiB;wEAAC;;;;;;;;;;;;;sEAEpE,8OAAC,oIAAA,CAAA,WAAQ;4DAAC,OAAO,OAAO,iBAAiB;4DAAE,WAAU;;;;;;;;;;;;8DAEzD,8OAAC;oDAAI,WAAU;;sEACX,8OAAC;4DAAI,WAAU;;8EACX,8OAAC;oEAAK,WAAU;8EAAU;;;;;;8EAC1B,8OAAC;oEAAK,WAAU;;wEAAuB,OAAO,kBAAkB;wEAAC;;;;;;;;;;;;;sEAErE,8OAAC,oIAAA,CAAA,WAAQ;4DAAC,OAAO,OAAO,kBAAkB;4DAAE,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IASlF,qBACI,8OAAC;QAAI,WAAU;;0BAEX,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;;0CACG,8OAAC;gCAAG,WAAU;0CAAgC;;;;;;0CAC9C,8OAAC;gCAAE,WAAU;0CAAgB;;;;;;;;;;;;kCAEjC,8OAAC;wBAAI,WAAU;;0CACX,8OAAC,kIAAA,CAAA,SAAM;gCACH,SAAS,aAAa,SAAS,YAAY;gCAC3C,MAAK;gCACL,SAAS,IAAM,YAAY;0CAE3B,cAAA,8OAAC;oCAAI,WAAU;;sDACX,8OAAC;4CAAI,WAAU;;;;;;sDACf,8OAAC;4CAAI,WAAU;;;;;;sDACf,8OAAC;4CAAI,WAAU;;;;;;sDACf,8OAAC;4CAAI,WAAU;;;;;;;;;;;;;;;;;0CAGvB,8OAAC,kIAAA,CAAA,SAAM;gCACH,SAAS,aAAa,SAAS,YAAY;gCAC3C,MAAK;gCACL,SAAS,IAAM,YAAY;0CAE3B,cAAA,8OAAC;oCAAI,WAAU;;sDACX,8OAAC;4CAAI,WAAU;;;;;;sDACf,8OAAC;4CAAI,WAAU;;;;;;sDACf,8OAAC;4CAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAO/B,8OAAC;gBAAI,WAAU;;kCACX,8OAAC,iIAAA,CAAA,QAAK;wBACF,SAAS,iBAAiB,QAAQ,YAAY;wBAC9C,WAAU;wBACV,SAAS,IAAM,gBAAgB;;4BAClC;4BACS,YAAY,MAAM;4BAAC;;;;;;;kCAE7B,8OAAC,iIAAA,CAAA,QAAK;wBACF,SAAS,iBAAiB,WAAW,YAAY;wBACjD,WAAU;wBACV,SAAS,IAAM,gBAAgB;;4BAClC;4BACY,YAAY,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,UAAU,MAAM;4BAAC;;;;;;;kCAEnE,8OAAC,iIAAA,CAAA,QAAK;wBACF,SAAS,iBAAiB,UAAU,YAAY;wBAChD,WAAU;wBACV,SAAS,IAAM,gBAAgB;;4BAClC;4BACW,YAAY,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,SAAS,MAAM;4BAAC;;;;;;;kCAEjE,8OAAC,iIAAA,CAAA,QAAK;wBACF,SAAS,iBAAiB,SAAS,YAAY;wBAC/C,WAAU;wBACV,SAAS,IAAM,gBAAgB;;4BAClC;4BACU,YAAY,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,QAAQ,MAAM;4BAAC;;;;;;;;;;;;;YAKlE,aAAa,uBACV,8OAAC;gBAAI,WAAU;0BACV,gBAAgB,GAAG,CAAC,CAAC,uBAClB,8OAAC,gIAAA,CAAA,OAAI;wBAAiB,WAAU;;0CAC5B,8OAAC,gIAAA,CAAA,aAAU;gCAAC,WAAU;0CAClB,cAAA,8OAAC;oCAAI,WAAU;;sDACX,8OAAC;4CAAI,WAAU;;8DACX,8OAAC,kIAAA,CAAA,SAAM;oDAAC,WAAU;;sEACd,8OAAC,kIAAA,CAAA,cAAW;4DAAC,KAAK,OAAO,MAAM;;;;;;sEAC/B,8OAAC,kIAAA,CAAA,iBAAc;sEAAE,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAA,IAAK,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC;;;;;;;;;;;;8DAEhE,8OAAC;;sEACG,8OAAC;4DAAG,WAAU;sEAAyB,OAAO,IAAI;;;;;;sEAClD,8OAAC;4DAAE,WAAU;sEAAyB,OAAO,IAAI;;;;;;;;;;;;;;;;;;sDAGzD,8OAAC;4CAAI,WAAU;;8DACX,8OAAC,iIAAA,CAAA,QAAK;oDAAC,WAAW,eAAe,OAAO,MAAM;8DACzC,OAAO,MAAM;;;;;;gDAEjB,OAAO,SAAS,kBACb,8OAAC,iIAAA,CAAA,QAAK;oDAAC,SAAQ;oDAAU,WAAU;;sEAC/B,8OAAC,sMAAA,CAAA,SAAM;4DAAC,WAAU;;;;;;wDAAiB;;;;;;;;;;;;;;;;;;;;;;;;0CAOvD,8OAAC,gIAAA,CAAA,cAAW;gCAAC,WAAU;;kDAEnB,8OAAC;wCAAI,WAAU;;0DACX,8OAAC;gDAAI,WAAU;;kEACX,8OAAC,oMAAA,CAAA,QAAK;wDAAC,WAAU;;;;;;kEACjB,8OAAC;wDAAK,WAAU;kEAAuB,OAAO,gBAAgB;;;;;;;;;;;;0DAElE,8OAAC;gDAAI,WAAU;;kEACX,8OAAC,kNAAA,CAAA,aAAU;wDAAC,WAAU;;;;;;kEACtB,8OAAC;wDAAK,WAAU;;4DAAuB,OAAO,GAAG;4DAAC;;;;;;;;;;;;;;;;;;;kDAK1D,8OAAC;wCAAI,WAAU;;0DACX,8OAAC;gDAAI,WAAU;;kEACX,8OAAC;wDAAE,WAAU;kEAAwB;;;;;;kEACrC,8OAAC;wDAAE,WAAU;kEAAgC,OAAO,cAAc;;;;;;kEAClE,8OAAC;wDAAE,WAAU;;4DAAyB,OAAO,SAAS;4DAAC;;;;;;;;;;;;;0DAE3D,8OAAC;gDAAI,WAAU;;kEACX,8OAAC;wDAAE,WAAU;kEAAwB;;;;;;kEACrC,8OAAC;wDAAE,WAAU;kEAAgC,OAAO,iBAAiB;;;;;;kEACrE,8OAAC;wDAAE,WAAU;kEAAwB;;;;;;;;;;;;;;;;;;kDAK7C,8OAAC;wCAAI,WAAU;;0DACX,8OAAC;gDAAI,WAAU;;kEACX,8OAAC;wDAAK,WAAU;kEAAwB;;;;;;kEACxC,8OAAC;wDAAK,WAAU;;4DAAuB,OAAO,kBAAkB;4DAAC;;;;;;;;;;;;;0DAErE,8OAAC,oIAAA,CAAA,WAAQ;gDAAC,OAAO,OAAO,kBAAkB;gDAAE,WAAU;;;;;;0DACtD,8OAAC;gDAAI,WAAU;;kEACX,8OAAC,iIAAA,CAAA,QAAK;wDAAC,WAAW,aAAa,OAAO,IAAI;;0EACtC,8OAAC,oMAAA,CAAA,QAAK;gEAAC,WAAU;;;;;;4DAChB,OAAO,IAAI;;;;;;;kEAEhB,8OAAC,iIAAA,CAAA,QAAK;wDAAC,WAAW,oBAAoB,OAAO,WAAW;;0EACpD,8OAAC,wNAAA,CAAA,gBAAa;gEAAC,WAAU;;;;;;4DACxB,oBAAoB,OAAO,WAAW;;;;;;;;;;;;;;;;;;;kDAMnD,8OAAC;;0DACG,8OAAC;gDAAE,WAAU;0DAA6B;;;;;;0DAC1C,8OAAC;gDAAI,WAAU;0DACV,OAAO,SAAS,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,MAAM,sBACrC,8OAAC;wDAAgB,WAAU;;0EACvB,8OAAC,2NAAA,CAAA,cAAW;gEAAC,WAAU;;;;;;0EACvB,8OAAC;gEAAK,WAAU;0EAAkC;;;;;;;uDAF5C;;;;;;;;;;;;;;;;kDAStB,8OAAC;wCAAI,WAAU;;0DACX,8OAAC;gDAAoB,QAAQ;;;;;;0DAC7B,8OAAC;gDAAI,WAAU;;kEACX,8OAAC,kIAAA,CAAA,SAAM;wDAAC,MAAK;wDAAK,SAAQ;kEACtB,cAAA,8OAAC,wNAAA,CAAA,gBAAa;4DAAC,WAAU;;;;;;;;;;;kEAE7B,8OAAC,kIAAA,CAAA,SAAM;wDAAC,MAAK;wDAAK,SAAQ;kEACtB,cAAA,8OAAC,oMAAA,CAAA,QAAK;4DAAC,WAAU;;;;;;;;;;;kEAErB,8OAAC,kIAAA,CAAA,SAAM;wDAAC,MAAK;wDAAK,SAAQ;kEACtB,cAAA,8OAAC,kMAAA,CAAA,OAAQ;4DAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAhG7B,OAAO,EAAE;;;;;;;;;qCAyG5B,8OAAC;gBAAI,WAAU;0BACV,gBAAgB,GAAG,CAAC,CAAC,uBAClB,8OAAC,gIAAA,CAAA,OAAI;wBAAiB,WAAU;kCAC5B,cAAA,8OAAC,gIAAA,CAAA,cAAW;4BAAC,WAAU;sCACnB,cAAA,8OAAC;gCAAI,WAAU;;kDACX,8OAAC;wCAAI,WAAU;;0DACX,8OAAC,kIAAA,CAAA,SAAM;gDAAC,WAAU;;kEACd,8OAAC,kIAAA,CAAA,cAAW;wDAAC,KAAK,OAAO,MAAM;;;;;;kEAC/B,8OAAC,kIAAA,CAAA,iBAAc;kEAAE,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAA,IAAK,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC;;;;;;;;;;;;0DAEhE,8OAAC;;kEACG,8OAAC;wDAAG,WAAU;kEAAiB,OAAO,IAAI;;;;;;kEAC1C,8OAAC;wDAAE,WAAU;kEAAyB,OAAO,IAAI;;;;;;;;;;;;;;;;;;kDAGzD,8OAAC;wCAAI,WAAU;;0DACX,8OAAC;gDAAI,WAAU;;kEACX,8OAAC;wDAAE,WAAU;kEAAuB,OAAO,cAAc;;;;;;kEACzD,8OAAC;wDAAE,WAAU;kEAAwB;;;;;;;;;;;;0DAEzC,8OAAC;gDAAI,WAAU;;kEACX,8OAAC;wDAAE,WAAU;;4DAAuB,OAAO,GAAG;4DAAC;;;;;;;kEAC/C,8OAAC;wDAAE,WAAU;kEAAwB;;;;;;;;;;;;0DAEzC,8OAAC;gDAAI,WAAU;;kEACX,8OAAC;wDAAE,WAAU;;4DAAuB,OAAO,kBAAkB;4DAAC;;;;;;;kEAC9D,8OAAC;wDAAE,WAAU;kEAAwB;;;;;;;;;;;;0DAEzC,8OAAC;gDAAI,WAAU;;kEACX,8OAAC,iIAAA,CAAA,QAAK;wDAAC,WAAW,eAAe,OAAO,MAAM;kEACzC,OAAO,MAAM;;;;;;kEAElB,8OAAC;wDAAoB,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBA9BtC,OAAO,EAAE;;;;;;;;;;;;;;;;AAyC5C","debugId":null}},
    {"offset": {"line": 1653, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/performance-tracker.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { useState } from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Progress } from \"@/components/ui/progress\"\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\r\nimport {\r\n    TrendingUp, TrendingDown, Target, Clock, CheckCircle, XCircle,\r\n    Users, Calendar, Zap, Award, Star, Activity, BarChart3,\r\n    Brain, AlertTriangle, RefreshCw, Eye, Download, Filter, Mail\r\n} from \"lucide-react\"\r\nimport {\r\n    LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid,\r\n    Tooltip, ResponsiveContainer, PieChart, Pie, Cell\r\n} from \"recharts\"\r\n\r\ninterface TeamMember {\r\n    id: string\r\n    name: string\r\n    role: string\r\n    status: 'active' | 'away' | 'offline' | 'focus'\r\n    avatar: string\r\n    email: string\r\n    phone: string\r\n    joinDate: Date\r\n    aiMotivationType: string\r\n    strengths: string[]\r\n    currentStressLevel: number\r\n    lastTasks: string[]\r\n    openTasks: number\r\n    completedTasks: number\r\n    campaignsInvolved: number\r\n    meetingAttendance: number\r\n    responseSpeed: number\r\n    deadlineCompliance: number\r\n    salary: number\r\n    toolCost: number\r\n    revenueImpact: number\r\n    roi: number\r\n    mood: 'positive' | 'neutral' | 'negative'\r\n    burnoutRisk: number\r\n    focusMode: boolean\r\n    lastActive: Date\r\n    timeSpent: number\r\n    skills: string[]\r\n    desiredSkills: string[]\r\n    mentorId?: string\r\n    menteeIds: string[]\r\n    permissions: string[]\r\n    motivationDrivers: string[]\r\n}\r\n\r\ninterface PerformanceTrackerProps {\r\n    teamMembers: TeamMember[]\r\n}\r\n\r\ninterface WeeklySummary {\r\n    memberId: string\r\n    memberName: string\r\n    summary: string\r\n    highlights: string[]\r\n    concerns: string[]\r\n    recommendations: string[]\r\n    week: string\r\n}\r\n\r\nexport function PerformanceTracker({ teamMembers }: PerformanceTrackerProps) {\r\n    const [selectedMember, setSelectedMember] = useState<string | null>(null)\r\n    const [timeRange, setTimeRange] = useState<'week' | 'month' | 'quarter'>('week')\r\n    const [viewMode, setViewMode] = useState<'cards' | 'charts' | 'summary'>('cards')\r\n\r\n    // Mock weekly summaries\r\n    const weeklySummaries: WeeklySummary[] = [\r\n        {\r\n            memberId: '1',\r\n            memberName: 'Ahmed Hassan',\r\n            summary: 'Ahmed maintained excellent performance with 95% task completion rate and 98% deadline compliance. His ROI of 5.6x continues to be the highest in the team.',\r\n            highlights: ['Completed 15 tasks this week', 'Achieved 98% deadline compliance', 'Generated 5.6x ROI'],\r\n            concerns: ['Slight increase in stress level (25%)', 'Could improve meeting attendance'],\r\n            recommendations: ['Consider reducing workload to maintain stress levels', 'Schedule more focused work sessions'],\r\n            week: 'Week 12, 2024'\r\n        },\r\n        {\r\n            memberId: '2',\r\n            memberName: 'Nada El-Sayed',\r\n            summary: 'Nada showed strong creative output with 8 campaigns involved. Her focus mode usage increased productivity by 40%.',\r\n            highlights: ['Involved in 8 campaigns', 'Used focus mode 6 times', 'Improved content quality'],\r\n            concerns: ['Stress level at 35% (moderate)', 'Meeting attendance dropped to 88%'],\r\n            recommendations: ['Encourage more breaks during focus sessions', 'Consider flexible meeting schedule'],\r\n            week: 'Week 12, 2024'\r\n        },\r\n        {\r\n            memberId: '3',\r\n            memberName: 'Omar Khalil',\r\n            summary: 'Omar demonstrated exceptional data analysis skills with 99% deadline compliance and 96% response speed. His 6.2x ROI is outstanding.',\r\n            highlights: ['99% deadline compliance', '96% response speed', '6.2x ROI (highest)'],\r\n            concerns: ['Working longer hours (45h/week)', 'Low stress but high workload'],\r\n            recommendations: ['Monitor workload to prevent burnout', 'Consider automation opportunities'],\r\n            week: 'Week 12, 2024'\r\n        },\r\n        {\r\n            memberId: '4',\r\n            memberName: 'Farouk Ali',\r\n            summary: 'Farouk missed 2 meetings and shows signs of stress with 40% burnout risk. His performance needs attention.',\r\n            highlights: ['Completed 67 tasks total', 'Involved in 6 campaigns', 'Quick learning ability'],\r\n            concerns: ['40% burnout risk (high)', 'Missed 2 meetings', 'Stress level at 45%'],\r\n            recommendations: ['Immediate workload reduction needed', 'Schedule regular check-ins', 'Consider mentorship support'],\r\n            week: 'Week 12, 2024'\r\n        }\r\n    ]\r\n\r\n    const getPerformanceColor = (value: number) => {\r\n        if (value >= 90) return 'text-green-600 bg-green-100'\r\n        if (value >= 75) return 'text-yellow-600 bg-yellow-100'\r\n        return 'text-red-600 bg-red-100'\r\n    }\r\n\r\n    const getPerformanceLevel = (value: number) => {\r\n        if (value >= 90) return 'Excellent'\r\n        if (value >= 75) return 'Good'\r\n        if (value >= 60) return 'Fair'\r\n        return 'Needs Improvement'\r\n    }\r\n\r\n    const chartData = teamMembers.map(member => ({\r\n        name: member.name,\r\n        tasks: member.completedTasks,\r\n        campaigns: member.campaignsInvolved,\r\n        attendance: member.meetingAttendance,\r\n        response: member.responseSpeed,\r\n        compliance: member.deadlineCompliance,\r\n        roi: member.roi,\r\n        stress: member.currentStressLevel\r\n    }))\r\n\r\n    const performanceData = [\r\n        { metric: 'Task Completion', average: teamMembers.reduce((sum, m) => sum + m.completedTasks, 0) / teamMembers.length },\r\n        { metric: 'Campaign Involvement', average: teamMembers.reduce((sum, m) => sum + m.campaignsInvolved, 0) / teamMembers.length },\r\n        { metric: 'Meeting Attendance', average: teamMembers.reduce((sum, m) => sum + m.meetingAttendance, 0) / teamMembers.length },\r\n        { metric: 'Response Speed', average: teamMembers.reduce((sum, m) => sum + m.responseSpeed, 0) / teamMembers.length },\r\n        { metric: 'Deadline Compliance', average: teamMembers.reduce((sum, m) => sum + m.deadlineCompliance, 0) / teamMembers.length },\r\n        { metric: 'ROI', average: teamMembers.reduce((sum, m) => sum + m.roi, 0) / teamMembers.length }\r\n    ]\r\n\r\n    return (\r\n        <div className=\"space-y-4\">\r\n            {/* Header */}\r\n            <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                    <h2 className=\"text-2xl font-bold text-white\">Performance Tracker</h2>\r\n                    <p className=\"text-gray-300\">Track individual and team performance metrics</p>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                    <Button\r\n                        variant={viewMode === 'cards' ? 'default' : 'outline'}\r\n                        size=\"sm\"\r\n                        onClick={() => setViewMode('cards')}\r\n                    >\r\n                        <BarChart3 className=\"h-4 w-4 mr-2\" />\r\n                        Cards\r\n                    </Button>\r\n                    <Button\r\n                        variant={viewMode === 'charts' ? 'default' : 'outline'}\r\n                        size=\"sm\"\r\n                        onClick={() => setViewMode('charts')}\r\n                    >\r\n                        <TrendingUp className=\"h-4 w-4 mr-2\" />\r\n                        Charts\r\n                    </Button>\r\n                    <Button\r\n                        variant={viewMode === 'summary' ? 'default' : 'outline'}\r\n                        size=\"sm\"\r\n                        onClick={() => setViewMode('summary')}\r\n                    >\r\n                        <Brain className=\"h-4 w-4 mr-2\" />\r\n                        AI Summary\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Time Range Filter */}\r\n            <div className=\"flex items-center space-x-2\">\r\n                <Badge\r\n                    variant={timeRange === 'week' ? 'default' : 'outline'}\r\n                    className=\"cursor-pointer\"\r\n                    onClick={() => setTimeRange('week')}\r\n                >\r\n                    Week\r\n                </Badge>\r\n                <Badge\r\n                    variant={timeRange === 'month' ? 'default' : 'outline'}\r\n                    className=\"cursor-pointer\"\r\n                    onClick={() => setTimeRange('month')}\r\n                >\r\n                    Month\r\n                </Badge>\r\n                <Badge\r\n                    variant={timeRange === 'quarter' ? 'default' : 'outline'}\r\n                    className=\"cursor-pointer\"\r\n                    onClick={() => setTimeRange('quarter')}\r\n                >\r\n                    Quarter\r\n                </Badge>\r\n            </div>\r\n\r\n            {/* Content */}\r\n            {viewMode === 'cards' && (\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                    {teamMembers.map((member) => (\r\n                        <Card key={member.id} className=\"relative hover:shadow-lg transition-all duration-200\">\r\n                            <CardHeader className=\"pb-3\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <div className=\"flex items-center space-x-3\">\r\n                                        <Avatar className=\"h-10 w-10\">\r\n                                            <AvatarImage src={member.avatar} />\r\n                                            <AvatarFallback>{member.name.split(' ').map(n => n[0]).join('')}</AvatarFallback>\r\n                                        </Avatar>\r\n                                        <div>\r\n                                            <h3 className=\"font-semibold\">{member.name}</h3>\r\n                                            <p className=\"text-sm text-gray-500\">{member.role}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Badge className={getPerformanceColor(member.deadlineCompliance)}>\r\n                                        {getPerformanceLevel(member.deadlineCompliance)}\r\n                                    </Badge>\r\n                                </div>\r\n                            </CardHeader>\r\n                            <CardContent className=\"space-y-4\">\r\n                                {/* Key Metrics */}\r\n                                <div className=\"grid grid-cols-2 gap-4\">\r\n                                    <div className=\"text-center\">\r\n                                        <p className=\"text-xs text-gray-500\">Completed Tasks</p>\r\n                                        <p className=\"text-lg font-bold text-white\">{member.completedTasks}</p>\r\n                                        <p className=\"text-xs text-gray-400\">{member.openTasks} open</p>\r\n                                    </div>\r\n                                    <div className=\"text-center\">\r\n                                        <p className=\"text-xs text-gray-500\">Campaigns</p>\r\n                                        <p className=\"text-lg font-bold text-white\">{member.campaignsInvolved}</p>\r\n                                        <p className=\"text-xs text-gray-400\">involved</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Performance Bars */}\r\n                                <div className=\"space-y-3\">\r\n                                    <div>\r\n                                        <div className=\"flex justify-between mb-1\">\r\n                                            <span className=\"text-xs text-gray-500\">Meeting Attendance</span>\r\n                                            <span className=\"text-xs font-medium\">{member.meetingAttendance}%</span>\r\n                                        </div>\r\n                                        <Progress value={member.meetingAttendance} className=\"h-2\" />\r\n                                    </div>\r\n                                    <div>\r\n                                        <div className=\"flex justify-between mb-1\">\r\n                                            <span className=\"text-xs text-gray-500\">Response Speed</span>\r\n                                            <span className=\"text-xs font-medium\">{member.responseSpeed}%</span>\r\n                                        </div>\r\n                                        <Progress value={member.responseSpeed} className=\"h-2\" />\r\n                                    </div>\r\n                                    <div>\r\n                                        <div className=\"flex justify-between mb-1\">\r\n                                            <span className=\"text-xs text-gray-500\">Deadline Compliance</span>\r\n                                            <span className=\"text-xs font-medium\">{member.deadlineCompliance}%</span>\r\n                                        </div>\r\n                                        <Progress value={member.deadlineCompliance} className=\"h-2\" />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* ROI & Stress */}\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <div className=\"text-center\">\r\n                                        <p className=\"text-xs text-gray-500\">ROI</p>\r\n                                        <p className=\"text-lg font-bold text-green-500\">{member.roi}x</p>\r\n                                    </div>\r\n                                    <div className=\"text-center\">\r\n                                        <p className=\"text-xs text-gray-500\">Stress Level</p>\r\n                                        <p className=\"text-lg font-bold text-red-500\">{member.currentStressLevel}%</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Actions */}\r\n                                <div className=\"flex items-center justify-between pt-2\">\r\n                                    <Button size=\"sm\" variant=\"outline\">\r\n                                        <Eye className=\"h-4 w-4 mr-2\" />\r\n                                        Details\r\n                                    </Button>\r\n                                    <Button size=\"sm\" variant=\"outline\">\r\n                                        <Download className=\"h-4 w-4 mr-2\" />\r\n                                        Export\r\n                                    </Button>\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n            {viewMode === 'charts' && (\r\n                <div className=\"space-y-6\">\r\n                    {/* Performance Comparison Chart */}\r\n                    <Card>\r\n                        <CardHeader>\r\n                            <CardTitle className=\"flex items-center space-x-2\">\r\n                                <BarChart3 className=\"h-5 w-5\" />\r\n                                <span>Performance Comparison</span>\r\n                            </CardTitle>\r\n                        </CardHeader>\r\n                        <CardContent>\r\n                            <ResponsiveContainer width=\"100%\" height={300}>\r\n                                <BarChart data={chartData}>\r\n                                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                    <XAxis dataKey=\"name\" />\r\n                                    <YAxis />\r\n                                    <Tooltip />\r\n                                    <Bar dataKey=\"attendance\" fill=\"#3b82f6\" name=\"Attendance %\" />\r\n                                    <Bar dataKey=\"response\" fill=\"#10b981\" name=\"Response %\" />\r\n                                    <Bar dataKey=\"compliance\" fill=\"#f59e0b\" name=\"Compliance %\" />\r\n                                </BarChart>\r\n                            </ResponsiveContainer>\r\n                        </CardContent>\r\n                    </Card>\r\n\r\n                    {/* ROI vs Stress Scatter */}\r\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n                        <Card>\r\n                            <CardHeader>\r\n                                <CardTitle className=\"flex items-center space-x-2\">\r\n                                    <TrendingUp className=\"h-5 w-5\" />\r\n                                    <span>ROI by Member</span>\r\n                                </CardTitle>\r\n                            </CardHeader>\r\n                            <CardContent>\r\n                                <ResponsiveContainer width=\"100%\" height={250}>\r\n                                    <BarChart data={chartData}>\r\n                                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                        <XAxis dataKey=\"name\" />\r\n                                        <YAxis />\r\n                                        <Tooltip />\r\n                                        <Bar dataKey=\"roi\" fill=\"#8b5cf6\" />\r\n                                    </BarChart>\r\n                                </ResponsiveContainer>\r\n                            </CardContent>\r\n                        </Card>\r\n\r\n                        <Card>\r\n                            <CardHeader>\r\n                                <CardTitle className=\"flex items-center space-x-2\">\r\n                                    <AlertTriangle className=\"h-5 w-5\" />\r\n                                    <span>Stress Levels</span>\r\n                                </CardTitle>\r\n                            </CardHeader>\r\n                            <CardContent>\r\n                                <ResponsiveContainer width=\"100%\" height={250}>\r\n                                    <BarChart data={chartData}>\r\n                                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                        <XAxis dataKey=\"name\" />\r\n                                        <YAxis />\r\n                                        <Tooltip />\r\n                                        <Bar dataKey=\"stress\" fill=\"#ef4444\" />\r\n                                    </BarChart>\r\n                                </ResponsiveContainer>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {viewMode === 'summary' && (\r\n                <div className=\"space-y-4\">\r\n                    {/* AI Weekly Summaries */}\r\n                    {weeklySummaries.map((summary) => (\r\n                        <Card key={summary.memberId} className=\"relative\">\r\n                            <CardHeader>\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <div className=\"flex items-center space-x-3\">\r\n                                        <Avatar className=\"h-10 w-10\">\r\n                                            <AvatarImage src={teamMembers.find(m => m.id === summary.memberId)?.avatar} />\r\n                                            <AvatarFallback>{summary.memberName.split(' ').map(n => n[0]).join('')}</AvatarFallback>\r\n                                        </Avatar>\r\n                                        <div>\r\n                                            <h3 className=\"font-semibold\">{summary.memberName}</h3>\r\n                                            <p className=\"text-sm text-gray-500\">{summary.week}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Badge variant=\"outline\" className=\"bg-blue-50 text-blue-700\">\r\n                                        <Brain className=\"h-3 w-3 mr-1\" />\r\n                                        AI Generated\r\n                                    </Badge>\r\n                                </div>\r\n                            </CardHeader>\r\n                            <CardContent className=\"space-y-4\">\r\n                                {/* Summary */}\r\n                                <div className=\"p-4 bg-gradient-to-r from-blue-50 to-purple-50 rounded-lg border border-blue-200\">\r\n                                    <p className=\"text-sm text-gray-700\">{summary.summary}</p>\r\n                                </div>\r\n\r\n                                {/* Highlights */}\r\n                                <div>\r\n                                    <h4 className=\"text-sm font-semibold mb-2 flex items-center\">\r\n                                        <Star className=\"h-4 w-4 mr-2 text-yellow-500\" />\r\n                                        Highlights\r\n                                    </h4>\r\n                                    <div className=\"space-y-1\">\r\n                                        {summary.highlights.map((highlight, index) => (\r\n                                            <div key={index} className=\"flex items-center space-x-2\">\r\n                                                <CheckCircle className=\"h-3 w-3 text-green-500\" />\r\n                                                <span className=\"text-sm text-gray-600\">{highlight}</span>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Concerns */}\r\n                                {summary.concerns.length > 0 && (\r\n                                    <div>\r\n                                        <h4 className=\"text-sm font-semibold mb-2 flex items-center\">\r\n                                            <AlertTriangle className=\"h-4 w-4 mr-2 text-orange-500\" />\r\n                                            Concerns\r\n                                        </h4>\r\n                                        <div className=\"space-y-1\">\r\n                                            {summary.concerns.map((concern, index) => (\r\n                                                <div key={index} className=\"flex items-center space-x-2\">\r\n                                                    <XCircle className=\"h-3 w-3 text-red-500\" />\r\n                                                    <span className=\"text-sm text-gray-600\">{concern}</span>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n\r\n                                {/* Recommendations */}\r\n                                <div>\r\n                                    <h4 className=\"text-sm font-semibold mb-2 flex items-center\">\r\n                                        <Zap className=\"h-4 w-4 mr-2 text-blue-500\" />\r\n                                        AI Recommendations\r\n                                    </h4>\r\n                                    <div className=\"space-y-1\">\r\n                                        {summary.recommendations.map((rec, index) => (\r\n                                            <div key={index} className=\"flex items-center space-x-2\">\r\n                                                <Target className=\"h-3 w-3 text-blue-500\" />\r\n                                                <span className=\"text-sm text-gray-600\">{rec}</span>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Actions */}\r\n                                <div className=\"flex items-center space-x-2 pt-2\">\r\n                                    <Button size=\"sm\" variant=\"outline\">\r\n                                        <RefreshCw className=\"h-4 w-4 mr-2\" />\r\n                                        Regenerate\r\n                                    </Button>\r\n                                    <Button size=\"sm\" variant=\"outline\">\r\n                                        <Download className=\"h-4 w-4 mr-2\" />\r\n                                        Export\r\n                                    </Button>\r\n                                    <Button size=\"sm\" variant=\"outline\">\r\n                                        <Mail className=\"h-4 w-4 mr-2\" />\r\n                                        Share\r\n                                    </Button>\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3086, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/reward-bonus-engine.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { useState } from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Progress } from \"@/components/ui/progress\"\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Label } from \"@/components/ui/label\"\r\nimport { Textarea } from \"@/components/ui/textarea\"\r\nimport {\r\n    Award, Gift, Star, Crown, TrendingUp, Zap, Brain, Target,\r\n    CheckCircle, XCircle, Plus, Minus, DollarSign, Calendar,\r\n    MessageSquare, Mail, Bell, Users, Trophy, Medal, Sparkles\r\n} from \"lucide-react\"\r\n\r\ninterface TeamMember {\r\n    id: string\r\n    name: string\r\n    role: string\r\n    status: 'active' | 'away' | 'offline' | 'focus'\r\n    avatar: string\r\n    email: string\r\n    phone: string\r\n    joinDate: Date\r\n    aiMotivationType: string\r\n    strengths: string[]\r\n    currentStressLevel: number\r\n    lastTasks: string[]\r\n    openTasks: number\r\n    completedTasks: number\r\n    campaignsInvolved: number\r\n    meetingAttendance: number\r\n    responseSpeed: number\r\n    deadlineCompliance: number\r\n    salary: number\r\n    toolCost: number\r\n    revenueImpact: number\r\n    roi: number\r\n    mood: 'positive' | 'neutral' | 'negative'\r\n    burnoutRisk: number\r\n    focusMode: boolean\r\n    lastActive: Date\r\n    timeSpent: number\r\n    skills: string[]\r\n    desiredSkills: string[]\r\n    mentorId?: string\r\n    menteeIds: string[]\r\n    permissions: string[]\r\n    motivationDrivers: string[]\r\n}\r\n\r\ninterface RewardSuggestion {\r\n    id: string\r\n    memberId: string\r\n    memberName: string\r\n    type: 'bonus' | 'promotion' | 'shoutout' | 'gift' | 'recognition'\r\n    amount?: number\r\n    reason: string\r\n    aiConfidence: number\r\n    status: 'pending' | 'approved' | 'rejected' | 'sent'\r\n    createdAt: Date\r\n    description: string\r\n    impact: string\r\n}\r\n\r\ninterface RewardHistory {\r\n    id: string\r\n    memberId: string\r\n    memberName: string\r\n    type: string\r\n    amount: number\r\n    reason: string\r\n    date: Date\r\n    status: 'sent' | 'pending'\r\n}\r\n\r\ninterface RewardBonusEngineProps {\r\n    teamMembers: TeamMember[]\r\n}\r\n\r\nexport function RewardBonusEngine({ teamMembers }: RewardBonusEngineProps) {\r\n    const [selectedMember, setSelectedMember] = useState<string | null>(null)\r\n    const [showRewardDialog, setShowRewardDialog] = useState(false)\r\n    const [rewardType, setRewardType] = useState<'bonus' | 'promotion' | 'shoutout' | 'gift' | 'recognition'>('bonus')\r\n    const [rewardAmount, setRewardAmount] = useState<number>(0)\r\n    const [rewardReason, setRewardReason] = useState<string>('')\r\n\r\n    // Mock reward suggestions\r\n    const rewardSuggestions: RewardSuggestion[] = [\r\n        {\r\n            id: '1',\r\n            memberId: '1',\r\n            memberName: 'Ahmed Hassan',\r\n            type: 'bonus',\r\n            amount: 500,\r\n            reason: 'Exceptional performance with 98% deadline compliance and 5.6x ROI',\r\n            aiConfidence: 0.95,\r\n            status: 'pending',\r\n            createdAt: new Date(),\r\n            description: 'Ahmed has consistently exceeded expectations with high performance metrics',\r\n            impact: 'Will boost team morale and set performance standards'\r\n        },\r\n        {\r\n            id: '2',\r\n            memberId: '3',\r\n            memberName: 'Omar Khalil',\r\n            type: 'promotion',\r\n            reason: 'Outstanding data analysis skills and 6.2x ROI (highest in team)',\r\n            aiConfidence: 0.92,\r\n            status: 'pending',\r\n            createdAt: new Date(),\r\n            description: 'Omar has demonstrated leadership potential and exceptional technical skills',\r\n            impact: 'Will recognize his contributions and provide growth opportunities'\r\n        },\r\n        {\r\n            id: '3',\r\n            memberId: '2',\r\n            memberName: 'Nada El-Sayed',\r\n            type: 'shoutout',\r\n            reason: 'Creative excellence and focus mode productivity improvement',\r\n            aiConfidence: 0.88,\r\n            status: 'pending',\r\n            createdAt: new Date(),\r\n            description: 'Nada has shown remarkable creativity and productivity improvements',\r\n            impact: 'Will boost team creativity and encourage innovative thinking'\r\n        }\r\n    ]\r\n\r\n    // Mock reward history\r\n    const rewardHistory: RewardHistory[] = [\r\n        {\r\n            id: '1',\r\n            memberId: '1',\r\n            memberName: 'Ahmed Hassan',\r\n            type: 'Performance Bonus',\r\n            amount: 300,\r\n            reason: 'Q4 Excellence Award',\r\n            date: new Date('2024-01-10'),\r\n            status: 'sent'\r\n        },\r\n        {\r\n            id: '2',\r\n            memberId: '3',\r\n            memberName: 'Omar Khalil',\r\n            type: 'Recognition',\r\n            amount: 0,\r\n            reason: 'Data Analysis Excellence',\r\n            date: new Date('2024-01-08'),\r\n            status: 'sent'\r\n        },\r\n        {\r\n            id: '3',\r\n            memberId: '2',\r\n            memberName: 'Nada El-Sayed',\r\n            type: 'Creative Bonus',\r\n            amount: 200,\r\n            reason: 'Content Quality Award',\r\n            date: new Date('2024-01-05'),\r\n            status: 'sent'\r\n        }\r\n    ]\r\n\r\n    const calculateScore = (member: TeamMember) => {\r\n        const taskScore = (member.completedTasks / (member.completedTasks + member.openTasks)) * 30\r\n        const performanceScore = ((member.meetingAttendance + member.responseSpeed + member.deadlineCompliance) / 3) * 0.4\r\n        const roiScore = Math.min(member.roi * 10, 30)\r\n        const stressBonus = Math.max(0, (50 - member.currentStressLevel) * 0.2)\r\n        \r\n        return Math.round(taskScore + performanceScore + roiScore + stressBonus)\r\n    }\r\n\r\n    const getScoreColor = (score: number) => {\r\n        if (score >= 90) return 'text-green-600 bg-green-100'\r\n        if (score >= 75) return 'text-yellow-600 bg-yellow-100'\r\n        if (score >= 60) return 'text-orange-600 bg-orange-100'\r\n        return 'text-red-600 bg-red-100'\r\n    }\r\n\r\n    const getScoreLevel = (score: number) => {\r\n        if (score >= 90) return 'Exceptional'\r\n        if (score >= 75) return 'Excellent'\r\n        if (score >= 60) return 'Good'\r\n        return 'Needs Improvement'\r\n    }\r\n\r\n    const getRewardTypeIcon = (type: string) => {\r\n        switch (type) {\r\n            case 'bonus': return <DollarSign className=\"h-4 w-4\" />\r\n            case 'promotion': return <TrendingUp className=\"h-4 w-4\" />\r\n            case 'shoutout': return <Star className=\"h-4 w-4\" />\r\n            case 'gift': return <Gift className=\"h-4 w-4\" />\r\n            case 'recognition': return <Trophy className=\"h-4 w-4\" />\r\n            default: return <Award className=\"h-4 w-4\" />\r\n        }\r\n    }\r\n\r\n    const getRewardTypeColor = (type: string) => {\r\n        switch (type) {\r\n            case 'bonus': return 'text-green-600 bg-green-100'\r\n            case 'promotion': return 'text-blue-600 bg-blue-100'\r\n            case 'shoutout': return 'text-yellow-600 bg-yellow-100'\r\n            case 'gift': return 'text-purple-600 bg-purple-100'\r\n            case 'recognition': return 'text-orange-600 bg-orange-100'\r\n            default: return 'text-gray-600 bg-gray-100'\r\n        }\r\n    }\r\n\r\n    const handleSendReward = () => {\r\n        // Mock API call to send reward\r\n        console.log('Sending reward:', { selectedMember, rewardType, rewardAmount, rewardReason })\r\n        setShowRewardDialog(false)\r\n        setRewardAmount(0)\r\n        setRewardReason('')\r\n    }\r\n\r\n    const RewardDialog = () => (\r\n        <Dialog open={showRewardDialog} onOpenChange={setShowRewardDialog}>\r\n            <DialogContent className=\"max-w-md\">\r\n                <DialogHeader>\r\n                    <DialogTitle className=\"flex items-center space-x-2\">\r\n                        <Gift className=\"h-5 w-5\" />\r\n                        <span>Send Reward</span>\r\n                    </DialogTitle>\r\n                </DialogHeader>\r\n                <div className=\"space-y-4\">\r\n                    <div>\r\n                        <Label htmlFor=\"member\">Team Member</Label>\r\n                        <select\r\n                            id=\"member\"\r\n                            name=\"member\"\r\n                            aria-label=\"Select team member\"\r\n                            className=\"w-full p-2 border rounded-md\"\r\n                            value={selectedMember || ''}\r\n                            onChange={(e) => setSelectedMember(e.target.value)}\r\n                        >\r\n                            <option value=\"\">Select a member</option>\r\n                            {teamMembers.map((member) => (\r\n                                <option key={member.id} value={member.id}>\r\n                                    {member.name} - {member.role}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        <Label htmlFor=\"type\">Reward Type</Label>\r\n                        <select\r\n                            id=\"type\"\r\n                            name=\"type\"\r\n                            aria-label=\"Select reward type\"\r\n                            className=\"w-full p-2 border rounded-md\"\r\n                            value={rewardType}\r\n                            onChange={(e) => setRewardType(e.target.value as any)}\r\n                        >\r\n                            <option value=\"bonus\">Bonus</option>\r\n                            <option value=\"promotion\">Promotion</option>\r\n                            <option value=\"shoutout\">Shoutout</option>\r\n                            <option value=\"gift\">Gift</option>\r\n                            <option value=\"recognition\">Recognition</option>\r\n                        </select>\r\n                    </div>\r\n\r\n                    {rewardType === 'bonus' && (\r\n                        <div>\r\n                            <Label htmlFor=\"amount\">Amount (EGP)</Label>\r\n                            <Input\r\n                                id=\"amount\"\r\n                                type=\"number\"\r\n                                value={rewardAmount}\r\n                                onChange={(e) => setRewardAmount(Number(e.target.value))}\r\n                                placeholder=\"Enter amount\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n\r\n                    <div>\r\n                        <Label htmlFor=\"reason\">Reason</Label>\r\n                        <Textarea\r\n                            id=\"reason\"\r\n                            value={rewardReason}\r\n                            onChange={(e) => setRewardReason(e.target.value)}\r\n                            placeholder=\"Explain why this reward is being given...\"\r\n                            rows={3}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"flex items-center space-x-2\">\r\n                        <Button onClick={handleSendReward} className=\"flex-1\">\r\n                            <Gift className=\"h-4 w-4 mr-2\" />\r\n                            Send Reward\r\n                        </Button>\r\n                        <Button variant=\"outline\" onClick={() => setShowRewardDialog(false)}>\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n\r\n    return (\r\n        <div className=\"space-y-4\">\r\n            {/* Header */}\r\n            <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                    <h2 className=\"text-2xl font-bold text-white\">Reward & Bonus Engine</h2>\r\n                    <p className=\"text-gray-300\">AI-powered reward system for team recognition</p>\r\n                </div>\r\n                <Button onClick={() => setShowRewardDialog(true)} className=\"bg-gradient-to-r from-yellow-500 to-orange-500 hover:from-yellow-600 hover:to-orange-600\">\r\n                    <Gift className=\"h-4 w-4 mr-2\" />\r\n                    Send Reward\r\n                </Button>\r\n            </div>\r\n\r\n            {/* Team Member Scores */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n                {teamMembers.map((member) => {\r\n                    const score = calculateScore(member)\r\n                    return (\r\n                        <Card key={member.id} className=\"relative hover:shadow-lg transition-all duration-200\">\r\n                            <CardContent className=\"p-6\">\r\n                                <div className=\"flex items-center justify-between mb-4\">\r\n                                    <div className=\"flex items-center space-x-3\">\r\n                                        <Avatar className=\"h-10 w-10\">\r\n                                            <AvatarImage src={member.avatar} />\r\n                                            <AvatarFallback>{member.name.split(' ').map(n => n[0]).join('')}</AvatarFallback>\r\n                                        </Avatar>\r\n                                        <div>\r\n                                            <h3 className=\"font-semibold\">{member.name}</h3>\r\n                                            <p className=\"text-sm text-gray-500\">{member.role}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Badge className={getScoreColor(score)}>\r\n                                        {score}\r\n                                    </Badge>\r\n                                </div>\r\n                                \r\n                                <div className=\"space-y-3\">\r\n                                    <div>\r\n                                        <div className=\"flex justify-between mb-1\">\r\n                                            <span className=\"text-xs text-gray-500\">Performance Score</span>\r\n                                            <span className=\"text-xs font-medium\">{score}/100</span>\r\n                                        </div>\r\n                                        <Progress value={score} className=\"h-2\" />\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"text-center\">\r\n                                        <p className=\"text-xs text-gray-500\">Level</p>\r\n                                        <p className=\"text-sm font-medium\">{getScoreLevel(score)}</p>\r\n                                    </div>\r\n\r\n                                    <div className=\"flex items-center justify-between text-xs\">\r\n                                        <span>ROI: {member.roi}x</span>\r\n                                        <span>Tasks: {member.completedTasks}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    )\r\n                })}\r\n            </div>\r\n\r\n            {/* AI Reward Suggestions */}\r\n            <Card>\r\n                <CardHeader>\r\n                    <CardTitle className=\"flex items-center space-x-2\">\r\n                        <Brain className=\"h-5 w-5\" />\r\n                        <span>AI Reward Suggestions</span>\r\n                        <Badge variant=\"outline\" className=\"bg-blue-50 text-blue-700\">\r\n                            {rewardSuggestions.length} suggestions\r\n                        </Badge>\r\n                    </CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <div className=\"space-y-4\">\r\n                        {rewardSuggestions.map((suggestion) => (\r\n                            <div key={suggestion.id} className=\"flex items-center justify-between p-4 border rounded-lg hover:bg-gray-50 transition-colors\">\r\n                                <div className=\"flex items-center space-x-4\">\r\n                                    <div className=\"flex items-center space-x-2\">\r\n                                        {getRewardTypeIcon(suggestion.type)}\r\n                                        <Badge className={getRewardTypeColor(suggestion.type)}>\r\n                                            {suggestion.type}\r\n                                        </Badge>\r\n                                    </div>\r\n                                    <div>\r\n                                        <h4 className=\"font-semibold\">{suggestion.memberName}</h4>\r\n                                        <p className=\"text-sm text-gray-600\">{suggestion.reason}</p>\r\n                                        {suggestion.amount && (\r\n                                            <p className=\"text-sm font-medium text-green-600\">\r\n                                                {suggestion.amount} EGP\r\n                                            </p>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <div className=\"flex items-center space-x-2\">\r\n                                    <div className=\"text-right\">\r\n                                        <p className=\"text-xs text-gray-500\">AI Confidence</p>\r\n                                        <p className=\"text-sm font-medium\">{Math.round(suggestion.aiConfidence * 100)}%</p>\r\n                                    </div>\r\n                                    <div className=\"flex items-center space-x-1\">\r\n                                        <Button size=\"sm\" variant=\"outline\" className=\"text-green-600 border-green-600 hover:bg-green-50\">\r\n                                            <CheckCircle className=\"h-4 w-4\" />\r\n                                        </Button>\r\n                                        <Button size=\"sm\" variant=\"outline\" className=\"text-red-600 border-red-600 hover:bg-red-50\">\r\n                                            <XCircle className=\"h-4 w-4\" />\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n\r\n            {/* Recent Rewards */}\r\n            <Card>\r\n                <CardHeader>\r\n                    <CardTitle className=\"flex items-center space-x-2\">\r\n                        <Trophy className=\"h-5 w-5\" />\r\n                        <span>Recent Rewards</span>\r\n                    </CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <div className=\"space-y-3\">\r\n                        {rewardHistory.map((reward) => (\r\n                            <div key={reward.id} className=\"flex items-center justify-between p-3 border rounded-lg\">\r\n                                <div className=\"flex items-center space-x-3\">\r\n                                    <div className=\"w-8 h-8 bg-gradient-to-r from-yellow-400 to-orange-500 rounded-full flex items-center justify-center\">\r\n                                        <Award className=\"h-4 w-4 text-white\" />\r\n                                    </div>\r\n                                    <div>\r\n                                        <h4 className=\"font-semibold\">{reward.memberName}</h4>\r\n                                        <p className=\"text-sm text-gray-600\">{reward.reason}</p>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <div className=\"text-right\">\r\n                                    <p className=\"text-sm font-medium\">{reward.type}</p>\r\n                                    {reward.amount > 0 && (\r\n                                        <p className=\"text-sm text-green-600 font-medium\">{reward.amount} EGP</p>\r\n                                    )}\r\n                                    <p className=\"text-xs text-gray-500\">{reward.date.toLocaleDateString()}</p>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n\r\n            {/* Reward Statistics */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                <Card>\r\n                    <CardContent className=\"p-6\">\r\n                        <div className=\"flex items-center space-x-3\">\r\n                            <div className=\"w-10 h-10 bg-gradient-to-r from-green-400 to-blue-500 rounded-full flex items-center justify-center\">\r\n                                <DollarSign className=\"h-5 w-5 text-white\" />\r\n                            </div>\r\n                            <div>\r\n                                <p className=\"text-sm text-gray-500\">Total Rewards</p>\r\n                                <p className=\"text-2xl font-bold\">12,500 EGP</p>\r\n                                <p className=\"text-xs text-green-600\">+15% this month</p>\r\n                            </div>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n\r\n                <Card>\r\n                    <CardContent className=\"p-6\">\r\n                        <div className=\"flex items-center space-x-3\">\r\n                            <div className=\"w-10 h-10 bg-gradient-to-r from-purple-400 to-pink-500 rounded-full flex items-center justify-center\">\r\n                                <Users className=\"h-5 w-5 text-white\" />\r\n                            </div>\r\n                            <div>\r\n                                <p className=\"text-sm text-gray-500\">Rewarded Members</p>\r\n                                <p className=\"text-2xl font-bold\">4/4</p>\r\n                                <p className=\"text-xs text-blue-600\">100% coverage</p>\r\n                            </div>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n\r\n                <Card>\r\n                    <CardContent className=\"p-6\">\r\n                        <div className=\"flex items-center space-x-3\">\r\n                            <div className=\"w-10 h-10 bg-gradient-to-r from-yellow-400 to-orange-500 rounded-full flex items-center justify-center\">\r\n                                <Star className=\"h-5 w-5 text-white\" />\r\n                            </div>\r\n                            <div>\r\n                                <p className=\"text-sm text-gray-500\">Avg Score</p>\r\n                                <p className=\"text-2xl font-bold\">87.5</p>\r\n                                <p className=\"text-xs text-yellow-600\">Excellent</p>\r\n                            </div>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n\r\n            <RewardDialog />\r\n        </div>\r\n    )\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4411, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/meeting-manager.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { useState } from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\r\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Label } from \"@/components/ui/label\"\r\nimport { Textarea } from \"@/components/ui/textarea\"\r\nimport {\r\n    Calendar, Clock, Users, Video, MessageSquare, Mail, Bell,\r\n    CheckCircle, XCircle, AlertTriangle, Plus, Settings, Link,\r\n    ExternalLink, MapPin, Phone, Smartphone, Zap\r\n} from \"lucide-react\"\r\n\r\ninterface TeamMember {\r\n    id: string\r\n    name: string\r\n    role: string\r\n    status: 'active' | 'away' | 'offline' | 'focus'\r\n    avatar: string\r\n    email: string\r\n    phone: string\r\n    joinDate: Date\r\n    aiMotivationType: string\r\n    strengths: string[]\r\n    currentStressLevel: number\r\n    lastTasks: string[]\r\n    openTasks: number\r\n    completedTasks: number\r\n    campaignsInvolved: number\r\n    meetingAttendance: number\r\n    responseSpeed: number\r\n    deadlineCompliance: number\r\n    salary: number\r\n    toolCost: number\r\n    revenueImpact: number\r\n    roi: number\r\n    mood: 'positive' | 'neutral' | 'negative'\r\n    burnoutRisk: number\r\n    focusMode: boolean\r\n    lastActive: Date\r\n    timeSpent: number\r\n    skills: string[]\r\n    desiredSkills: string[]\r\n    mentorId?: string\r\n    menteeIds: string[]\r\n    permissions: string[]\r\n    motivationDrivers: string[]\r\n}\r\n\r\ninterface Meeting {\r\n    id: string\r\n    title: string\r\n    description: string\r\n    date: Date\r\n    duration: number\r\n    attendees: string[]\r\n    meetingLink?: string\r\n    location?: string\r\n    type: 'team' | 'client' | 'review' | 'planning' | 'training'\r\n    status: 'scheduled' | 'ongoing' | 'completed' | 'cancelled'\r\n    reminders: string[]\r\n    attendance: {\r\n        [memberId: string]: 'confirmed' | 'pending' | 'declined' | 'attended' | 'no-show'\r\n    }\r\n}\r\n\r\ninterface MeetingManagerProps {\r\n    teamMembers: TeamMember[]\r\n}\r\n\r\nexport function MeetingManager({ teamMembers }: MeetingManagerProps) {\r\n    const [showMeetingDialog, setShowMeetingDialog] = useState(false)\r\n    const [selectedMeeting, setSelectedMeeting] = useState<Meeting | null>(null)\r\n    const [meetingTitle, setMeetingTitle] = useState('')\r\n    const [meetingDescription, setMeetingDescription] = useState('')\r\n    const [meetingDate, setMeetingDate] = useState('')\r\n    const [meetingTime, setMeetingTime] = useState('')\r\n    const [meetingDuration, setMeetingDuration] = useState(60)\r\n    const [selectedAttendees, setSelectedAttendees] = useState<string[]>([])\r\n    const [meetingType, setMeetingType] = useState<'team' | 'client' | 'review' | 'planning' | 'training'>('team')\r\n    const [meetingLink, setMeetingLink] = useState('')\r\n    const [meetingLocation, setMeetingLocation] = useState('')\r\n\r\n    // Mock meetings data\r\n    const meetings: Meeting[] = [\r\n        {\r\n            id: '1',\r\n            title: 'Weekly Team Sync',\r\n            description: 'Review progress, discuss challenges, and plan next week',\r\n            date: new Date('2024-01-15T10:00:00'),\r\n            duration: 60,\r\n            attendees: ['1', '2', '3', '4'],\r\n            meetingLink: 'https://meet.google.com/abc-defg-hij',\r\n            type: 'team',\r\n            status: 'scheduled',\r\n            reminders: ['email', 'whatsapp', 'in-app'],\r\n            attendance: {\r\n                '1': 'confirmed',\r\n                '2': 'confirmed',\r\n                '3': 'pending',\r\n                '4': 'declined'\r\n            }\r\n        },\r\n        {\r\n            id: '2',\r\n            title: 'Campaign Performance Review',\r\n            description: 'Analyze Q4 campaign results and plan Q1 strategy',\r\n            date: new Date('2024-01-16T14:00:00'),\r\n            duration: 90,\r\n            attendees: ['1', '3'],\r\n            meetingLink: 'https://zoom.us/j/123456789',\r\n            type: 'review',\r\n            status: 'scheduled',\r\n            reminders: ['email', 'in-app'],\r\n            attendance: {\r\n                '1': 'confirmed',\r\n                '3': 'confirmed'\r\n            }\r\n        },\r\n        {\r\n            id: '3',\r\n            title: 'Content Strategy Planning',\r\n            description: 'Plan content calendar for next month',\r\n            date: new Date('2024-01-14T11:00:00'),\r\n            duration: 45,\r\n            attendees: ['2', '4'],\r\n            type: 'planning',\r\n            status: 'completed',\r\n            reminders: ['email'],\r\n            attendance: {\r\n                '2': 'attended',\r\n                '4': 'no-show'\r\n            }\r\n        }\r\n    ]\r\n\r\n    const getMeetingTypeColor = (type: string) => {\r\n        switch (type) {\r\n            case 'team': return 'text-blue-600 bg-blue-100'\r\n            case 'client': return 'text-purple-600 bg-purple-100'\r\n            case 'review': return 'text-green-600 bg-green-100'\r\n            case 'planning': return 'text-orange-600 bg-orange-100'\r\n            case 'training': return 'text-pink-600 bg-pink-100'\r\n            default: return 'text-gray-600 bg-gray-100'\r\n        }\r\n    }\r\n\r\n    const getMeetingStatusColor = (status: string) => {\r\n        switch (status) {\r\n            case 'scheduled': return 'text-blue-600 bg-blue-100'\r\n            case 'ongoing': return 'text-green-600 bg-green-100'\r\n            case 'completed': return 'text-gray-600 bg-gray-100'\r\n            case 'cancelled': return 'text-red-600 bg-red-100'\r\n            default: return 'text-gray-600 bg-gray-100'\r\n        }\r\n    }\r\n\r\n    const getAttendanceStatusColor = (status: string) => {\r\n        switch (status) {\r\n            case 'confirmed': return 'text-green-600 bg-green-100'\r\n            case 'pending': return 'text-yellow-600 bg-yellow-100'\r\n            case 'declined': return 'text-red-600 bg-red-100'\r\n            case 'attended': return 'text-green-600 bg-green-100'\r\n            case 'no-show': return 'text-red-600 bg-red-100'\r\n            default: return 'text-gray-600 bg-gray-100'\r\n        }\r\n    }\r\n\r\n    const getAttendanceIcon = (status: string) => {\r\n        switch (status) {\r\n            case 'confirmed':\r\n            case 'attended':\r\n                return <CheckCircle className=\"h-4 w-4 text-green-500\" />\r\n            case 'declined':\r\n            case 'no-show':\r\n                return <XCircle className=\"h-4 w-4 text-red-500\" />\r\n            case 'pending':\r\n                return <Clock className=\"h-4 w-4 text-yellow-500\" />\r\n            default:\r\n                return <AlertTriangle className=\"h-4 w-4 text-gray-500\" />\r\n        }\r\n    }\r\n\r\n    const handleCreateMeeting = () => {\r\n        // Mock API call to create meeting\r\n        console.log('Creating meeting:', {\r\n            title: meetingTitle,\r\n            description: meetingDescription,\r\n            date: meetingDate,\r\n            time: meetingTime,\r\n            duration: meetingDuration,\r\n            attendees: selectedAttendees,\r\n            type: meetingType,\r\n            link: meetingLink,\r\n            location: meetingLocation\r\n        })\r\n        setShowMeetingDialog(false)\r\n        // Reset form\r\n        setMeetingTitle('')\r\n        setMeetingDescription('')\r\n        setMeetingDate('')\r\n        setMeetingTime('')\r\n        setMeetingDuration(60)\r\n        setSelectedAttendees([])\r\n        setMeetingType('team')\r\n        setMeetingLink('')\r\n        setMeetingLocation('')\r\n    }\r\n\r\n    const MeetingDialog = () => (\r\n        <Dialog open={showMeetingDialog} onOpenChange={setShowMeetingDialog}>\r\n            <DialogContent className=\"max-w-2xl max-h-[80vh] overflow-y-auto\">\r\n                <DialogHeader>\r\n                    <DialogTitle className=\"flex items-center space-x-2\">\r\n                        <Calendar className=\"h-5 w-5\" />\r\n                        <span>Schedule Meeting</span>\r\n                    </DialogTitle>\r\n                </DialogHeader>\r\n                <div className=\"space-y-4\">\r\n                    <div className=\"grid grid-cols-2 gap-4\">\r\n                        <div>\r\n                            <Label htmlFor=\"title\">Meeting Title</Label>\r\n                            <Input\r\n                                id=\"title\"\r\n                                value={meetingTitle}\r\n                                onChange={(e) => setMeetingTitle(e.target.value)}\r\n                                placeholder=\"Enter meeting title\"\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <Label htmlFor=\"type\">Meeting Type</Label>\r\n                            <select\r\n                                id=\"type\"\r\n                                name=\"type\"\r\n                                aria-label=\"Select meeting type\"\r\n                                className=\"w-full p-2 border rounded-md\"\r\n                                value={meetingType}\r\n                                onChange={(e) => setMeetingType(e.target.value as any)}\r\n                            >\r\n                                <option value=\"team\">Team Meeting</option>\r\n                                <option value=\"client\">Client Meeting</option>\r\n                                <option value=\"review\">Review Meeting</option>\r\n                                <option value=\"planning\">Planning Meeting</option>\r\n                                <option value=\"training\">Training Session</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Label htmlFor=\"description\">Description</Label>\r\n                        <Textarea\r\n                            id=\"description\"\r\n                            value={meetingDescription}\r\n                            onChange={(e) => setMeetingDescription(e.target.value)}\r\n                            placeholder=\"Enter meeting description...\"\r\n                            rows={3}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"grid grid-cols-3 gap-4\">\r\n                        <div>\r\n                            <Label htmlFor=\"date\">Date</Label>\r\n                            <Input\r\n                                id=\"date\"\r\n                                type=\"date\"\r\n                                value={meetingDate}\r\n                                onChange={(e) => setMeetingDate(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <Label htmlFor=\"time\">Time</Label>\r\n                            <Input\r\n                                id=\"time\"\r\n                                type=\"time\"\r\n                                value={meetingTime}\r\n                                onChange={(e) => setMeetingTime(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <Label htmlFor=\"duration\">Duration (minutes)</Label>\r\n                            <Input\r\n                                id=\"duration\"\r\n                                type=\"number\"\r\n                                value={meetingDuration}\r\n                                onChange={(e) => setMeetingDuration(Number(e.target.value))}\r\n                                min=\"15\"\r\n                                max=\"480\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"grid grid-cols-2 gap-4\">\r\n                        <div>\r\n                            <Label htmlFor=\"link\">Meeting Link (optional)</Label>\r\n                            <Input\r\n                                id=\"link\"\r\n                                value={meetingLink}\r\n                                onChange={(e) => setMeetingLink(e.target.value)}\r\n                                placeholder=\"https://meet.google.com/...\"\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <Label htmlFor=\"location\">Location (optional)</Label>\r\n                            <Input\r\n                                id=\"location\"\r\n                                value={meetingLocation}\r\n                                onChange={(e) => setMeetingLocation(e.target.value)}\r\n                                placeholder=\"Office, Conference Room, etc.\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Label>Attendees</Label>\r\n                        <div className=\"grid grid-cols-2 gap-2 mt-2 max-h-40 overflow-y-auto\">\r\n                            {teamMembers.map((member) => (\r\n                                <label key={member.id} className=\"flex items-center space-x-2 p-2 border rounded hover:bg-gray-50\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={selectedAttendees.includes(member.id)}\r\n                                        onChange={(e) => {\r\n                                            if (e.target.checked) {\r\n                                                setSelectedAttendees([...selectedAttendees, member.id])\r\n                                            } else {\r\n                                                setSelectedAttendees(selectedAttendees.filter(id => id !== member.id))\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    <Avatar className=\"h-6 w-6\">\r\n                                        <AvatarImage src={member.avatar} />\r\n                                        <AvatarFallback>{member.name.split(' ').map(n => n[0]).join('')}</AvatarFallback>\r\n                                    </Avatar>\r\n                                    <span className=\"text-sm\">{member.name}</span>\r\n                                </label>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"flex items-center space-x-2\">\r\n                        <Button onClick={handleCreateMeeting} className=\"flex-1\">\r\n                            <Calendar className=\"h-4 w-4 mr-2\" />\r\n                            Schedule Meeting\r\n                        </Button>\r\n                        <Button variant=\"outline\" onClick={() => setShowMeetingDialog(false)}>\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n\r\n    return (\r\n        <div className=\"space-y-4\">\r\n            {/* Header */}\r\n            <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                    <h2 className=\"text-2xl font-bold text-white\">Meeting Manager</h2>\r\n                    <p className=\"text-gray-300\">Schedule and manage team meetings</p>\r\n                </div>\r\n                <Button onClick={() => setShowMeetingDialog(true)} className=\"bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700\">\r\n                    <Plus className=\"h-4 w-4 mr-2\" />\r\n                    Schedule Meeting\r\n                </Button>\r\n            </div>\r\n\r\n            {/* Upcoming Meetings */}\r\n            <Card>\r\n                <CardHeader>\r\n                    <CardTitle className=\"flex items-center space-x-2\">\r\n                        <Calendar className=\"h-5 w-5\" />\r\n                        <span>Upcoming Meetings</span>\r\n                        <Badge variant=\"outline\" className=\"bg-blue-50 text-blue-700\">\r\n                            {meetings.filter(m => m.status === 'scheduled').length} scheduled\r\n                        </Badge>\r\n                    </CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <div className=\"space-y-4\">\r\n                        {meetings.filter(m => m.status === 'scheduled').map((meeting) => (\r\n                            <div key={meeting.id} className=\"flex items-center justify-between p-4 border rounded-lg hover:bg-gray-50 transition-colors\">\r\n                                <div className=\"flex items-center space-x-4\">\r\n                                    <div className=\"flex items-center space-x-2\">\r\n                                        <Badge className={getMeetingTypeColor(meeting.type)}>\r\n                                            {meeting.type}\r\n                                        </Badge>\r\n                                        <Badge className={getMeetingStatusColor(meeting.status)}>\r\n                                            {meeting.status}\r\n                                        </Badge>\r\n                                    </div>\r\n                                    <div>\r\n                                        <h4 className=\"font-semibold\">{meeting.title}</h4>\r\n                                        <p className=\"text-sm text-gray-600\">{meeting.description}</p>\r\n                                        <div className=\"flex items-center space-x-4 mt-2 text-xs text-gray-500\">\r\n                                            <span className=\"flex items-center space-x-1\">\r\n                                                <Calendar className=\"h-3 w-3\" />\r\n                                                <span>{meeting.date.toLocaleDateString()}</span>\r\n                                            </span>\r\n                                            <span className=\"flex items-center space-x-1\">\r\n                                                <Clock className=\"h-3 w-3\" />\r\n                                                <span>{meeting.date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}</span>\r\n                                            </span>\r\n                                            <span className=\"flex items-center space-x-1\">\r\n                                                <Users className=\"h-3 w-3\" />\r\n                                                <span>{meeting.attendees.length} attendees</span>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <div className=\"flex items-center space-x-2\">\r\n                                    {meeting.meetingLink && (\r\n                                        <Button size=\"sm\" variant=\"outline\">\r\n                                            <ExternalLink className=\"h-4 w-4 mr-2\" />\r\n                                            Join\r\n                                        </Button>\r\n                                    )}\r\n                                    <Button size=\"sm\" variant=\"outline\">\r\n                                        <Bell className=\"h-4 w-4 mr-2\" />\r\n                                        Remind\r\n                                    </Button>\r\n                                    <Button size=\"sm\" variant=\"outline\">\r\n                                        <Settings className=\"h-4 w-4\" />\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n\r\n            {/* Recent Meetings */}\r\n            <Card>\r\n                <CardHeader>\r\n                    <CardTitle className=\"flex items-center space-x-2\">\r\n                        <Clock className=\"h-5 w-5\" />\r\n                        <span>Recent Meetings</span>\r\n                    </CardTitle>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <div className=\"space-y-4\">\r\n                        {meetings.filter(m => m.status === 'completed').map((meeting) => (\r\n                            <div key={meeting.id} className=\"p-4 border rounded-lg\">\r\n                                <div className=\"flex items-center justify-between mb-3\">\r\n                                    <div className=\"flex items-center space-x-2\">\r\n                                        <Badge className={getMeetingTypeColor(meeting.type)}>\r\n                                            {meeting.type}\r\n                                        </Badge>\r\n                                        <Badge className={getMeetingStatusColor(meeting.status)}>\r\n                                            {meeting.status}\r\n                                        </Badge>\r\n                                    </div>\r\n                                    <span className=\"text-sm text-gray-500\">\r\n                                        {meeting.date.toLocaleDateString()}\r\n                                    </span>\r\n                                </div>\r\n                                \r\n                                <h4 className=\"font-semibold mb-2\">{meeting.title}</h4>\r\n                                <p className=\"text-sm text-gray-600 mb-3\">{meeting.description}</p>\r\n                                \r\n                                {/* Attendance */}\r\n                                <div>\r\n                                    <p className=\"text-sm font-medium mb-2\">Attendance:</p>\r\n                                    <div className=\"flex items-center space-x-3\">\r\n                                        {meeting.attendees.map((attendeeId) => {\r\n                                            const member = teamMembers.find(m => m.id === attendeeId)\r\n                                            const status = meeting.attendance[attendeeId]\r\n                                            return member ? (\r\n                                                <div key={attendeeId} className=\"flex items-center space-x-2\">\r\n                                                    <Avatar className=\"h-6 w-6\">\r\n                                                        <AvatarImage src={member.avatar} />\r\n                                                        <AvatarFallback>{member.name.split(' ').map(n => n[0]).join('')}</AvatarFallback>\r\n                                                    </Avatar>\r\n                                                    <div className=\"flex items-center space-x-1\">\r\n                                                        {getAttendanceIcon(status)}\r\n                                                        <Badge className={getAttendanceStatusColor(status)}>\r\n                                                            {status}\r\n                                                        </Badge>\r\n                                                    </div>\r\n                                                </div>\r\n                                            ) : null\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n\r\n            {/* Meeting Statistics */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n                <Card>\r\n                    <CardContent className=\"p-6\">\r\n                        <div className=\"flex items-center space-x-3\">\r\n                            <div className=\"w-10 h-10 bg-gradient-to-r from-blue-400 to-purple-500 rounded-full flex items-center justify-center\">\r\n                                <Calendar className=\"h-5 w-5 text-white\" />\r\n                            </div>\r\n                            <div>\r\n                                <p className=\"text-sm text-gray-500\">Total Meetings</p>\r\n                                <p className=\"text-2xl font-bold\">{meetings.length}</p>\r\n                                <p className=\"text-xs text-blue-600\">This month</p>\r\n                            </div>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n\r\n                <Card>\r\n                    <CardContent className=\"p-6\">\r\n                        <div className=\"flex items-center space-x-3\">\r\n                            <div className=\"w-10 h-10 bg-gradient-to-r from-green-400 to-blue-500 rounded-full flex items-center justify-center\">\r\n                                <CheckCircle className=\"h-5 w-5 text-white\" />\r\n                            </div>\r\n                            <div>\r\n                                <p className=\"text-sm text-gray-500\">Attendance Rate</p>\r\n                                <p className=\"text-2xl font-bold\">87%</p>\r\n                                <p className=\"text-xs text-green-600\">+5% vs last month</p>\r\n                            </div>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n\r\n                <Card>\r\n                    <CardContent className=\"p-6\">\r\n                        <div className=\"flex items-center space-x-3\">\r\n                            <div className=\"w-10 h-10 bg-gradient-to-r from-yellow-400 to-orange-500 rounded-full flex items-center justify-center\">\r\n                                <Clock className=\"h-5 w-5 text-white\" />\r\n                            </div>\r\n                            <div>\r\n                                <p className=\"text-sm text-gray-500\">Avg Duration</p>\r\n                                <p className=\"text-2xl font-bold\">65min</p>\r\n                                <p className=\"text-xs text-yellow-600\">Efficient</p>\r\n                            </div>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n\r\n                <Card>\r\n                    <CardContent className=\"p-6\">\r\n                        <div className=\"flex items-center space-x-3\">\r\n                            <div className=\"w-10 h-10 bg-gradient-to-r from-purple-400 to-pink-500 rounded-full flex items-center justify-center\">\r\n                                <Users className=\"h-5 w-5 text-white\" />\r\n                            </div>\r\n                            <div>\r\n                                <p className=\"text-sm text-gray-500\">Avg Attendees</p>\r\n                                <p className=\"text-2xl font-bold\">3.2</p>\r\n                                <p className=\"text-xs text-purple-600\">Per meeting</p>\r\n                            </div>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n\r\n            <MeetingDialog />\r\n        </div>\r\n    )\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5912, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/chat-system.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { useState } from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Textarea } from \"@/components/ui/textarea\"\r\nimport {\r\n    MessageSquare, Send, Mic, Pin, Brain, Users, UserPlus,\r\n    Search, MoreHorizontal, Smile, Paperclip, Video, Phone,\r\n    Volume2, Play, Pause, Download, Share, Star, AlertCircle\r\n} from \"lucide-react\"\r\n\r\ninterface TeamMember {\r\n    id: string\r\n    name: string\r\n    role: string\r\n    status: 'active' | 'away' | 'offline' | 'focus'\r\n    avatar: string\r\n    email: string\r\n    phone: string\r\n    joinDate: Date\r\n    aiMotivationType: string\r\n    strengths: string[]\r\n    currentStressLevel: number\r\n    lastTasks: string[]\r\n    openTasks: number\r\n    completedTasks: number\r\n    campaignsInvolved: number\r\n    meetingAttendance: number\r\n    responseSpeed: number\r\n    deadlineCompliance: number\r\n    salary: number\r\n    toolCost: number\r\n    revenueImpact: number\r\n    roi: number\r\n    mood: 'positive' | 'neutral' | 'negative'\r\n    burnoutRisk: number\r\n    focusMode: boolean\r\n    lastActive: Date\r\n    timeSpent: number\r\n    skills: string[]\r\n    desiredSkills: string[]\r\n    mentorId?: string\r\n    menteeIds: string[]\r\n    permissions: string[]\r\n    motivationDrivers: string[]\r\n}\r\n\r\ninterface ChatMessage {\r\n    id: string\r\n    senderId: string\r\n    senderName: string\r\n    content: string\r\n    timestamp: Date\r\n    type: 'text' | 'voice' | 'image' | 'file'\r\n    isAI?: boolean\r\n    isPinned?: boolean\r\n    reactions?: { [userId: string]: string }\r\n}\r\n\r\ninterface ChatRoom {\r\n    id: string\r\n    name: string\r\n    type: 'team' | 'direct' | 'group' | 'ai'\r\n    participants: string[]\r\n    lastMessage?: ChatMessage\r\n    unreadCount: number\r\n    isPinned: boolean\r\n}\r\n\r\ninterface ChatSystemProps {\r\n    teamMembers: TeamMember[]\r\n}\r\n\r\nexport function ChatSystem({ teamMembers }: ChatSystemProps) {\r\n    const [selectedRoom, setSelectedRoom] = useState<string>('team')\r\n    const [message, setMessage] = useState('')\r\n    const [isRecording, setIsRecording] = useState(false)\r\n    const [showAIAssistant, setShowAIAssistant] = useState(false)\r\n\r\n    // Mock chat rooms\r\n    const chatRooms: ChatRoom[] = [\r\n        {\r\n            id: 'team',\r\n            name: 'Team Room',\r\n            type: 'team',\r\n            participants: teamMembers.map(m => m.id),\r\n            unreadCount: 3,\r\n            isPinned: true\r\n        },\r\n        {\r\n            id: 'ai',\r\n            name: 'AI Assistant',\r\n            type: 'ai',\r\n            participants: ['ai'],\r\n            unreadCount: 0,\r\n            isPinned: true\r\n        },\r\n        {\r\n            id: 'campaigns',\r\n            name: 'Campaign Team',\r\n            type: 'group',\r\n            participants: ['1', '3'],\r\n            unreadCount: 1,\r\n            isPinned: false\r\n        }\r\n    ]\r\n\r\n    // Mock messages\r\n    const messages: ChatMessage[] = [\r\n        {\r\n            id: '1',\r\n            senderId: '1',\r\n            senderName: 'Ahmed Hassan',\r\n            content: 'Great work on the Q4 campaign everyone! 🎉',\r\n            timestamp: new Date('2024-01-15T10:30:00'),\r\n            type: 'text',\r\n            reactions: { '2': '👍', '3': '🎉' }\r\n        },\r\n        {\r\n            id: '2',\r\n            senderId: 'ai',\r\n            senderName: 'AI Assistant',\r\n            content: '📊 Daily Summary: Team completed 15 tasks today with 95% deadline compliance. Omar achieved highest ROI at 6.2x. Farouk needs attention - high stress levels detected.',\r\n            timestamp: new Date('2024-01-15T10:35:00'),\r\n            type: 'text',\r\n            isAI: true,\r\n            isPinned: true\r\n        },\r\n        {\r\n            id: '3',\r\n            senderId: '2',\r\n            senderName: 'Nada El-Sayed',\r\n            content: 'Just finished the new Instagram reel. Should I post it now or wait for tomorrow?',\r\n            timestamp: new Date('2024-01-15T10:40:00'),\r\n            type: 'text'\r\n        },\r\n        {\r\n            id: '4',\r\n            senderId: '3',\r\n            senderName: 'Omar Khalil',\r\n            content: '📈 Monthly report is ready. Revenue up 23% from last month!',\r\n            timestamp: new Date('2024-01-15T10:45:00'),\r\n            type: 'text',\r\n            reactions: { '1': '🔥', '2': '📈' }\r\n        }\r\n    ]\r\n\r\n    const handleSendMessage = () => {\r\n        if (message.trim()) {\r\n            console.log('Sending message:', message)\r\n            setMessage('')\r\n        }\r\n    }\r\n\r\n    const handleVoiceMessage = () => {\r\n        setIsRecording(!isRecording)\r\n        console.log('Voice recording:', isRecording ? 'stopped' : 'started')\r\n    }\r\n\r\n    const handleAIAssistant = () => {\r\n        setShowAIAssistant(!showAIAssistant)\r\n    }\r\n\r\n    const getMemberById = (id: string) => {\r\n        return teamMembers.find(m => m.id === id)\r\n    }\r\n\r\n    const getRoomById = (id: string) => {\r\n        return chatRooms.find(r => r.id === id)\r\n    }\r\n\r\n    return (\r\n        <div className=\"space-y-4\">\r\n            {/* Header */}\r\n            <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                    <h2 className=\"text-2xl font-bold text-white\">Team Chat</h2>\r\n                    <p className=\"text-gray-300\">Real-time communication with AI assistance</p>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                    <Button variant=\"outline\" size=\"sm\">\r\n                        <Search className=\"h-4 w-4 mr-2\" />\r\n                        Search\r\n                    </Button>\r\n                    <Button variant=\"outline\" size=\"sm\">\r\n                        <UserPlus className=\"h-4 w-4 mr-2\" />\r\n                        Add Member\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-4 h-[600px]\">\r\n                {/* Chat Rooms Sidebar */}\r\n                <Card className=\"lg:col-span-1\">\r\n                    <CardHeader>\r\n                        <CardTitle className=\"flex items-center space-x-2\">\r\n                            <MessageSquare className=\"h-5 w-5\" />\r\n                            <span>Chats</span>\r\n                        </CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent className=\"space-y-2\">\r\n                        {chatRooms.map((room) => (\r\n                            <div\r\n                                key={room.id}\r\n                                className={`flex items-center space-x-3 p-3 rounded-lg cursor-pointer transition-colors ${\r\n                                    selectedRoom === room.id ? 'bg-blue-50 border-blue-200' : 'hover:bg-gray-50'\r\n                                }`}\r\n                                onClick={() => setSelectedRoom(room.id)}\r\n                            >\r\n                                <div className=\"relative\">\r\n                                    {room.type === 'ai' ? (\r\n                                        <div className=\"w-10 h-10 bg-gradient-to-r from-purple-400 to-pink-500 rounded-full flex items-center justify-center\">\r\n                                            <Brain className=\"h-5 w-5 text-white\" />\r\n                                        </div>\r\n                                    ) : (\r\n                                        <Avatar className=\"h-10 w-10\">\r\n                                            <AvatarImage src=\"/avatars/team.jpg\" />\r\n                                            <AvatarFallback>\r\n                                                {room.name.split(' ').map(n => n[0]).join('')}\r\n                                            </AvatarFallback>\r\n                                        </Avatar>\r\n                                    )}\r\n                                    {room.unreadCount > 0 && (\r\n                                        <Badge className=\"absolute -top-1 -right-1 h-5 w-5 rounded-full p-0 flex items-center justify-center text-xs\">\r\n                                            {room.unreadCount}\r\n                                        </Badge>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"flex-1 min-w-0\">\r\n                                    <div className=\"flex items-center space-x-2\">\r\n                                        <h4 className=\"font-medium truncate\">{room.name}</h4>\r\n                                        {room.isPinned && <Pin className=\"h-3 w-3 text-yellow-500\" />}\r\n                                    </div>\r\n                                    {room.lastMessage && (\r\n                                        <p className=\"text-xs text-gray-500 truncate\">\r\n                                            {room.lastMessage.content}\r\n                                        </p>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </CardContent>\r\n                </Card>\r\n\r\n                {/* Chat Messages */}\r\n                <Card className=\"lg:col-span-3 flex flex-col\">\r\n                    <CardHeader>\r\n                        <div className=\"flex items-center justify-between\">\r\n                            <div className=\"flex items-center space-x-3\">\r\n                                <Avatar className=\"h-8 w-8\">\r\n                                    <AvatarImage src=\"/avatars/team.jpg\" />\r\n                                    <AvatarFallback>\r\n                                        {getRoomById(selectedRoom)?.name.split(' ').map(n => n[0]).join('')}\r\n                                    </AvatarFallback>\r\n                                </Avatar>\r\n                                <div>\r\n                                    <h3 className=\"font-semibold\">{getRoomById(selectedRoom)?.name}</h3>\r\n                                    <p className=\"text-sm text-gray-500\">\r\n                                        {getRoomById(selectedRoom)?.participants.length} members\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"flex items-center space-x-2\">\r\n                                <Button variant=\"outline\" size=\"sm\">\r\n                                    <Video className=\"h-4 w-4\" />\r\n                                </Button>\r\n                                <Button variant=\"outline\" size=\"sm\">\r\n                                    <Phone className=\"h-4 w-4\" />\r\n                                </Button>\r\n                                <Button variant=\"outline\" size=\"sm\">\r\n                                    <MoreHorizontal className=\"h-4 w-4\" />\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </CardHeader>\r\n\r\n                    <CardContent className=\"flex-1 flex flex-col\">\r\n                        {/* Messages Area */}\r\n                        <div className=\"flex-1 space-y-4 mb-4 overflow-y-auto\">\r\n                            {messages.map((msg) => (\r\n                                <div key={msg.id} className={`flex ${msg.isAI ? 'justify-center' : msg.senderId === '1' ? 'justify-end' : 'justify-start'}`}>\r\n                                    <div className={`flex items-start space-x-2 max-w-xs lg:max-w-md ${msg.isAI ? 'w-full' : ''}`}>\r\n                                        {!msg.isAI && msg.senderId !== '1' && (\r\n                                            <Avatar className=\"h-8 w-8\">\r\n                                                <AvatarImage src={getMemberById(msg.senderId)?.avatar} />\r\n                                                <AvatarFallback>\r\n                                                    {msg.senderName.split(' ').map(n => n[0]).join('')}\r\n                                                </AvatarFallback>\r\n                                            </Avatar>\r\n                                        )}\r\n                                        <div className={`flex flex-col ${msg.senderId === '1' ? 'items-end' : 'items-start'}`}>\r\n                                            {!msg.isAI && (\r\n                                                <p className=\"text-xs text-gray-500 mb-1\">{msg.senderName}</p>\r\n                                            )}\r\n                                            <div className={`p-3 rounded-lg ${\r\n                                                msg.isAI \r\n                                                    ? 'bg-gradient-to-r from-purple-50 to-pink-50 border border-purple-200 w-full' \r\n                                                    : msg.senderId === '1'\r\n                                                    ? 'bg-blue-500 text-white'\r\n                                                    : 'bg-gray-100'\r\n                                            }`}>\r\n                                                <div className=\"flex items-center space-x-2 mb-1\">\r\n                                                    {msg.isAI && <Brain className=\"h-4 w-4 text-purple-500\" />}\r\n                                                    {msg.isPinned && <Pin className=\"h-3 w-3 text-yellow-500\" />}\r\n                                                </div>\r\n                                                <p className=\"text-sm\">{msg.content}</p>\r\n                                                <div className=\"flex items-center justify-between mt-2\">\r\n                                                    <span className=\"text-xs opacity-70\">\r\n                                                        {msg.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                                                    </span>\r\n                                                    {msg.reactions && Object.keys(msg.reactions).length > 0 && (\r\n                                                        <div className=\"flex items-center space-x-1\">\r\n                                                            {Object.entries(msg.reactions).map(([userId, reaction]) => (\r\n                                                                <Badge key={userId} variant=\"outline\" className=\"text-xs\">\r\n                                                                    {reaction}\r\n                                                                </Badge>\r\n                                                            ))}\r\n                                                        </div>\r\n                                                    )}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        {!msg.isAI && msg.senderId === '1' && (\r\n                                            <Avatar className=\"h-8 w-8\">\r\n                                                <AvatarImage src={getMemberById(msg.senderId)?.avatar} />\r\n                                                <AvatarFallback>\r\n                                                    {msg.senderName.split(' ').map(n => n[0]).join('')}\r\n                                                </AvatarFallback>\r\n                                            </Avatar>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n\r\n                        {/* Message Input */}\r\n                        <div className=\"border-t pt-4\">\r\n                            <div className=\"flex items-center space-x-2\">\r\n                                <Button\r\n                                    variant=\"outline\"\r\n                                    size=\"sm\"\r\n                                    onClick={handleVoiceMessage}\r\n                                    className={isRecording ? 'bg-red-500 text-white' : ''}\r\n                                >\r\n                                    <Mic className=\"h-4 w-4\" />\r\n                                </Button>\r\n                                <div className=\"flex-1 relative\">\r\n                                    <Input\r\n                                        value={message}\r\n                                        onChange={(e) => setMessage(e.target.value)}\r\n                                        placeholder=\"Type a message...\"\r\n                                        onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\r\n                                        className=\"pr-20\"\r\n                                    />\r\n                                    <div className=\"absolute right-2 top-1/2 transform -translate-y-1/2 flex items-center space-x-1\">\r\n                                        <Button variant=\"ghost\" size=\"sm\">\r\n                                            <Smile className=\"h-4 w-4\" />\r\n                                        </Button>\r\n                                        <Button variant=\"ghost\" size=\"sm\">\r\n                                            <Paperclip className=\"h-4 w-4\" />\r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                                <Button onClick={handleSendMessage} disabled={!message.trim()}>\r\n                                    <Send className=\"h-4 w-4\" />\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n\r\n            {/* AI Assistant Panel */}\r\n            {showAIAssistant && (\r\n                <Card className=\"mt-4\">\r\n                    <CardHeader>\r\n                        <CardTitle className=\"flex items-center space-x-2\">\r\n                            <Brain className=\"h-5 w-5\" />\r\n                            <span>AI Assistant</span>\r\n                        </CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                            <Button variant=\"outline\" className=\"justify-start\">\r\n                                <Brain className=\"h-4 w-4 mr-2\" />\r\n                                Summarize last 5 messages\r\n                            </Button>\r\n                            <Button variant=\"outline\" className=\"justify-start\">\r\n                                <AlertCircle className=\"h-4 w-4 mr-2\" />\r\n                                Remind me at 6PM\r\n                            </Button>\r\n                            <Button variant=\"outline\" className=\"justify-start\">\r\n                                <Star className=\"h-4 w-4 mr-2\" />\r\n                                Generate team insights\r\n                            </Button>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n            )}\r\n        </div>\r\n    )\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6820, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/attendance-activity-heatmap.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Activity, Clock, AlertTriangle, TrendingUp, TrendingDown } from \"lucide-react\"\r\n\r\ninterface TeamMember {\r\n    id: string\r\n    name: string\r\n    role: string\r\n    status: 'active' | 'away' | 'offline' | 'focus'\r\n    avatar: string\r\n    email: string\r\n    phone: string\r\n    joinDate: Date\r\n    aiMotivationType: string\r\n    strengths: string[]\r\n    currentStressLevel: number\r\n    lastTasks: string[]\r\n    openTasks: number\r\n    completedTasks: number\r\n    campaignsInvolved: number\r\n    meetingAttendance: number\r\n    responseSpeed: number\r\n    deadlineCompliance: number\r\n    salary: number\r\n    toolCost: number\r\n    revenueImpact: number\r\n    roi: number\r\n    mood: 'positive' | 'neutral' | 'negative'\r\n    burnoutRisk: number\r\n    focusMode: boolean\r\n    lastActive: Date\r\n    timeSpent: number\r\n    skills: string[]\r\n    desiredSkills: string[]\r\n    mentorId?: string\r\n    menteeIds: string[]\r\n    permissions: string[]\r\n    motivationDrivers: string[]\r\n}\r\n\r\ninterface AttendanceActivityHeatmapProps {\r\n    teamMembers: TeamMember[]\r\n}\r\n\r\nexport function AttendanceActivityHeatmap({ teamMembers }: AttendanceActivityHeatmapProps) {\r\n    return (\r\n        <Card>\r\n            <CardHeader>\r\n                <CardTitle className=\"flex items-center space-x-2\">\r\n                    <Activity className=\"h-5 w-5\" />\r\n                    <span>Attendance & Activity Heatmap</span>\r\n                </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n                <div className=\"text-center py-8\">\r\n                    <Activity className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Attendance Heatmap</h3>\r\n                    <p className=\"text-gray-500\">Track team online/offline patterns and engagement</p>\r\n                    <div className=\"mt-4\">\r\n                        <Badge variant=\"outline\">Coming Soon</Badge>\r\n                    </div>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} "],"names":[],"mappings":";;;;AAGA;AACA;AACA;AALA;;;;;AA+CO,SAAS,0BAA0B,EAAE,WAAW,EAAkC;IACrF,qBACI,8OAAC,gIAAA,CAAA,OAAI;;0BACD,8OAAC,gIAAA,CAAA,aAAU;0BACP,cAAA,8OAAC,gIAAA,CAAA,YAAS;oBAAC,WAAU;;sCACjB,8OAAC,0MAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACpB,8OAAC;sCAAK;;;;;;;;;;;;;;;;;0BAGd,8OAAC,gIAAA,CAAA,cAAW;0BACR,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC,0MAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACpB,8OAAC;4BAAG,WAAU;sCAAyC;;;;;;sCACvD,8OAAC;4BAAE,WAAU;sCAAgB;;;;;;sCAC7B,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC,iIAAA,CAAA,QAAK;gCAAC,SAAQ;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMjD","debugId":null}},
    {"offset": {"line": 6930, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/weekly-mood-check.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Heart, Smile, Frown, Meh } from \"lucide-react\"\r\n\r\ninterface TeamMember {\r\n    id: string\r\n    name: string\r\n    role: string\r\n    status: 'active' | 'away' | 'offline' | 'focus'\r\n    avatar: string\r\n    email: string\r\n    phone: string\r\n    joinDate: Date\r\n    aiMotivationType: string\r\n    strengths: string[]\r\n    currentStressLevel: number\r\n    lastTasks: string[]\r\n    openTasks: number\r\n    completedTasks: number\r\n    campaignsInvolved: number\r\n    meetingAttendance: number\r\n    responseSpeed: number\r\n    deadlineCompliance: number\r\n    salary: number\r\n    toolCost: number\r\n    revenueImpact: number\r\n    roi: number\r\n    mood: 'positive' | 'neutral' | 'negative'\r\n    burnoutRisk: number\r\n    focusMode: boolean\r\n    lastActive: Date\r\n    timeSpent: number\r\n    skills: string[]\r\n    desiredSkills: string[]\r\n    mentorId?: string\r\n    menteeIds: string[]\r\n    permissions: string[]\r\n    motivationDrivers: string[]\r\n}\r\n\r\ninterface WeeklyMoodCheckProps {\r\n    teamMembers: TeamMember[]\r\n}\r\n\r\nexport function WeeklyMoodCheck({ teamMembers }: WeeklyMoodCheckProps) {\r\n    return (\r\n        <Card>\r\n            <CardHeader>\r\n                <CardTitle className=\"flex items-center space-x-2\">\r\n                    <Heart className=\"h-5 w-5\" />\r\n                    <span>Weekly Mood Check</span>\r\n                </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n                <div className=\"text-center py-8\">\r\n                    <Heart className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">How are you feeling this week?</h3>\r\n                    <p className=\"text-gray-500\">Track team mood and emotional wellbeing</p>\r\n                    <div className=\"mt-4\">\r\n                        <Badge variant=\"outline\">Coming Soon</Badge>\r\n                    </div>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} "],"names":[],"mappings":";;;;AAGA;AACA;AACA;AALA;;;;;AA+CO,SAAS,gBAAgB,EAAE,WAAW,EAAwB;IACjE,qBACI,8OAAC,gIAAA,CAAA,OAAI;;0BACD,8OAAC,gIAAA,CAAA,aAAU;0BACP,cAAA,8OAAC,gIAAA,CAAA,YAAS;oBAAC,WAAU;;sCACjB,8OAAC,oMAAA,CAAA,QAAK;4BAAC,WAAU;;;;;;sCACjB,8OAAC;sCAAK;;;;;;;;;;;;;;;;;0BAGd,8OAAC,gIAAA,CAAA,cAAW;0BACR,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC,oMAAA,CAAA,QAAK;4BAAC,WAAU;;;;;;sCACjB,8OAAC;4BAAG,WAAU;sCAAyC;;;;;;sCACvD,8OAAC;4BAAE,WAAU;sCAAgB;;;;;;sCAC7B,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC,iIAAA,CAAA,QAAK;gCAAC,SAAQ;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMjD","debugId":null}},
    {"offset": {"line": 7040, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/workload-balancer.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Scale, AlertTriangle, CheckCircle } from \"lucide-react\"\r\n\r\ninterface TeamMember {\r\n    id: string\r\n    name: string\r\n    role: string\r\n    status: 'active' | 'away' | 'offline' | 'focus'\r\n    avatar: string\r\n    email: string\r\n    phone: string\r\n    joinDate: Date\r\n    aiMotivationType: string\r\n    strengths: string[]\r\n    currentStressLevel: number\r\n    lastTasks: string[]\r\n    openTasks: number\r\n    completedTasks: number\r\n    campaignsInvolved: number\r\n    meetingAttendance: number\r\n    responseSpeed: number\r\n    deadlineCompliance: number\r\n    salary: number\r\n    toolCost: number\r\n    revenueImpact: number\r\n    roi: number\r\n    mood: 'positive' | 'neutral' | 'negative'\r\n    burnoutRisk: number\r\n    focusMode: boolean\r\n    lastActive: Date\r\n    timeSpent: number\r\n    skills: string[]\r\n    desiredSkills: string[]\r\n    mentorId?: string\r\n    menteeIds: string[]\r\n    permissions: string[]\r\n    motivationDrivers: string[]\r\n}\r\n\r\ninterface WorkloadBalancerProps {\r\n    teamMembers: TeamMember[]\r\n}\r\n\r\nexport function WorkloadBalancer({ teamMembers }: WorkloadBalancerProps) {\r\n    return (\r\n        <Card>\r\n            <CardHeader>\r\n                <CardTitle className=\"flex items-center space-x-2\">\r\n                    <Scale className=\"h-5 w-5\" />\r\n                    <span>Workload Balancer</span>\r\n                </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n                <div className=\"text-center py-8\">\r\n                    <Scale className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Workload Distribution</h3>\r\n                    <p className=\"text-gray-500\">Detect overload and suggest task redistribution</p>\r\n                    <div className=\"mt-4\">\r\n                        <Badge variant=\"outline\">Coming Soon</Badge>\r\n                    </div>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} "],"names":[],"mappings":";;;;AAGA;AACA;AACA;AALA;;;;;AA+CO,SAAS,iBAAiB,EAAE,WAAW,EAAyB;IACnE,qBACI,8OAAC,gIAAA,CAAA,OAAI;;0BACD,8OAAC,gIAAA,CAAA,aAAU;0BACP,cAAA,8OAAC,gIAAA,CAAA,YAAS;oBAAC,WAAU;;sCACjB,8OAAC,oMAAA,CAAA,QAAK;4BAAC,WAAU;;;;;;sCACjB,8OAAC;sCAAK;;;;;;;;;;;;;;;;;0BAGd,8OAAC,gIAAA,CAAA,cAAW;0BACR,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC,oMAAA,CAAA,QAAK;4BAAC,WAAU;;;;;;sCACjB,8OAAC;4BAAG,WAAU;sCAAyC;;;;;;sCACvD,8OAAC;4BAAE,WAAU;sCAAgB;;;;;;sCAC7B,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC,iIAAA,CAAA,QAAK;gCAAC,SAAQ;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMjD","debugId":null}},
    {"offset": {"line": 7150, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/conflict-radar.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { AlertTriangle, Radar, Shield } from \"lucide-react\"\r\n\r\ninterface TeamMember {\r\n    id: string\r\n    name: string\r\n    role: string\r\n    status: 'active' | 'away' | 'offline' | 'focus'\r\n    avatar: string\r\n    email: string\r\n    phone: string\r\n    joinDate: Date\r\n    aiMotivationType: string\r\n    strengths: string[]\r\n    currentStressLevel: number\r\n    lastTasks: string[]\r\n    openTasks: number\r\n    completedTasks: number\r\n    campaignsInvolved: number\r\n    meetingAttendance: number\r\n    responseSpeed: number\r\n    deadlineCompliance: number\r\n    salary: number\r\n    toolCost: number\r\n    revenueImpact: number\r\n    roi: number\r\n    mood: 'positive' | 'neutral' | 'negative'\r\n    burnoutRisk: number\r\n    focusMode: boolean\r\n    lastActive: Date\r\n    timeSpent: number\r\n    skills: string[]\r\n    desiredSkills: string[]\r\n    mentorId?: string\r\n    menteeIds: string[]\r\n    permissions: string[]\r\n    motivationDrivers: string[]\r\n}\r\n\r\ninterface ConflictRadarProps {\r\n    teamMembers: TeamMember[]\r\n}\r\n\r\nexport function ConflictRadar({ teamMembers }: ConflictRadarProps) {\r\n    return (\r\n        <Card>\r\n            <CardHeader>\r\n                <CardTitle className=\"flex items-center space-x-2\">\r\n                    <Radar className=\"h-5 w-5\" />\r\n                    <span>Conflict Radar</span>\r\n                </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n                <div className=\"text-center py-8\">\r\n                    <Radar className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Conflict Detection</h3>\r\n                    <p className=\"text-gray-500\">Analyze tone and detect potential conflicts</p>\r\n                    <div className=\"mt-4\">\r\n                        <Badge variant=\"outline\">Coming Soon</Badge>\r\n                    </div>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} "],"names":[],"mappings":";;;;AAGA;AACA;AACA;AALA;;;;;AA+CO,SAAS,cAAc,EAAE,WAAW,EAAsB;IAC7D,qBACI,8OAAC,gIAAA,CAAA,OAAI;;0BACD,8OAAC,gIAAA,CAAA,aAAU;0BACP,cAAA,8OAAC,gIAAA,CAAA,YAAS;oBAAC,WAAU;;sCACjB,8OAAC,oMAAA,CAAA,QAAK;4BAAC,WAAU;;;;;;sCACjB,8OAAC;sCAAK;;;;;;;;;;;;;;;;;0BAGd,8OAAC,gIAAA,CAAA,cAAW;0BACR,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC,oMAAA,CAAA,QAAK;4BAAC,WAAU;;;;;;sCACjB,8OAAC;4BAAG,WAAU;sCAAyC;;;;;;sCACvD,8OAAC;4BAAE,WAAU;sCAAgB;;;;;;sCAC7B,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC,iIAAA,CAAA,QAAK;gCAAC,SAAQ;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMjD","debugId":null}},
    {"offset": {"line": 7260, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/ai-mood-stress-tracker.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Brain, Heart, AlertTriangle } from \"lucide-react\"\r\n\r\ninterface TeamMember {\r\n    id: string\r\n    name: string\r\n    role: string\r\n    status: 'active' | 'away' | 'offline' | 'focus'\r\n    avatar: string\r\n    email: string\r\n    phone: string\r\n    joinDate: Date\r\n    aiMotivationType: string\r\n    strengths: string[]\r\n    currentStressLevel: number\r\n    lastTasks: string[]\r\n    openTasks: number\r\n    completedTasks: number\r\n    campaignsInvolved: number\r\n    meetingAttendance: number\r\n    responseSpeed: number\r\n    deadlineCompliance: number\r\n    salary: number\r\n    toolCost: number\r\n    revenueImpact: number\r\n    roi: number\r\n    mood: 'positive' | 'neutral' | 'negative'\r\n    burnoutRisk: number\r\n    focusMode: boolean\r\n    lastActive: Date\r\n    timeSpent: number\r\n    skills: string[]\r\n    desiredSkills: string[]\r\n    mentorId?: string\r\n    menteeIds: string[]\r\n    permissions: string[]\r\n    motivationDrivers: string[]\r\n}\r\n\r\ninterface AIMoodStressTrackerProps {\r\n    teamMembers: TeamMember[]\r\n}\r\n\r\nexport function AIMoodStressTracker({ teamMembers }: AIMoodStressTrackerProps) {\r\n    return (\r\n        <Card>\r\n            <CardHeader>\r\n                <CardTitle className=\"flex items-center space-x-2\">\r\n                    <Brain className=\"h-5 w-5\" />\r\n                    <span>AI Mood & Stress Tracker</span>\r\n                </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n                <div className=\"text-center py-8\">\r\n                    <Brain className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Mental Health Monitoring</h3>\r\n                    <p className=\"text-gray-500\">Detect stress and suggest breaks or check-ins</p>\r\n                    <div className=\"mt-4\">\r\n                        <Badge variant=\"outline\">Coming Soon</Badge>\r\n                    </div>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} "],"names":[],"mappings":";;;;AAGA;AACA;AACA;AALA;;;;;AA+CO,SAAS,oBAAoB,EAAE,WAAW,EAA4B;IACzE,qBACI,8OAAC,gIAAA,CAAA,OAAI;;0BACD,8OAAC,gIAAA,CAAA,aAAU;0BACP,cAAA,8OAAC,gIAAA,CAAA,YAAS;oBAAC,WAAU;;sCACjB,8OAAC,oMAAA,CAAA,QAAK;4BAAC,WAAU;;;;;;sCACjB,8OAAC;sCAAK;;;;;;;;;;;;;;;;;0BAGd,8OAAC,gIAAA,CAAA,cAAW;0BACR,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC,oMAAA,CAAA,QAAK;4BAAC,WAAU;;;;;;sCACjB,8OAAC;4BAAG,WAAU;sCAAyC;;;;;;sCACvD,8OAAC;4BAAE,WAAU;sCAAgB;;;;;;sCAC7B,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC,iIAAA,CAAA,QAAK;gCAAC,SAAQ;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMjD","debugId":null}},
    {"offset": {"line": 7370, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/feedback-generator.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { MessageSquare, Brain } from \"lucide-react\"\r\n\r\ninterface TeamMember {\r\n    id: string\r\n    name: string\r\n    role: string\r\n    status: 'active' | 'away' | 'offline' | 'focus'\r\n    avatar: string\r\n    email: string\r\n    phone: string\r\n    joinDate: Date\r\n    aiMotivationType: string\r\n    strengths: string[]\r\n    currentStressLevel: number\r\n    lastTasks: string[]\r\n    openTasks: number\r\n    completedTasks: number\r\n    campaignsInvolved: number\r\n    meetingAttendance: number\r\n    responseSpeed: number\r\n    deadlineCompliance: number\r\n    salary: number\r\n    toolCost: number\r\n    revenueImpact: number\r\n    roi: number\r\n    mood: 'positive' | 'neutral' | 'negative'\r\n    burnoutRisk: number\r\n    focusMode: boolean\r\n    lastActive: Date\r\n    timeSpent: number\r\n    skills: string[]\r\n    desiredSkills: string[]\r\n    mentorId?: string\r\n    menteeIds: string[]\r\n    permissions: string[]\r\n    motivationDrivers: string[]\r\n}\r\n\r\ninterface FeedbackGeneratorProps {\r\n    teamMembers: TeamMember[]\r\n}\r\n\r\nexport function FeedbackGenerator({ teamMembers }: FeedbackGeneratorProps) {\r\n    return (\r\n        <Card>\r\n            <CardHeader>\r\n                <CardTitle className=\"flex items-center space-x-2\">\r\n                    <MessageSquare className=\"h-5 w-5\" />\r\n                    <span>Feedback Generator</span>\r\n                </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n                <div className=\"text-center py-8\">\r\n                    <MessageSquare className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">AI Feedback</h3>\r\n                    <p className=\"text-gray-500\">Generate weekly feedback for each team member</p>\r\n                    <div className=\"mt-4\">\r\n                        <Badge variant=\"outline\">Coming Soon</Badge>\r\n                    </div>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} "],"names":[],"mappings":";;;;AAGA;AACA;AACA;AALA;;;;;AA+CO,SAAS,kBAAkB,EAAE,WAAW,EAA0B;IACrE,qBACI,8OAAC,gIAAA,CAAA,OAAI;;0BACD,8OAAC,gIAAA,CAAA,aAAU;0BACP,cAAA,8OAAC,gIAAA,CAAA,YAAS;oBAAC,WAAU;;sCACjB,8OAAC,wNAAA,CAAA,gBAAa;4BAAC,WAAU;;;;;;sCACzB,8OAAC;sCAAK;;;;;;;;;;;;;;;;;0BAGd,8OAAC,gIAAA,CAAA,cAAW;0BACR,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC,wNAAA,CAAA,gBAAa;4BAAC,WAAU;;;;;;sCACzB,8OAAC;4BAAG,WAAU;sCAAyC;;;;;;sCACvD,8OAAC;4BAAE,WAAU;sCAAgB;;;;;;sCAC7B,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC,iIAAA,CAAA,QAAK;gCAAC,SAAQ;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMjD","debugId":null}},
    {"offset": {"line": 7480, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/roi-tracker.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { TrendingUp, DollarSign } from \"lucide-react\"\r\n\r\ninterface TeamMember {\r\n    id: string\r\n    name: string\r\n    role: string\r\n    status: 'active' | 'away' | 'offline' | 'focus'\r\n    avatar: string\r\n    email: string\r\n    phone: string\r\n    joinDate: Date\r\n    aiMotivationType: string\r\n    strengths: string[]\r\n    currentStressLevel: number\r\n    lastTasks: string[]\r\n    openTasks: number\r\n    completedTasks: number\r\n    campaignsInvolved: number\r\n    meetingAttendance: number\r\n    responseSpeed: number\r\n    deadlineCompliance: number\r\n    salary: number\r\n    toolCost: number\r\n    revenueImpact: number\r\n    roi: number\r\n    mood: 'positive' | 'neutral' | 'negative'\r\n    burnoutRisk: number\r\n    focusMode: boolean\r\n    lastActive: Date\r\n    timeSpent: number\r\n    skills: string[]\r\n    desiredSkills: string[]\r\n    mentorId?: string\r\n    menteeIds: string[]\r\n    permissions: string[]\r\n    motivationDrivers: string[]\r\n}\r\n\r\ninterface ROITrackerProps {\r\n    teamMembers: TeamMember[]\r\n}\r\n\r\nexport function ROITracker({ teamMembers }: ROITrackerProps) {\r\n    return (\r\n        <Card>\r\n            <CardHeader>\r\n                <CardTitle className=\"flex items-center space-x-2\">\r\n                    <TrendingUp className=\"h-5 w-5\" />\r\n                    <span>ROI Tracker</span>\r\n                </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n                <div className=\"text-center py-8\">\r\n                    <TrendingUp className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Cost vs Value Analysis</h3>\r\n                    <p className=\"text-gray-500\">Track ROI per team member</p>\r\n                    <div className=\"mt-4\">\r\n                        <Badge variant=\"outline\">Coming Soon</Badge>\r\n                    </div>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} "],"names":[],"mappings":";;;;AAGA;AACA;AACA;AALA;;;;;AA+CO,SAAS,WAAW,EAAE,WAAW,EAAmB;IACvD,qBACI,8OAAC,gIAAA,CAAA,OAAI;;0BACD,8OAAC,gIAAA,CAAA,aAAU;0BACP,cAAA,8OAAC,gIAAA,CAAA,YAAS;oBAAC,WAAU;;sCACjB,8OAAC,kNAAA,CAAA,aAAU;4BAAC,WAAU;;;;;;sCACtB,8OAAC;sCAAK;;;;;;;;;;;;;;;;;0BAGd,8OAAC,gIAAA,CAAA,cAAW;0BACR,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC,kNAAA,CAAA,aAAU;4BAAC,WAAU;;;;;;sCACtB,8OAAC;4BAAG,WAAU;sCAAyC;;;;;;sCACvD,8OAAC;4BAAE,WAAU;sCAAgB;;;;;;sCAC7B,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC,iIAAA,CAAA,QAAK;gCAAC,SAAQ;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMjD","debugId":null}},
    {"offset": {"line": 7590, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/learning-tracker.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { BookOpen, GraduationCap } from \"lucide-react\"\r\n\r\ninterface TeamMember {\r\n    id: string\r\n    name: string\r\n    role: string\r\n    status: 'active' | 'away' | 'offline' | 'focus'\r\n    avatar: string\r\n    email: string\r\n    phone: string\r\n    joinDate: Date\r\n    aiMotivationType: string\r\n    strengths: string[]\r\n    currentStressLevel: number\r\n    lastTasks: string[]\r\n    openTasks: number\r\n    completedTasks: number\r\n    campaignsInvolved: number\r\n    meetingAttendance: number\r\n    responseSpeed: number\r\n    deadlineCompliance: number\r\n    salary: number\r\n    toolCost: number\r\n    revenueImpact: number\r\n    roi: number\r\n    mood: 'positive' | 'neutral' | 'negative'\r\n    burnoutRisk: number\r\n    focusMode: boolean\r\n    lastActive: Date\r\n    timeSpent: number\r\n    skills: string[]\r\n    desiredSkills: string[]\r\n    mentorId?: string\r\n    menteeIds: string[]\r\n    permissions: string[]\r\n    motivationDrivers: string[]\r\n}\r\n\r\ninterface LearningTrackerProps {\r\n    teamMembers: TeamMember[]\r\n}\r\n\r\nexport function LearningTracker({ teamMembers }: LearningTrackerProps) {\r\n    return (\r\n        <Card>\r\n            <CardHeader>\r\n                <CardTitle className=\"flex items-center space-x-2\">\r\n                    <BookOpen className=\"h-5 w-5\" />\r\n                    <span>Learning Tracker</span>\r\n                </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n                <div className=\"text-center py-8\">\r\n                    <BookOpen className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Skill Development</h3>\r\n                    <p className=\"text-gray-500\">Track learning progress and recommend resources</p>\r\n                    <div className=\"mt-4\">\r\n                        <Badge variant=\"outline\">Coming Soon</Badge>\r\n                    </div>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} "],"names":[],"mappings":";;;;AAGA;AACA;AACA;AALA;;;;;AA+CO,SAAS,gBAAgB,EAAE,WAAW,EAAwB;IACjE,qBACI,8OAAC,gIAAA,CAAA,OAAI;;0BACD,8OAAC,gIAAA,CAAA,aAAU;0BACP,cAAA,8OAAC,gIAAA,CAAA,YAAS;oBAAC,WAAU;;sCACjB,8OAAC,8MAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACpB,8OAAC;sCAAK;;;;;;;;;;;;;;;;;0BAGd,8OAAC,gIAAA,CAAA,cAAW;0BACR,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC,8MAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACpB,8OAAC;4BAAG,WAAU;sCAAyC;;;;;;sCACvD,8OAAC;4BAAE,WAAU;sCAAgB;;;;;;sCAC7B,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC,iIAAA,CAAA,QAAK;gCAAC,SAAQ;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMjD","debugId":null}},
    {"offset": {"line": 7700, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/private-vault.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Lock, Shield } from \"lucide-react\"\r\n\r\ninterface TeamMember {\r\n    id: string\r\n    name: string\r\n    role: string\r\n    status: 'active' | 'away' | 'offline' | 'focus'\r\n    avatar: string\r\n    email: string\r\n    phone: string\r\n    joinDate: Date\r\n    aiMotivationType: string\r\n    strengths: string[]\r\n    currentStressLevel: number\r\n    lastTasks: string[]\r\n    openTasks: number\r\n    completedTasks: number\r\n    campaignsInvolved: number\r\n    meetingAttendance: number\r\n    responseSpeed: number\r\n    deadlineCompliance: number\r\n    salary: number\r\n    toolCost: number\r\n    revenueImpact: number\r\n    roi: number\r\n    mood: 'positive' | 'neutral' | 'negative'\r\n    burnoutRisk: number\r\n    focusMode: boolean\r\n    lastActive: Date\r\n    timeSpent: number\r\n    skills: string[]\r\n    desiredSkills: string[]\r\n    mentorId?: string\r\n    menteeIds: string[]\r\n    permissions: string[]\r\n    motivationDrivers: string[]\r\n}\r\n\r\ninterface PrivateVaultProps {\r\n    teamMembers: TeamMember[]\r\n}\r\n\r\nexport function PrivateVault({ teamMembers }: PrivateVaultProps) {\r\n    return (\r\n        <Card>\r\n            <CardHeader>\r\n                <CardTitle className=\"flex items-center space-x-2\">\r\n                    <Lock className=\"h-5 w-5\" />\r\n                    <span>Private Vault</span>\r\n                </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n                <div className=\"text-center py-8\">\r\n                    <Lock className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Secure File Storage</h3>\r\n                    <p className=\"text-gray-500\">Private notes and files with permission control</p>\r\n                    <div className=\"mt-4\">\r\n                        <Badge variant=\"outline\">Coming Soon</Badge>\r\n                    </div>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} "],"names":[],"mappings":";;;;AAGA;AACA;AACA;AALA;;;;;AA+CO,SAAS,aAAa,EAAE,WAAW,EAAqB;IAC3D,qBACI,8OAAC,gIAAA,CAAA,OAAI;;0BACD,8OAAC,gIAAA,CAAA,aAAU;0BACP,cAAA,8OAAC,gIAAA,CAAA,YAAS;oBAAC,WAAU;;sCACjB,8OAAC,kMAAA,CAAA,OAAI;4BAAC,WAAU;;;;;;sCAChB,8OAAC;sCAAK;;;;;;;;;;;;;;;;;0BAGd,8OAAC,gIAAA,CAAA,cAAW;0BACR,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC,kMAAA,CAAA,OAAI;4BAAC,WAAU;;;;;;sCAChB,8OAAC;4BAAG,WAAU;sCAAyC;;;;;;sCACvD,8OAAC;4BAAE,WAAU;sCAAgB;;;;;;sCAC7B,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC,iIAAA,CAAA,QAAK;gCAAC,SAAQ;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMjD","debugId":null}},
    {"offset": {"line": 7810, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/task-reflection-log.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { FileText, Brain } from \"lucide-react\"\r\n\r\ninterface TeamMember {\r\n    id: string\r\n    name: string\r\n    role: string\r\n    status: 'active' | 'away' | 'offline' | 'focus'\r\n    avatar: string\r\n    email: string\r\n    phone: string\r\n    joinDate: Date\r\n    aiMotivationType: string\r\n    strengths: string[]\r\n    currentStressLevel: number\r\n    lastTasks: string[]\r\n    openTasks: number\r\n    completedTasks: number\r\n    campaignsInvolved: number\r\n    meetingAttendance: number\r\n    responseSpeed: number\r\n    deadlineCompliance: number\r\n    salary: number\r\n    toolCost: number\r\n    revenueImpact: number\r\n    roi: number\r\n    mood: 'positive' | 'neutral' | 'negative'\r\n    burnoutRisk: number\r\n    focusMode: boolean\r\n    lastActive: Date\r\n    timeSpent: number\r\n    skills: string[]\r\n    desiredSkills: string[]\r\n    mentorId?: string\r\n    menteeIds: string[]\r\n    permissions: string[]\r\n    motivationDrivers: string[]\r\n}\r\n\r\ninterface TaskReflectionLogProps {\r\n    teamMembers: TeamMember[]\r\n}\r\n\r\nexport function TaskReflectionLog({ teamMembers }: TaskReflectionLogProps) {\r\n    return (\r\n        <Card>\r\n            <CardHeader>\r\n                <CardTitle className=\"flex items-center space-x-2\">\r\n                    <FileText className=\"h-5 w-5\" />\r\n                    <span>Task Reflection Log</span>\r\n                </CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n                <div className=\"text-center py-8\">\r\n                    <FileText className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\r\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Post-Task Analysis</h3>\r\n                    <p className=\"text-gray-500\">Reflect on completed tasks and generate insights</p>\r\n                    <div className=\"mt-4\">\r\n                        <Badge variant=\"outline\">Coming Soon</Badge>\r\n                    </div>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} "],"names":[],"mappings":";;;;AAGA;AACA;AACA;AALA;;;;;AA+CO,SAAS,kBAAkB,EAAE,WAAW,EAA0B;IACrE,qBACI,8OAAC,gIAAA,CAAA,OAAI;;0BACD,8OAAC,gIAAA,CAAA,aAAU;0BACP,cAAA,8OAAC,gIAAA,CAAA,YAAS;oBAAC,WAAU;;sCACjB,8OAAC,8MAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACpB,8OAAC;sCAAK;;;;;;;;;;;;;;;;;0BAGd,8OAAC,gIAAA,CAAA,cAAW;0BACR,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC,8MAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;sCACpB,8OAAC;4BAAG,WAAU;sCAAyC;;;;;;sCACvD,8OAAC;4BAAE,WAAU;sCAAgB;;;;;;sCAC7B,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC,iIAAA,CAAA,QAAK;gCAAC,SAAQ;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMjD","debugId":null}},
    {"offset": {"line": 7920, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/decision-log-system.tsx"],"sourcesContent":["\"use client\"\r\nimport React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { FileText } from \"lucide-react\"\r\n\r\nexport function DecisionLogSystem({ teamMembers }: { teamMembers: any[] }) {\r\n    return (\r\n        <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Decision Log System</CardTitle>\r\n                <FileText className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n                <div className=\"flex items-center justify-between\">\r\n                    <div className=\"space-y-1\">\r\n                        <p className=\"text-sm text-muted-foreground\">\r\n                            Track key decisions with AI review after 7-10 days\r\n                        </p>\r\n                    </div>\r\n                    <Badge variant=\"secondary\">Coming Soon</Badge>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMO,SAAS,kBAAkB,EAAE,WAAW,EAA0B;IACrE,qBACI,8OAAC,gIAAA,CAAA,OAAI;;0BACD,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCAClB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAsB;;;;;;kCAC3C,8OAAC,8MAAA,CAAA,WAAQ;wBAAC,WAAU;;;;;;;;;;;;0BAExB,8OAAC,gIAAA,CAAA,cAAW;0BACR,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC;gCAAE,WAAU;0CAAgC;;;;;;;;;;;sCAIjD,8OAAC,iIAAA,CAAA,QAAK;4BAAC,SAAQ;sCAAY;;;;;;;;;;;;;;;;;;;;;;;AAK/C","debugId":null}},
    {"offset": {"line": 8010, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/highlights-board.tsx"],"sourcesContent":["\"use client\"\r\nimport React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Star } from \"lucide-react\"\r\n\r\nexport function HighlightsBoard({ teamMembers }: { teamMembers: any[] }) {\r\n    return (\r\n        <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Highlights Board</CardTitle>\r\n                <Star className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n                <div className=\"flex items-center justify-between\">\r\n                    <div className=\"space-y-1\">\r\n                        <p className=\"text-sm text-muted-foreground\">\r\n                            AI-selected top 3 team wins and achievements\r\n                        </p>\r\n                    </div>\r\n                    <Badge variant=\"secondary\">Coming Soon</Badge>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMO,SAAS,gBAAgB,EAAE,WAAW,EAA0B;IACnE,qBACI,8OAAC,gIAAA,CAAA,OAAI;;0BACD,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCAClB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAsB;;;;;;kCAC3C,8OAAC,kMAAA,CAAA,OAAI;wBAAC,WAAU;;;;;;;;;;;;0BAEpB,8OAAC,gIAAA,CAAA,cAAW;0BACR,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC;gCAAE,WAAU;0CAAgC;;;;;;;;;;;sCAIjD,8OAAC,iIAAA,CAAA,QAAK;4BAAC,SAAQ;sCAAY;;;;;;;;;;;;;;;;;;;;;;;AAK/C","debugId":null}},
    {"offset": {"line": 8100, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/pulse-polls.tsx"],"sourcesContent":["\"use client\"\r\nimport React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { BarChart3 } from \"lucide-react\"\r\n\r\nexport function PulsePolls({ teamMembers }: { teamMembers: any[] }) {\r\n    return (\r\n        <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Pulse Polls</CardTitle>\r\n                <BarChart3 className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n                <div className=\"flex items-center justify-between\">\r\n                    <div className=\"space-y-1\">\r\n                        <p className=\"text-sm text-muted-foreground\">\r\n                            Auto-created AI surveys every 10 days\r\n                        </p>\r\n                    </div>\r\n                    <Badge variant=\"secondary\">Coming Soon</Badge>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMO,SAAS,WAAW,EAAE,WAAW,EAA0B;IAC9D,qBACI,8OAAC,gIAAA,CAAA,OAAI;;0BACD,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCAClB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAsB;;;;;;kCAC3C,8OAAC,kNAAA,CAAA,YAAS;wBAAC,WAAU;;;;;;;;;;;;0BAEzB,8OAAC,gIAAA,CAAA,cAAW;0BACR,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC;gCAAE,WAAU;0CAAgC;;;;;;;;;;;sCAIjD,8OAAC,iIAAA,CAAA,QAAK;4BAAC,SAAQ;sCAAY;;;;;;;;;;;;;;;;;;;;;;;AAK/C","debugId":null}},
    {"offset": {"line": 8190, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/project-involvement-matrix.tsx"],"sourcesContent":["\"use client\"\r\nimport React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Users2 } from \"lucide-react\"\r\n\r\nexport function ProjectInvolvementMatrix({ teamMembers }: { teamMembers: any[] }) {\r\n    return (\r\n        <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Project Involvement Matrix</CardTitle>\r\n                <Users2 className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n                <div className=\"flex items-center justify-between\">\r\n                    <div className=\"space-y-1\">\r\n                        <p className=\"text-sm text-muted-foreground\">\r\n                            Heatmap of member contribution across projects\r\n                        </p>\r\n                    </div>\r\n                    <Badge variant=\"secondary\">Coming Soon</Badge>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMO,SAAS,yBAAyB,EAAE,WAAW,EAA0B;IAC5E,qBACI,8OAAC,gIAAA,CAAA,OAAI;;0BACD,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCAClB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAsB;;;;;;kCAC3C,8OAAC,8MAAA,CAAA,SAAM;wBAAC,WAAU;;;;;;;;;;;;0BAEtB,8OAAC,gIAAA,CAAA,cAAW;0BACR,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC;gCAAE,WAAU;0CAAgC;;;;;;;;;;;sCAIjD,8OAAC,iIAAA,CAAA,QAAK;4BAAC,SAAQ;sCAAY;;;;;;;;;;;;;;;;;;;;;;;AAK/C","debugId":null}},
    {"offset": {"line": 8280, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/focus-mode.tsx"],"sourcesContent":["\"use client\"\r\nimport React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Eye } from \"lucide-react\"\r\n\r\nexport function FocusMode({ teamMembers }: { teamMembers: any[] }) {\r\n    return (\r\n        <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Focus Mode</CardTitle>\r\n                <Eye className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n                <div className=\"flex items-center justify-between\">\r\n                    <div className=\"space-y-1\">\r\n                        <p className=\"text-sm text-muted-foreground\">\r\n                            Mute alerts and show focus status\r\n                        </p>\r\n                    </div>\r\n                    <Badge variant=\"secondary\">Coming Soon</Badge>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMO,SAAS,UAAU,EAAE,WAAW,EAA0B;IAC7D,qBACI,8OAAC,gIAAA,CAAA,OAAI;;0BACD,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCAClB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAsB;;;;;;kCAC3C,8OAAC,gMAAA,CAAA,MAAG;wBAAC,WAAU;;;;;;;;;;;;0BAEnB,8OAAC,gIAAA,CAAA,cAAW;0BACR,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC;gCAAE,WAAU;0CAAgC;;;;;;;;;;;sCAIjD,8OAAC,iIAAA,CAAA,QAAK;4BAAC,SAAQ;sCAAY;;;;;;;;;;;;;;;;;;;;;;;AAK/C","debugId":null}},
    {"offset": {"line": 8370, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/distraction-tracker.tsx"],"sourcesContent":["\"use client\"\r\nimport React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { AlertTriangle } from \"lucide-react\"\r\n\r\nexport function DistractionTracker({ teamMembers }: { teamMembers: any[] }) {\r\n    return (\r\n        <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Distraction Tracker</CardTitle>\r\n                <AlertTriangle className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n                <div className=\"flex items-center justify-between\">\r\n                    <div className=\"space-y-1\">\r\n                        <p className=\"text-sm text-muted-foreground\">\r\n                            Detect slow response and quality drops\r\n                        </p>\r\n                    </div>\r\n                    <Badge variant=\"secondary\">Coming Soon</Badge>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMO,SAAS,mBAAmB,EAAE,WAAW,EAA0B;IACtE,qBACI,8OAAC,gIAAA,CAAA,OAAI;;0BACD,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCAClB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAsB;;;;;;kCAC3C,8OAAC,wNAAA,CAAA,gBAAa;wBAAC,WAAU;;;;;;;;;;;;0BAE7B,8OAAC,gIAAA,CAAA,cAAW;0BACR,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC;gCAAE,WAAU;0CAAgC;;;;;;;;;;;sCAIjD,8OAAC,iIAAA,CAAA,QAAK;4BAAC,SAAQ;sCAAY;;;;;;;;;;;;;;;;;;;;;;;AAK/C","debugId":null}},
    {"offset": {"line": 8460, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/role-matching-system.tsx"],"sourcesContent":["\"use client\"\r\nimport React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Target } from \"lucide-react\"\r\n\r\nexport function RoleMatchingSystem({ teamMembers }: { teamMembers: any[] }) {\r\n    return (\r\n        <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Role Matching System</CardTitle>\r\n                <Target className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n                <div className=\"flex items-center justify-between\">\r\n                    <div className=\"space-y-1\">\r\n                        <p className=\"text-sm text-muted-foreground\">\r\n                            Map strengths and suggest task reassignments\r\n                        </p>\r\n                    </div>\r\n                    <Badge variant=\"secondary\">Coming Soon</Badge>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMO,SAAS,mBAAmB,EAAE,WAAW,EAA0B;IACtE,qBACI,8OAAC,gIAAA,CAAA,OAAI;;0BACD,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCAClB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAsB;;;;;;kCAC3C,8OAAC,sMAAA,CAAA,SAAM;wBAAC,WAAU;;;;;;;;;;;;0BAEtB,8OAAC,gIAAA,CAAA,cAAW;0BACR,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC;gCAAE,WAAU;0CAAgC;;;;;;;;;;;sCAIjD,8OAAC,iIAAA,CAAA,QAAK;4BAAC,SAAQ;sCAAY;;;;;;;;;;;;;;;;;;;;;;;AAK/C","debugId":null}},
    {"offset": {"line": 8550, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/motivation-drivers.tsx"],"sourcesContent":["\"use client\"\r\nimport React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Zap } from \"lucide-react\"\r\n\r\nexport function MotivationDrivers({ teamMembers }: { teamMembers: any[] }) {\r\n    return (\r\n        <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Motivation Drivers</CardTitle>\r\n                <Zap className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n                <div className=\"flex items-center justify-between\">\r\n                    <div className=\"space-y-1\">\r\n                        <p className=\"text-sm text-muted-foreground\">\r\n                            Track individual motivators and drivers\r\n                        </p>\r\n                    </div>\r\n                    <Badge variant=\"secondary\">Coming Soon</Badge>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMO,SAAS,kBAAkB,EAAE,WAAW,EAA0B;IACrE,qBACI,8OAAC,gIAAA,CAAA,OAAI;;0BACD,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCAClB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAsB;;;;;;kCAC3C,8OAAC,gMAAA,CAAA,MAAG;wBAAC,WAAU;;;;;;;;;;;;0BAEnB,8OAAC,gIAAA,CAAA,cAAW;0BACR,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC;gCAAE,WAAU;0CAAgC;;;;;;;;;;;sCAIjD,8OAAC,iIAAA,CAAA,QAAK;4BAAC,SAAQ;sCAAY;;;;;;;;;;;;;;;;;;;;;;;AAK/C","debugId":null}},
    {"offset": {"line": 8640, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/mentorship-matcher.tsx"],"sourcesContent":["\"use client\"\r\nimport React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { GraduationCap } from \"lucide-react\"\r\n\r\nexport function MentorshipMatcher({ teamMembers }: { teamMembers: any[] }) {\r\n    return (\r\n        <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Mentorship Matcher</CardTitle>\r\n                <GraduationCap className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n                <div className=\"flex items-center justify-between\">\r\n                    <div className=\"space-y-1\">\r\n                        <p className=\"text-sm text-muted-foreground\">\r\n                            Suggest mentor-mentee relationships\r\n                        </p>\r\n                    </div>\r\n                    <Badge variant=\"secondary\">Coming Soon</Badge>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMO,SAAS,kBAAkB,EAAE,WAAW,EAA0B;IACrE,qBACI,8OAAC,gIAAA,CAAA,OAAI;;0BACD,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCAClB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAsB;;;;;;kCAC3C,8OAAC,wNAAA,CAAA,gBAAa;wBAAC,WAAU;;;;;;;;;;;;0BAE7B,8OAAC,gIAAA,CAAA,cAAW;0BACR,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC;gCAAE,WAAU;0CAAgC;;;;;;;;;;;sCAIjD,8OAAC,iIAAA,CAAA,QAAK;4BAAC,SAAQ;sCAAY;;;;;;;;;;;;;;;;;;;;;;;AAK/C","debugId":null}},
    {"offset": {"line": 8730, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/leadership-lens.tsx"],"sourcesContent":["\"use client\"\r\nimport React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Crown } from \"lucide-react\"\r\n\r\nexport function LeadershipLens({ teamMembers }: { teamMembers: any[] }) {\r\n    return (\r\n        <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Leadership Lens</CardTitle>\r\n                <Crown className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n                <div className=\"flex items-center justify-between\">\r\n                    <div className=\"space-y-1\">\r\n                        <p className=\"text-sm text-muted-foreground\">\r\n                            Team structure insights for admins\r\n                        </p>\r\n                    </div>\r\n                    <Badge variant=\"secondary\">Coming Soon</Badge>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMO,SAAS,eAAe,EAAE,WAAW,EAA0B;IAClE,qBACI,8OAAC,gIAAA,CAAA,OAAI;;0BACD,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCAClB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAsB;;;;;;kCAC3C,8OAAC,oMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;;;;;;;0BAErB,8OAAC,gIAAA,CAAA,cAAW;0BACR,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC;gCAAE,WAAU;0CAAgC;;;;;;;;;;;sCAIjD,8OAAC,iIAAA,CAAA,QAAK;4BAAC,SAAQ;sCAAY;;;;;;;;;;;;;;;;;;;;;;;AAK/C","debugId":null}},
    {"offset": {"line": 8820, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/burnout-radar.tsx"],"sourcesContent":["\"use client\"\r\nimport React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { AlertCircle } from \"lucide-react\"\r\n\r\nexport function BurnoutRadar({ teamMembers }: { teamMembers: any[] }) {\r\n    return (\r\n        <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Burnout Radar</CardTitle>\r\n                <AlertCircle className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n                <div className=\"flex items-center justify-between\">\r\n                    <div className=\"space-y-1\">\r\n                        <p className=\"text-sm text-muted-foreground\">\r\n                            Track overload and burnout risk\r\n                        </p>\r\n                    </div>\r\n                    <Badge variant=\"secondary\">Coming Soon</Badge>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMO,SAAS,aAAa,EAAE,WAAW,EAA0B;IAChE,qBACI,8OAAC,gIAAA,CAAA,OAAI;;0BACD,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCAClB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAsB;;;;;;kCAC3C,8OAAC,oNAAA,CAAA,cAAW;wBAAC,WAAU;;;;;;;;;;;;0BAE3B,8OAAC,gIAAA,CAAA,cAAW;0BACR,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC;gCAAE,WAAU;0CAAgC;;;;;;;;;;;sCAIjD,8OAAC,iIAAA,CAAA,QAAK;4BAAC,SAAQ;sCAAY;;;;;;;;;;;;;;;;;;;;;;;AAK/C","debugId":null}},
    {"offset": {"line": 8910, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/anonymous-feedback-engine.tsx"],"sourcesContent":["\"use client\"\r\nimport React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Shield } from \"lucide-react\"\r\n\r\nexport function AnonymousFeedbackEngine({ teamMembers }: { teamMembers: any[] }) {\r\n    return (\r\n        <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Anonymous Feedback Engine</CardTitle>\r\n                <Shield className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n                <div className=\"flex items-center justify-between\">\r\n                    <div className=\"space-y-1\">\r\n                        <p className=\"text-sm text-muted-foreground\">\r\n                            Anonymous team feedback with AI insights\r\n                        </p>\r\n                    </div>\r\n                    <Badge variant=\"secondary\">Coming Soon</Badge>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMO,SAAS,wBAAwB,EAAE,WAAW,EAA0B;IAC3E,qBACI,8OAAC,gIAAA,CAAA,OAAI;;0BACD,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCAClB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAsB;;;;;;kCAC3C,8OAAC,sMAAA,CAAA,SAAM;wBAAC,WAAU;;;;;;;;;;;;0BAEtB,8OAAC,gIAAA,CAAA,cAAW;0BACR,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC;gCAAE,WAAU;0CAAgC;;;;;;;;;;;sCAIjD,8OAAC,iIAAA,CAAA,QAAK;4BAAC,SAAQ;sCAAY;;;;;;;;;;;;;;;;;;;;;;;AAK/C","debugId":null}},
    {"offset": {"line": 9000, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/cost-value-analysis.tsx"],"sourcesContent":["\"use client\"\r\nimport React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Scale } from \"lucide-react\"\r\n\r\nexport function CostValueAnalysis({ teamMembers }: { teamMembers: any[] }) {\r\n    return (\r\n        <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">Cost Value Analysis</CardTitle>\r\n                <Scale className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n                <div className=\"flex items-center justify-between\">\r\n                    <div className=\"space-y-1\">\r\n                        <p className=\"text-sm text-muted-foreground\">\r\n                            Time spent vs revenue per task\r\n                        </p>\r\n                    </div>\r\n                    <Badge variant=\"secondary\">Coming Soon</Badge>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMO,SAAS,kBAAkB,EAAE,WAAW,EAA0B;IACrE,qBACI,8OAAC,gIAAA,CAAA,OAAI;;0BACD,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCAClB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAsB;;;;;;kCAC3C,8OAAC,oMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;;;;;;;0BAErB,8OAAC,gIAAA,CAAA,cAAW;0BACR,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC;gCAAE,WAAU;0CAAgC;;;;;;;;;;;sCAIjD,8OAAC,iIAAA,CAAA,QAAK;4BAAC,SAAQ;sCAAY;;;;;;;;;;;;;;;;;;;;;;;AAK/C","debugId":null}},
    {"offset": {"line": 9090, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/ai-smart-suggestions-engine.tsx"],"sourcesContent":["\"use client\"\r\nimport React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Brain } from \"lucide-react\"\r\n\r\nexport function AISmartSuggestionsEngine({ teamMembers }: { teamMembers: any[] }) {\r\n    return (\r\n        <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">AI Smart Suggestions Engine</CardTitle>\r\n                <Brain className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n                <div className=\"flex items-center justify-between\">\r\n                    <div className=\"space-y-1\">\r\n                        <p className=\"text-sm text-muted-foreground\">\r\n                            Auto-suggestions and smart triggers\r\n                        </p>\r\n                    </div>\r\n                    <Badge variant=\"secondary\">Coming Soon</Badge>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMO,SAAS,yBAAyB,EAAE,WAAW,EAA0B;IAC5E,qBACI,8OAAC,gIAAA,CAAA,OAAI;;0BACD,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCAClB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAsB;;;;;;kCAC3C,8OAAC,oMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;;;;;;;0BAErB,8OAAC,gIAAA,CAAA,cAAW;0BACR,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC;gCAAE,WAAU;0CAAgC;;;;;;;;;;;sCAIjD,8OAAC,iIAAA,CAAA,QAAK;4BAAC,SAAQ;sCAAY;;;;;;;;;;;;;;;;;;;;;;;AAK/C","debugId":null}},
    {"offset": {"line": 9180, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/ai-micro-sprint-mode.tsx"],"sourcesContent":["\"use client\"\r\nimport React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Clock } from \"lucide-react\"\r\n\r\nexport function AIMicroSprintMode({ teamMembers }: { teamMembers: any[] }) {\r\n    return (\r\n        <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">AI Micro Sprint Mode</CardTitle>\r\n                <Clock className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n                <div className=\"flex items-center justify-between\">\r\n                    <div className=\"space-y-1\">\r\n                        <p className=\"text-sm text-muted-foreground\">\r\n                            Focused 2-hour task sessions with AI motivation\r\n                        </p>\r\n                    </div>\r\n                    <Badge variant=\"secondary\">Coming Soon</Badge>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMO,SAAS,kBAAkB,EAAE,WAAW,EAA0B;IACrE,qBACI,8OAAC,gIAAA,CAAA,OAAI;;0BACD,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCAClB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAsB;;;;;;kCAC3C,8OAAC,oMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;;;;;;;0BAErB,8OAAC,gIAAA,CAAA,cAAW;0BACR,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC;gCAAE,WAAU;0CAAgC;;;;;;;;;;;sCAIjD,8OAAC,iIAAA,CAAA,QAAK;4BAAC,SAAQ;sCAAY;;;;;;;;;;;;;;;;;;;;;;;AAK/C","debugId":null}},
    {"offset": {"line": 9270, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/components/external-sync.tsx"],"sourcesContent":["\"use client\"\r\nimport React from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Link } from \"lucide-react\"\r\n\r\nexport function ExternalSync({ teamMembers }: { teamMembers: any[] }) {\r\n    return (\r\n        <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\r\n                <CardTitle className=\"text-sm font-medium\">External Sync</CardTitle>\r\n                <Link className=\"h-4 w-4 text-muted-foreground\" />\r\n            </CardHeader>\r\n            <CardContent>\r\n                <div className=\"flex items-center justify-between\">\r\n                    <div className=\"space-y-1\">\r\n                        <p className=\"text-sm text-muted-foreground\">\r\n                            Auto sync with Google Meet, Zoom, Notion, Slack\r\n                        </p>\r\n                    </div>\r\n                    <Badge variant=\"secondary\">Coming Soon</Badge>\r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMO,SAAS,aAAa,EAAE,WAAW,EAA0B;IAChE,qBACI,8OAAC,gIAAA,CAAA,OAAI;;0BACD,8OAAC,gIAAA,CAAA,aAAU;gBAAC,WAAU;;kCAClB,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;kCAAsB;;;;;;kCAC3C,8OAAC,kMAAA,CAAA,OAAI;wBAAC,WAAU;;;;;;;;;;;;0BAEpB,8OAAC,gIAAA,CAAA,cAAW;0BACR,cAAA,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAI,WAAU;sCACX,cAAA,8OAAC;gCAAE,WAAU;0CAAgC;;;;;;;;;;;sCAIjD,8OAAC,iIAAA,CAAA,QAAK;4BAAC,SAAQ;sCAAY;;;;;;;;;;;;;;;;;;;;;;;AAK/C","debugId":null}},
    {"offset": {"line": 9360, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/src/components/dashboard/team-manager/index.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { useState, useEffect } from \"react\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Badge } from \"@/components/ui/badge\"\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\"\r\nimport { Progress } from \"@/components/ui/progress\"\r\nimport { Alert, AlertDescription } from \"@/components/ui/alert\"\r\nimport { Switch } from \"@/components/ui/switch\"\r\nimport {\r\n    Users, UserPlus, TrendingUp, Award, Calendar, MessageSquare,\r\n    Activity, Heart, Brain, Shield, Target, Zap, Star, Clock,\r\n    AlertTriangle, CheckCircle, XCircle, Plus, Settings, BarChart3,\r\n    RefreshCw, Eye, EyeOff, Lock, Unlock, Crown, Gift,\r\n    Users2, UserCheck, UserX, UserMinus, UserPlus2, UserCog\r\n} from \"lucide-react\"\r\n\r\n// Import all sub-modules\r\nimport { TeamMembersDirectory } from \"./components/team-members-directory\"\r\nimport { PerformanceTracker } from \"./components/performance-tracker\"\r\nimport { RewardBonusEngine } from \"./components/reward-bonus-engine\"\r\nimport { MeetingManager } from \"./components/meeting-manager\"\r\nimport { ChatSystem } from \"./components/chat-system\"\r\nimport { AttendanceActivityHeatmap } from \"./components/attendance-activity-heatmap\"\r\nimport { WeeklyMoodCheck } from \"./components/weekly-mood-check\"\r\nimport { WorkloadBalancer } from \"./components/workload-balancer\"\r\nimport { ConflictRadar } from \"./components/conflict-radar\"\r\nimport { AIMoodStressTracker } from \"./components/ai-mood-stress-tracker\"\r\nimport { FeedbackGenerator } from \"./components/feedback-generator\"\r\nimport { ROITracker } from \"./components/roi-tracker\"\r\nimport { LearningTracker } from \"./components/learning-tracker\"\r\nimport { PrivateVault } from \"./components/private-vault\"\r\nimport { TaskReflectionLog } from \"./components/task-reflection-log\"\r\nimport { DecisionLogSystem } from \"./components/decision-log-system\"\r\nimport { HighlightsBoard } from \"./components/highlights-board\"\r\nimport { PulsePolls } from \"./components/pulse-polls\"\r\nimport { ProjectInvolvementMatrix } from \"./components/project-involvement-matrix\"\r\nimport { FocusMode } from \"./components/focus-mode\"\r\nimport { DistractionTracker } from \"./components/distraction-tracker\"\r\nimport { RoleMatchingSystem } from \"./components/role-matching-system\"\r\nimport { MotivationDrivers } from \"./components/motivation-drivers\"\r\nimport { MentorshipMatcher } from \"./components/mentorship-matcher\"\r\nimport { LeadershipLens } from \"./components/leadership-lens\"\r\nimport { BurnoutRadar } from \"./components/burnout-radar\"\r\nimport { AnonymousFeedbackEngine } from \"./components/anonymous-feedback-engine\"\r\nimport { CostValueAnalysis } from \"./components/cost-value-analysis\"\r\nimport { AISmartSuggestionsEngine } from \"./components/ai-smart-suggestions-engine\"\r\nimport { AIMicroSprintMode } from \"./components/ai-micro-sprint-mode\"\r\nimport { ExternalSync } from \"./components/external-sync\"\r\n\r\n// Types\r\ninterface TeamMember {\r\n    id: string\r\n    name: string\r\n    role: string\r\n    status: 'active' | 'away' | 'offline' | 'focus'\r\n    avatar: string\r\n    email: string\r\n    phone: string\r\n    joinDate: Date\r\n    aiMotivationType: string\r\n    strengths: string[]\r\n    currentStressLevel: number\r\n    lastTasks: string[]\r\n    openTasks: number\r\n    completedTasks: number\r\n    campaignsInvolved: number\r\n    meetingAttendance: number\r\n    responseSpeed: number\r\n    deadlineCompliance: number\r\n    salary: number\r\n    toolCost: number\r\n    revenueImpact: number\r\n    roi: number\r\n    mood: 'positive' | 'neutral' | 'negative'\r\n    burnoutRisk: number\r\n    focusMode: boolean\r\n    lastActive: Date\r\n    timeSpent: number\r\n    skills: string[]\r\n    desiredSkills: string[]\r\n    mentorId?: string\r\n    menteeIds: string[]\r\n    permissions: string[]\r\n    motivationDrivers: string[]\r\n}\r\n\r\ninterface TeamStats {\r\n    totalMembers: number\r\n    activeMembers: number\r\n    averagePerformance: number\r\n    totalROI: number\r\n    averageMood: number\r\n    activeMeetings: number\r\n    pendingTasks: number\r\n    conflictsDetected: number\r\n    burnoutAlerts: number\r\n}\r\n\r\nfunction TeamManager() {\r\n    const [activeTab, setActiveTab] = useState(\"overview\")\r\n    const [teamMembers, setTeamMembers] = useState<TeamMember[]>([])\r\n    const [teamStats, setTeamStats] = useState<TeamStats | null>(null)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [loadError, setLoadError] = useState<string | null>(null)\r\n    const [focusModeEnabled, setFocusModeEnabled] = useState(false)\r\n\r\n    const loadTeamData = async () => {\r\n        setIsLoading(true)\r\n        try {\r\n            // Simulate API call\r\n            await new Promise(resolve => setTimeout(resolve, 1000))\r\n\r\n            // Mock data for demonstration\r\n            const mockMembers: TeamMember[] = [\r\n                {\r\n                    id: '1',\r\n                    name: 'Ahmed Hassan',\r\n                    role: 'Senior Campaign Manager',\r\n                    status: 'active',\r\n                    avatar: '/avatars/ahmed.jpg',\r\n                    email: 'ahmed@essentials.com',\r\n                    phone: '+20 100 123 4567',\r\n                    joinDate: new Date('2023-01-15'),\r\n                    aiMotivationType: 'Achievement-Driven',\r\n                    strengths: ['Campaign Strategy', 'Client Relations', 'Analytics'],\r\n                    currentStressLevel: 25,\r\n                    lastTasks: ['Campaign A Optimization', 'Client Meeting', 'ROI Analysis'],\r\n                    openTasks: 3,\r\n                    completedTasks: 156,\r\n                    campaignsInvolved: 12,\r\n                    meetingAttendance: 95,\r\n                    responseSpeed: 92,\r\n                    deadlineCompliance: 98,\r\n                    salary: 15000,\r\n                    toolCost: 2000,\r\n                    revenueImpact: 95000,\r\n                    roi: 5.6,\r\n                    mood: 'positive',\r\n                    burnoutRisk: 15,\r\n                    focusMode: false,\r\n                    lastActive: new Date(),\r\n                    timeSpent: 42,\r\n                    skills: ['Facebook Ads', 'Google Ads', 'Analytics'],\r\n                    desiredSkills: ['TikTok Ads', 'Advanced Analytics'],\r\n                    menteeIds: ['2', '3'],\r\n                    permissions: ['admin', 'campaign_manager'],\r\n                    motivationDrivers: ['Recognition', 'Challenge', 'Money']\r\n                },\r\n                {\r\n                    id: '2',\r\n                    name: 'Nada El-Sayed',\r\n                    role: 'Content Creator',\r\n                    status: 'focus',\r\n                    avatar: '/avatars/nada.jpg',\r\n                    email: 'nada@essentials.com',\r\n                    phone: '+20 100 123 4568',\r\n                    joinDate: new Date('2023-03-20'),\r\n                    aiMotivationType: 'Creative-Expression',\r\n                    strengths: ['Content Creation', 'Visual Design', 'Trend Analysis'],\r\n                    currentStressLevel: 35,\r\n                    lastTasks: ['Instagram Reel', 'Brand Guidelines', 'Content Calendar'],\r\n                    openTasks: 5,\r\n                    completedTasks: 89,\r\n                    campaignsInvolved: 8,\r\n                    meetingAttendance: 88,\r\n                    responseSpeed: 85,\r\n                    deadlineCompliance: 92,\r\n                    salary: 12000,\r\n                    toolCost: 1500,\r\n                    revenueImpact: 65000,\r\n                    roi: 4.8,\r\n                    mood: 'neutral',\r\n                    burnoutRisk: 25,\r\n                    focusMode: true,\r\n                    lastActive: new Date(),\r\n                    timeSpent: 38,\r\n                    skills: ['Adobe Creative Suite', 'Social Media', 'Copywriting'],\r\n                    desiredSkills: ['Video Editing', 'Motion Graphics'],\r\n                    mentorId: '1',\r\n                    menteeIds: [],\r\n                    permissions: ['content_creator'],\r\n                    motivationDrivers: ['Autonomy', 'Recognition', 'Challenge']\r\n                },\r\n                {\r\n                    id: '3',\r\n                    name: 'Omar Khalil',\r\n                    role: 'Data Analyst',\r\n                    status: 'active',\r\n                    avatar: '/avatars/omar.jpg',\r\n                    email: 'omar@essentials.com',\r\n                    phone: '+20 100 123 4569',\r\n                    joinDate: new Date('2023-02-10'),\r\n                    aiMotivationType: 'Problem-Solver',\r\n                    strengths: ['Data Analysis', 'Reporting', 'Automation'],\r\n                    currentStressLevel: 20,\r\n                    lastTasks: ['Monthly Report', 'KPI Dashboard', 'Data Cleanup'],\r\n                    openTasks: 2,\r\n                    completedTasks: 234,\r\n                    campaignsInvolved: 15,\r\n                    meetingAttendance: 98,\r\n                    responseSpeed: 96,\r\n                    deadlineCompliance: 99,\r\n                    salary: 14000,\r\n                    toolCost: 1800,\r\n                    revenueImpact: 110000,\r\n                    roi: 6.2,\r\n                    mood: 'positive',\r\n                    burnoutRisk: 10,\r\n                    focusMode: false,\r\n                    lastActive: new Date(),\r\n                    timeSpent: 45,\r\n                    skills: ['SQL', 'Python', 'Tableau', 'Excel'],\r\n                    desiredSkills: ['Machine Learning', 'Advanced SQL'],\r\n                    mentorId: '1',\r\n                    menteeIds: [],\r\n                    permissions: ['data_analyst'],\r\n                    motivationDrivers: ['Challenge', 'Autonomy', 'Money']\r\n                },\r\n                {\r\n                    id: '4',\r\n                    name: 'Farouk Ali',\r\n                    role: 'Junior Campaign Manager',\r\n                    status: 'away',\r\n                    avatar: '/avatars/farouk.jpg',\r\n                    email: 'farouk@essentials.com',\r\n                    phone: '+20 100 123 4570',\r\n                    joinDate: new Date('2023-06-01'),\r\n                    aiMotivationType: 'Growth-Seeker',\r\n                    strengths: ['Quick Learning', 'Team Collaboration', 'Execution'],\r\n                    currentStressLevel: 45,\r\n                    lastTasks: ['Campaign Setup', 'Ad Copy Testing', 'Performance Review'],\r\n                    openTasks: 7,\r\n                    completedTasks: 67,\r\n                    campaignsInvolved: 6,\r\n                    meetingAttendance: 82,\r\n                    responseSpeed: 78,\r\n                    deadlineCompliance: 85,\r\n                    salary: 9000,\r\n                    toolCost: 1200,\r\n                    revenueImpact: 35000,\r\n                    roi: 3.2,\r\n                    mood: 'negative',\r\n                    burnoutRisk: 40,\r\n                    focusMode: false,\r\n                    lastActive: new Date(Date.now() - 2 * 60 * 60 * 1000),\r\n                    timeSpent: 35,\r\n                    skills: ['Facebook Ads', 'Basic Analytics', 'Client Communication'],\r\n                    desiredSkills: ['Advanced Analytics', 'Campaign Strategy'],\r\n                    mentorId: '1',\r\n                    menteeIds: [],\r\n                    permissions: ['junior_campaign_manager'],\r\n                    motivationDrivers: ['Growth', 'Recognition', 'Money']\r\n                }\r\n            ]\r\n\r\n            const mockStats: TeamStats = {\r\n                totalMembers: 4,\r\n                activeMembers: 3,\r\n                averagePerformance: 89.5,\r\n                totalROI: 4.95,\r\n                averageMood: 75,\r\n                activeMeetings: 2,\r\n                pendingTasks: 17,\r\n                conflictsDetected: 1,\r\n                burnoutAlerts: 2\r\n            }\r\n\r\n            setTeamMembers(mockMembers)\r\n            setTeamStats(mockStats)\r\n        } catch (error) {\r\n            console.error('Failed to load team data:', error)\r\n            setLoadError('Failed to load team data. Please try again.')\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    // Load team data\r\n    useEffect(() => {\r\n        loadTeamData()\r\n    }, [])\r\n\r\n    const handleRefresh = () => {\r\n        loadTeamData()\r\n    }\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"flex items-center justify-center h-96\">\r\n                <div className=\"flex items-center space-x-3 p-6 bg-gradient-to-r from-slate-800/50 to-slate-900/50 backdrop-blur-xl rounded-2xl border border-white/10 shadow-2xl shadow-black/20\">\r\n                    <RefreshCw className=\"h-6 w-6 animate-spin text-pink-400\" />\r\n                    <span className=\"text-white font-semibold\">Loading Team Manager...</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"space-y-6\">\r\n            {/* Header */}\r\n            <div className=\"flex items-center justify-between p-6 bg-gradient-to-r from-slate-800/50 to-slate-900/50 backdrop-blur-xl rounded-2xl border border-white/10 shadow-2xl shadow-black/20\">\r\n                <div>\r\n                    <h1 className=\"text-3xl font-bold text-white\">🧠 TEAM MANAGER - UNIQUE CONTENT</h1>\r\n                    <p className=\"text-gray-300\">AI-Powered Team Management & Performance Tracking</p>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                    <Button onClick={handleRefresh} size=\"sm\" variant=\"default\" className=\"transition-all duration-200\">\r\n                        <RefreshCw className=\"h-4 w-4 mr-2\" />\r\n                        Refresh\r\n                    </Button>\r\n                    <Button size=\"sm\" variant=\"outline\" className=\"transition-all duration-200\">\r\n                        <UserPlus className=\"h-4 w-4 mr-2\" />\r\n                        Add Member\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Error Alert */}\r\n            {loadError && (\r\n                <Alert className=\"bg-gradient-to-r from-red-500/20 to-red-600/20 border-red-500/30 backdrop-blur-xl\">\r\n                    <AlertTriangle className=\"h-4 w-4 text-red-400\" />\r\n                    <AlertDescription className=\"text-red-200\">\r\n                        {loadError}\r\n                    </AlertDescription>\r\n                </Alert>\r\n            )}\r\n\r\n            {/* Team Stats Overview */}\r\n            {teamStats && (\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\r\n                    <Card className=\"relative hover:scale-105 transition-all duration-200\">\r\n                        <CardContent className=\"p-6\">\r\n                            <div className=\"flex items-center justify-between\">\r\n                                <div>\r\n                                    <p className=\"text-sm font-medium text-gray-300\">Team Members</p>\r\n                                    <p className=\"text-2xl font-bold text-white\">{teamStats.totalMembers}</p>\r\n                                    <p className=\"text-sm text-green-400\">{teamStats.activeMembers} active</p>\r\n                                </div>\r\n                                <Users className=\"h-8 w-8 text-blue-400\" />\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n\r\n                    <Card className=\"relative hover:scale-105 transition-all duration-200\">\r\n                        <CardContent className=\"p-6\">\r\n                            <div className=\"flex items-center justify-between\">\r\n                                <div>\r\n                                    <p className=\"text-sm font-medium text-gray-300\">Avg Performance</p>\r\n                                    <p className=\"text-2xl font-bold text-white\">{teamStats.averagePerformance}%</p>\r\n                                    <Progress value={teamStats.averagePerformance} className=\"mt-2\" />\r\n                                </div>\r\n                                <TrendingUp className=\"h-8 w-8 text-green-400\" />\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n\r\n                    <Card className=\"relative hover:scale-105 transition-all duration-200\">\r\n                        <CardContent className=\"p-6\">\r\n                            <div className=\"flex items-center justify-between\">\r\n                                <div>\r\n                                    <p className=\"text-sm font-medium text-gray-300\">Team ROI</p>\r\n                                    <p className=\"text-2xl font-bold text-white\">{teamStats.totalROI}x</p>\r\n                                    <p className=\"text-sm text-green-400\">+0.3x this week</p>\r\n                                </div>\r\n                                <Award className=\"h-8 w-8 text-yellow-400\" />\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n\r\n                    <Card className=\"relative hover:scale-105 transition-all duration-200\">\r\n                        <CardContent className=\"p-6\">\r\n                            <div className=\"flex items-center justify-between\">\r\n                                <div>\r\n                                    <p className=\"text-sm font-medium text-gray-300\">Team Mood</p>\r\n                                    <p className=\"text-2xl font-bold text-white\">{teamStats.averageMood}%</p>\r\n                                    <p className=\"text-sm text-blue-400\">Positive trend</p>\r\n                                </div>\r\n                                <Heart className=\"h-8 w-8 text-pink-400\" />\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n                </div>\r\n            )}\r\n\r\n            {/* Main Content */}\r\n            <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-4\">\r\n                <TabsList className=\"grid w-full grid-cols-8 bg-gradient-to-r from-slate-800/50 to-slate-900/50 backdrop-blur-xl border border-white/10 p-1 rounded-xl\">\r\n                    <TabsTrigger value=\"overview\" className=\"transition-all duration-200\">Overview</TabsTrigger>\r\n                    <TabsTrigger value=\"members\" className=\"transition-all duration-200\">Team Members</TabsTrigger>\r\n                    <TabsTrigger value=\"performance\" className=\"transition-all duration-200\">Performance</TabsTrigger>\r\n                    <TabsTrigger value=\"rewards\" className=\"transition-all duration-200\">Rewards</TabsTrigger>\r\n                    <TabsTrigger value=\"meetings\" className=\"transition-all duration-200\">Meetings</TabsTrigger>\r\n                    <TabsTrigger value=\"chat\" className=\"transition-all duration-200\">Team Chat</TabsTrigger>\r\n                    <TabsTrigger value=\"analytics\" className=\"transition-all duration-200\">Analytics</TabsTrigger>\r\n                    <TabsTrigger value=\"ai\" className=\"transition-all duration-200\">AI Tools</TabsTrigger>\r\n                </TabsList>\r\n\r\n                {/* Overview Tab */}\r\n                <TabsContent value=\"overview\" className=\"space-y-4\">\r\n                    <div className=\"p-6 bg-gradient-to-r from-blue-500/20 to-purple-500/20 rounded-xl border border-blue-500/30\">\r\n                        <h2 className=\"text-2xl font-bold text-white mb-4\">🎯 TEAM MANAGER OVERVIEW</h2>\r\n                        <p className=\"text-gray-300 mb-4\">This is the unique Team Manager interface - NOT the AI Business Dashboard!</p>\r\n                    </div>\r\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n                        {/* Quick Actions */}\r\n                        <Card>\r\n                            <CardHeader>\r\n                                <CardTitle className=\"flex items-center space-x-2\">\r\n                                    <Zap className=\"h-5 w-5\" />\r\n                                    <span>Team Quick Actions</span>\r\n                                </CardTitle>\r\n                            </CardHeader>\r\n                            <CardContent className=\"space-y-3\">\r\n                                <Button className=\"w-full justify-start\" variant=\"outline\">\r\n                                    <Calendar className=\"h-4 w-4 mr-2\" />\r\n                                    Schedule Team Meeting\r\n                                </Button>\r\n                                <Button className=\"w-full justify-start\" variant=\"outline\">\r\n                                    <Award className=\"h-4 w-4 mr-2\" />\r\n                                    Give Recognition\r\n                                </Button>\r\n                                <Button className=\"w-full justify-start\" variant=\"outline\">\r\n                                    <Brain className=\"h-4 w-4 mr-2\" />\r\n                                    Generate AI Insights\r\n                                </Button>\r\n                                <Button className=\"w-full justify-start\" variant=\"outline\">\r\n                                    <Users2 className=\"h-4 w-4 mr-2\" />\r\n                                    Add New Member\r\n                                </Button>\r\n                            </CardContent>\r\n                        </Card>\r\n\r\n                        {/* Alerts & Notifications */}\r\n                        <Card>\r\n                            <CardHeader>\r\n                                <CardTitle className=\"flex items-center space-x-2\">\r\n                                    <AlertTriangle className=\"h-5 w-5\" />\r\n                                    <span>Alerts & Notifications</span>\r\n                                </CardTitle>\r\n                            </CardHeader>\r\n                            <CardContent className=\"space-y-3\">\r\n                                <div className=\"flex items-center justify-between p-3 bg-red-500/10 rounded-lg border border-red-500/20\">\r\n                                    <div>\r\n                                        <p className=\"text-sm font-medium text-red-400\">Burnout Risk</p>\r\n                                        <p className=\"text-xs text-gray-400\">Farouk shows high stress levels</p>\r\n                                    </div>\r\n                                    <Badge variant=\"destructive\">High</Badge>\r\n                                </div>\r\n                                <div className=\"flex items-center justify-between p-3 bg-yellow-500/10 rounded-lg border border-yellow-500/20\">\r\n                                    <div>\r\n                                        <p className=\"text-sm font-medium text-yellow-400\">Meeting Reminder</p>\r\n                                        <p className=\"text-xs text-gray-400\">Weekly sync in 30 minutes</p>\r\n                                    </div>\r\n                                    <Badge variant=\"secondary\">Medium</Badge>\r\n                                </div>\r\n                                <div className=\"flex items-center justify-between p-3 bg-green-500/10 rounded-lg border border-green-500/20\">\r\n                                    <div>\r\n                                        <p className=\"text-sm font-medium text-green-400\">Achievement</p>\r\n                                        <p className=\"text-xs text-gray-400\">Ahmed completed 5 tasks today</p>\r\n                                    </div>\r\n                                    <Badge variant=\"default\">Low</Badge>\r\n                                </div>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </div>\r\n                </TabsContent>\r\n\r\n                {/* Members Tab */}\r\n                <TabsContent value=\"members\" className=\"space-y-4\">\r\n                    <TeamMembersDirectory teamMembers={teamMembers} />\r\n                </TabsContent>\r\n\r\n                {/* Performance Tab */}\r\n                <TabsContent value=\"performance\" className=\"space-y-4\">\r\n                    <PerformanceTracker teamMembers={teamMembers} />\r\n                </TabsContent>\r\n\r\n                {/* Rewards Tab */}\r\n                <TabsContent value=\"rewards\" className=\"space-y-4\">\r\n                    <RewardBonusEngine teamMembers={teamMembers} />\r\n                </TabsContent>\r\n\r\n                {/* Meetings Tab */}\r\n                <TabsContent value=\"meetings\" className=\"space-y-4\">\r\n                    <MeetingManager teamMembers={teamMembers} />\r\n                </TabsContent>\r\n\r\n                {/* Chat Tab */}\r\n                <TabsContent value=\"chat\" className=\"space-y-4\">\r\n                    <ChatSystem teamMembers={teamMembers} />\r\n                </TabsContent>\r\n\r\n                {/* Analytics Tab */}\r\n                <TabsContent value=\"analytics\" className=\"space-y-4\">\r\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n                        <AttendanceActivityHeatmap teamMembers={teamMembers} />\r\n                        <WeeklyMoodCheck teamMembers={teamMembers} />\r\n                        <WorkloadBalancer teamMembers={teamMembers} />\r\n                        <ROITracker teamMembers={teamMembers} />\r\n                        <CostValueAnalysis teamMembers={teamMembers} />\r\n                        <ProjectInvolvementMatrix teamMembers={teamMembers} />\r\n                    </div>\r\n                </TabsContent>\r\n\r\n                {/* AI Tools Tab */}\r\n                <TabsContent value=\"ai\" className=\"space-y-4\">\r\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n                        <ConflictRadar teamMembers={teamMembers} />\r\n                        <AIMoodStressTracker teamMembers={teamMembers} />\r\n                        <FeedbackGenerator teamMembers={teamMembers} />\r\n                        <LearningTracker teamMembers={teamMembers} />\r\n                        <TaskReflectionLog teamMembers={teamMembers} />\r\n                        <DecisionLogSystem teamMembers={teamMembers} />\r\n                        <HighlightsBoard teamMembers={teamMembers} />\r\n                        <PulsePolls teamMembers={teamMembers} />\r\n                        <FocusMode teamMembers={teamMembers} />\r\n                        <DistractionTracker teamMembers={teamMembers} />\r\n                        <RoleMatchingSystem teamMembers={teamMembers} />\r\n                        <MotivationDrivers teamMembers={teamMembers} />\r\n                        <MentorshipMatcher teamMembers={teamMembers} />\r\n                        <LeadershipLens teamMembers={teamMembers} />\r\n                        <BurnoutRadar teamMembers={teamMembers} />\r\n                        <AnonymousFeedbackEngine teamMembers={teamMembers} />\r\n                        <AISmartSuggestionsEngine teamMembers={teamMembers} />\r\n                        <AIMicroSprintMode teamMembers={teamMembers} />\r\n                        <PrivateVault teamMembers={teamMembers} />\r\n                        <ExternalSync teamMembers={teamMembers} />\r\n                    </div>\r\n                </TabsContent>\r\n            </Tabs>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { TeamManager } "],"names":[],"mappings":"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","debugId":null}}]
}