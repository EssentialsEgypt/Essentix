{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/pages/api/cash-log/monthly-summary.ts"],"sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next'\r\n\r\n// Mock database for demonstration\r\nlet monthlySummaries = [\r\n  {\r\n    year: 2024,\r\n    month: 1,\r\n    total_revenue: 25000,\r\n    total_ad_spend: 3500,\r\n    total_salaries: 10000,\r\n    total_bonuses: 2000,\r\n    total_expenses: 1850,\r\n    net_profit: 7650,\r\n    roi_percentage: 45.2\r\n  },\r\n  {\r\n    year: 2024,\r\n    month: 2,\r\n    total_revenue: 28000,\r\n    total_ad_spend: 4000,\r\n    total_salaries: 10000,\r\n    total_bonuses: 1500,\r\n    total_expenses: 2200,\r\n    net_profit: 10300,\r\n    roi_percentage: 58.1\r\n  }\r\n]\r\n\r\nexport default function handler(req: NextApiRequest, res: NextApiResponse) {\r\n  const { method } = req\r\n\r\n  switch (method) {\r\n    case 'GET':\r\n      // Get monthly summary with optional year/month filtering\r\n      const { year, month } = req.query\r\n      \r\n      let filteredSummaries = [...monthlySummaries]\r\n      \r\n      if (year) {\r\n        filteredSummaries = filteredSummaries.filter(summary => \r\n          summary.year === parseInt(year as string)\r\n        )\r\n      }\r\n      \r\n      if (month) {\r\n        filteredSummaries = filteredSummaries.filter(summary => \r\n          summary.month === parseInt(month as string)\r\n        )\r\n      }\r\n      \r\n      return res.status(200).json({ summaries: filteredSummaries })\r\n\r\n    case 'POST':\r\n      // Add new monthly summary\r\n      const newSummary = {\r\n        ...req.body,\r\n        id: Date.now()\r\n      }\r\n      \r\n      // Check if summary already exists for this year/month\r\n      const existingIndex = monthlySummaries.findIndex(summary => \r\n        summary.year === newSummary.year && summary.month === newSummary.month\r\n      )\r\n      \r\n      if (existingIndex !== -1) {\r\n        monthlySummaries[existingIndex] = newSummary\r\n        return res.status(200).json({ summary: newSummary })\r\n      } else {\r\n        monthlySummaries.push(newSummary)\r\n        return res.status(201).json({ summary: newSummary })\r\n      }\r\n\r\n    case 'PUT':\r\n      // Update existing monthly summary\r\n      const { id } = req.query\r\n      const summaryIndex = monthlySummaries.findIndex(summary => \r\n        summary.year === parseInt(req.body.year) && summary.month === parseInt(req.body.month)\r\n      )\r\n      \r\n      if (summaryIndex === -1) {\r\n        return res.status(404).json({ error: 'Monthly summary not found' })\r\n      }\r\n      \r\n      monthlySummaries[summaryIndex] = { ...monthlySummaries[summaryIndex], ...req.body }\r\n      return res.status(200).json({ summary: monthlySummaries[summaryIndex] })\r\n\r\n    case 'DELETE':\r\n      // Delete monthly summary\r\n      const { year: deleteYear, month: deleteMonth } = req.query\r\n      const deleteIndex = monthlySummaries.findIndex(summary => \r\n        summary.year === parseInt(deleteYear as string) && summary.month === parseInt(deleteMonth as string)\r\n      )\r\n      \r\n      if (deleteIndex === -1) {\r\n        return res.status(404).json({ error: 'Monthly summary not found' })\r\n      }\r\n      \r\n      const deletedSummary = monthlySummaries.splice(deleteIndex, 1)[0]\r\n      return res.status(200).json({ summary: deletedSummary })\r\n\r\n    default:\r\n      res.setHeader('Allow', ['GET', 'POST', 'PUT', 'DELETE'])\r\n      return res.status(405).json({ error: `Method ${method} Not Allowed` })\r\n  }\r\n} "],"names":[],"mappings":";;;AAEA,kCAAkC;AAClC,IAAI,mBAAmB;IACrB;QACE,MAAM;QACN,OAAO;QACP,eAAe;QACf,gBAAgB;QAChB,gBAAgB;QAChB,eAAe;QACf,gBAAgB;QAChB,YAAY;QACZ,gBAAgB;IAClB;IACA;QACE,MAAM;QACN,OAAO;QACP,eAAe;QACf,gBAAgB;QAChB,gBAAgB;QAChB,eAAe;QACf,gBAAgB;QAChB,YAAY;QACZ,gBAAgB;IAClB;CACD;AAEc,SAAS,QAAQ,GAAmB,EAAE,GAAoB;IACvE,MAAM,EAAE,MAAM,EAAE,GAAG;IAEnB,OAAQ;QACN,KAAK;YACH,yDAAyD;YACzD,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,IAAI,KAAK;YAEjC,IAAI,oBAAoB;mBAAI;aAAiB;YAE7C,IAAI,MAAM;gBACR,oBAAoB,kBAAkB,MAAM,CAAC,CAAA,UAC3C,QAAQ,IAAI,KAAK,SAAS;YAE9B;YAEA,IAAI,OAAO;gBACT,oBAAoB,kBAAkB,MAAM,CAAC,CAAA,UAC3C,QAAQ,KAAK,KAAK,SAAS;YAE/B;YAEA,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,WAAW;YAAkB;QAE7D,KAAK;YACH,0BAA0B;YAC1B,MAAM,aAAa;gBACjB,GAAG,IAAI,IAAI;gBACX,IAAI,KAAK,GAAG;YACd;YAEA,sDAAsD;YACtD,MAAM,gBAAgB,iBAAiB,SAAS,CAAC,CAAA,UAC/C,QAAQ,IAAI,KAAK,WAAW,IAAI,IAAI,QAAQ,KAAK,KAAK,WAAW,KAAK;YAGxE,IAAI,kBAAkB,CAAC,GAAG;gBACxB,gBAAgB,CAAC,cAAc,GAAG;gBAClC,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBAAE,SAAS;gBAAW;YACpD,OAAO;gBACL,iBAAiB,IAAI,CAAC;gBACtB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBAAE,SAAS;gBAAW;YACpD;QAEF,KAAK;YACH,kCAAkC;YAClC,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,KAAK;YACxB,MAAM,eAAe,iBAAiB,SAAS,CAAC,CAAA,UAC9C,QAAQ,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,KAAK,KAAK,SAAS,IAAI,IAAI,CAAC,KAAK;YAGvF,IAAI,iBAAiB,CAAC,GAAG;gBACvB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBAAE,OAAO;gBAA4B;YACnE;YAEA,gBAAgB,CAAC,aAAa,GAAG;gBAAE,GAAG,gBAAgB,CAAC,aAAa;gBAAE,GAAG,IAAI,IAAI;YAAC;YAClF,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,SAAS,gBAAgB,CAAC,aAAa;YAAC;QAExE,KAAK;YACH,yBAAyB;YACzB,MAAM,EAAE,MAAM,UAAU,EAAE,OAAO,WAAW,EAAE,GAAG,IAAI,KAAK;YAC1D,MAAM,cAAc,iBAAiB,SAAS,CAAC,CAAA,UAC7C,QAAQ,IAAI,KAAK,SAAS,eAAyB,QAAQ,KAAK,KAAK,SAAS;YAGhF,IAAI,gBAAgB,CAAC,GAAG;gBACtB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBAAE,OAAO;gBAA4B;YACnE;YAEA,MAAM,iBAAiB,iBAAiB,MAAM,CAAC,aAAa,EAAE,CAAC,EAAE;YACjE,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,SAAS;YAAe;QAExD;YACE,IAAI,SAAS,CAAC,SAAS;gBAAC;gBAAO;gBAAQ;gBAAO;aAAS;YACvD,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE,OAAO,CAAC,OAAO,EAAE,OAAO,YAAY,CAAC;YAAC;IACxE;AACF","debugId":null}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.dev.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n    }\n  } else {\n    if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1C,IAAIN,QAAQC,GAAG,CAACM,SAAS,eAAE;YACzBJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO;;QAEP;IACF,OAAO;;IAMP;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;yMAGzBD,QAAAA,EAAMC,4IAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,4IAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0],"debugId":null}}]
}