{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/pages/api/crm/activities.ts"],"sourcesContent":["import { NextApiRequest, NextApiResponse } from 'next'\r\n\r\ninterface Activity {\r\n  id: string\r\n  type: string\r\n  lead: string\r\n  date: string\r\n  duration: number\r\n  notes: string\r\n  outcome: string\r\n  nextAction: string\r\n  aiInsights?: {\r\n    sentiment: string\r\n    priority: string\r\n    recommendedFollowUp: string\r\n  }\r\n}\r\n\r\nconst mockActivities: Activity[] = [\r\n  {\r\n    id: \"act_001\",\r\n    type: \"call\",\r\n    lead: \"Ahmed Hassan\",\r\n    date: \"2024-01-20\",\r\n    duration: 30,\r\n    notes: \"Discussed proposal details and timeline\",\r\n    outcome: \"Positive\",\r\n    nextAction: \"Send follow-up email with ROI calculation\",\r\n    aiInsights: {\r\n      sentiment: \"Positive\",\r\n      priority: \"High\",\r\n      recommendedFollowUp: \"Schedule demo within 48 hours\"\r\n    }\r\n  },\r\n  {\r\n    id: \"act_002\",\r\n    type: \"meeting\",\r\n    lead: \"Mohamed Ali\",\r\n    date: \"2024-01-23\",\r\n    duration: 60,\r\n    notes: \"Contract negotiation and final terms discussion\",\r\n    outcome: \"Very Positive\",\r\n    nextAction: \"Prepare contract for signing\",\r\n    aiInsights: {\r\n      sentiment: \"Very Positive\",\r\n      priority: \"Critical\",\r\n      recommendedFollowUp: \"Send contract immediately\"\r\n    }\r\n  },\r\n  {\r\n    id: \"act_003\",\r\n    type: \"email\",\r\n    lead: \"Sara Mahmoud\",\r\n    date: \"2024-01-22\",\r\n    duration: 5,\r\n    notes: \"Sent initial proposal and pricing information\",\r\n    outcome: \"Neutral\",\r\n    nextAction: \"Follow up with discovery call\",\r\n    aiInsights: {\r\n      sentiment: \"Neutral\",\r\n      priority: \"Medium\",\r\n      recommendedFollowUp: \"Schedule discovery call this week\"\r\n    }\r\n  },\r\n  {\r\n    id: \"act_004\",\r\n    type: \"call\",\r\n    lead: \"Ahmed Hassan\",\r\n    date: \"2024-01-18\",\r\n    duration: 45,\r\n    notes: \"Initial discovery call - discussed pain points and requirements\",\r\n    outcome: \"Positive\",\r\n    nextAction: \"Send detailed proposal\",\r\n    aiInsights: {\r\n      sentiment: \"Positive\",\r\n      priority: \"High\",\r\n      recommendedFollowUp: \"Send proposal within 24 hours\"\r\n    }\r\n  },\r\n  {\r\n    id: \"act_005\",\r\n    type: \"meeting\",\r\n    lead: \"Sara Mahmoud\",\r\n    date: \"2024-01-21\",\r\n    duration: 30,\r\n    notes: \"Qualification call - confirmed budget and decision timeline\",\r\n    outcome: \"Positive\",\r\n    nextAction: \"Send pricing guide and case studies\",\r\n    aiInsights: {\r\n      sentiment: \"Positive\",\r\n      priority: \"Medium\",\r\n      recommendedFollowUp: \"Send relevant case studies\"\r\n    }\r\n  }\r\n]\r\n\r\nexport default function handler(req: NextApiRequest, res: NextApiResponse) {\r\n  if (req.method === 'GET') {\r\n    const { lead, type, outcome, dateFrom, dateTo } = req.query\r\n    \r\n    let filteredActivities = [...mockActivities]\r\n    \r\n    if (lead) {\r\n      filteredActivities = filteredActivities.filter(activity => activity.lead === lead)\r\n    }\r\n    \r\n    if (type) {\r\n      filteredActivities = filteredActivities.filter(activity => activity.type === type)\r\n    }\r\n    \r\n    if (outcome) {\r\n      filteredActivities = filteredActivities.filter(activity => activity.outcome === outcome)\r\n    }\r\n    \r\n    if (dateFrom) {\r\n      filteredActivities = filteredActivities.filter(activity => activity.date >= dateFrom.toString())\r\n    }\r\n    \r\n    if (dateTo) {\r\n      filteredActivities = filteredActivities.filter(activity => activity.date <= dateTo.toString())\r\n    }\r\n    \r\n    // Sort by date (newest first)\r\n    filteredActivities.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\r\n    \r\n    res.status(200).json({\r\n      success: true,\r\n      data: filteredActivities,\r\n      total: filteredActivities.length,\r\n      summary: {\r\n        totalDuration: filteredActivities.reduce((sum, activity) => sum + activity.duration, 0),\r\n        averageDuration: Math.round(filteredActivities.reduce((sum, activity) => sum + activity.duration, 0) / filteredActivities.length),\r\n        positiveOutcomes: filteredActivities.filter(activity => activity.outcome.includes('Positive')).length,\r\n        activitiesByType: filteredActivities.reduce((acc, activity) => {\r\n          acc[activity.type] = (acc[activity.type] || 0) + 1\r\n          return acc\r\n        }, {} as Record<string, number>)\r\n      }\r\n    })\r\n  } else if (req.method === 'POST') {\r\n    const newActivity = {\r\n      id: `act_${Date.now()}`,\r\n      ...req.body,\r\n      aiInsights: {\r\n        sentiment: req.body.outcome === 'Positive' || req.body.outcome === 'Very Positive' ? 'Positive' : 'Neutral',\r\n        priority: req.body.duration > 30 ? 'High' : 'Medium',\r\n        recommendedFollowUp: 'Schedule follow-up based on outcome'\r\n      }\r\n    }\r\n    \r\n    mockActivities.push(newActivity)\r\n    \r\n    res.status(201).json({\r\n      success: true,\r\n      data: newActivity,\r\n      message: 'Activity created successfully'\r\n    })\r\n  } else if (req.method === 'PUT') {\r\n    const { id } = req.query\r\n    const activityIndex = mockActivities.findIndex(activity => activity.id === id)\r\n    \r\n    if (activityIndex === -1) {\r\n      return res.status(404).json({ error: 'Activity not found' })\r\n    }\r\n    \r\n    mockActivities[activityIndex] = { ...mockActivities[activityIndex], ...req.body }\r\n    \r\n    res.status(200).json({\r\n      success: true,\r\n      data: mockActivities[activityIndex],\r\n      message: 'Activity updated successfully'\r\n    })\r\n  } else if (req.method === 'DELETE') {\r\n    const { id } = req.query\r\n    const activityIndex = mockActivities.findIndex(activity => activity.id === id)\r\n    \r\n    if (activityIndex === -1) {\r\n      return res.status(404).json({ error: 'Activity not found' })\r\n    }\r\n    \r\n    mockActivities.splice(activityIndex, 1)\r\n    \r\n    res.status(200).json({\r\n      success: true,\r\n      message: 'Activity deleted successfully'\r\n    })\r\n  } else {\r\n    res.setHeader('Allow', ['GET', 'POST', 'PUT', 'DELETE'])\r\n    res.status(405).json({ error: 'Method not allowed' })\r\n  }\r\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.dev.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n    }\n  } else {\n    if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1C,IAAIN,QAAQC,GAAG,CAACM,SAAS,eAAE;YACzBJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO;;QAEP;IACF,OAAO;;IAMP;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":["file:///D:/hamzaa/SocialMedia/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;yMAGzBD,QAAAA,EAAMC,4HAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,4HAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0],"debugId":null}}]
}